section.section
  header.section__header
    h3.section__h3 anchorLinkFilter
  div.section__content
    h4.section__h4 Description
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Function
    dl.section__dl
      dt.section__dt Default：
      dd.section__dd null
    p 可选，API 文档中，正文标题的锚点链接地址生成函数。
    h4.section__h4 Parameters
    h5.section__h4 tag
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd String
    p 当前标题的 tagName。小写的：h1~6。
    h5.section__h4 title
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd String
    p 当前标题的文本内容。
    h5.section__h4 id
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Number
    p outline.js 为当前标题生成 id 号。
    h4.section__h4 Returns
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd String
    p 返回最终希望生成锚点链接的文本内容。
    pre.section__pre
      code.section__code.
        const defaults = Outline.DEFAULTS
        let outline

        defaults.selector = 'h2,h3'
        defaults.title = false
        defaults.showCode = false
        defaults.position = 'sticky'
        defaults.parentElement = '#aside'
        defaults.scrollElement = '#main'
        defaults.articleElement = '#article'
        defaults.homepage = './index.html'
        defaults.git = 'https://github.com/yaohaixiao/outline.js'
        defaults.tags = 'https://github.com/yaohaixiao/outline.js/tags'
        defaults.issues = 'https://github.com/yaohaixiao/outline.js/issues'
        defaults.print = {
          element: '#article',
          title: 'Outline.js'
        }
        defaults.chapterTextFilter = (text) => {
          return text.replace(/\(.*?\)/, '()')
        }
        defaults.anchorLinkFilter = (tag, title, id) => {
          return `${tag}-${title}-${id}`
        }
        outline = new Outline(defaults)
