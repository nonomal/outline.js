section.section
  header.section__header
    h3.section__h3 reader
  div.section__content
    h4.section__h4 Since
    p.section__dd 3.32.0
    p 说明：3.32.0 以前的版本，此属性的原名为 print，另外，reader.element 属性也调整为了 reader.target。请升级后在初始化配置参数时注意调整。
    h4.section__h4 Description
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Object
    dl.section__dl
      dt.section__dt Default：
      dd.section__dd {target: '', title: '', enterReadingTip: ‘进入阅读模式，按 ESC 键可退出阅读模式’, allowSpeak: false}
    p 可选，自定义的是否自动为文章页面创建打印样式。
    dl.section__dl
      dt.section__dt target：
      dd.section__dd （必须）要打印的文章区域，DOM 元素或者选择器字符串；
    dl.section__dl
      dt.section__dt title：
      dd.section__dd （可选）要打印的文章标题。如果 element 区域有 h1 标签则无需设置。可以直接设置标题文本，也可以是文章页的主标题 DOM 元素；
    dl.section__dl
      dt.section__dt enterReadingTip：
      dd.section__dd （可选）进入阅读模式的提示文本，默认值：‘进入阅读模式，按 ESC 键可退出阅读模式’；
    dl.section__dl
      dt.section__dt allowSpeak：
      dd.section__dd （可选）针对现代浏览器支持 Web Speech API，是否开启语音阅读功能。默认值：false；
    pre.section__pre
      code.section__code.
        const defaults = Outline.DEFAULTS
        let outline

        defaults.position = 'sticky'
        defaults.stickyHeight = 86
        defaults.parentElement = '#aside'
        defaults.scrollElement = '#main'
        defaults.homepage = './index.html'
        defaults.git = 'https://github.com/yaohaixiao/outline.js'
        defaults.tags = 'https://github.com/yaohaixiao/outline.js/tags'
        defaults.issues = 'https://github.com/yaohaixiao/outline.js/issues'
        defaults.reader = {
          target: '#article',
          // 可以直接设置标题文本，也可以是文章页的主标题 DOM 元素。
          // 纯静态的页面，设置 DOM 元素，可能更好，确保每个页面的主标题 DOM 元素的选择器不变
          // 则 title 会是一个可变的值，这样比直接设置标题文本更加灵活；
          title: document.querySelector('.title'),
          // 进入阅读模式的提示消息文本
          enterReadingTip: '进入阅读模式，按 ESC 键可退出阅读模式',
          // 开启语音阅读
          allowSpeak: true
        }
        outline = new Outline(defaults)
    p 演示地址：
      a(target="_blank" href="https://yaohaixiao.github.io/outline.js/examples/flex.html") https://yaohaixiao.github.io/outline.js/examples/flex.html
