{"version":3,"file":"outline.min.js","sources":["src/utils/types/isString.js","src/utils/lang/hasOwn.js","src/utils/lang/toString.js","src/utils/types/isObject.js","src/base.js","src/utils/lang/extend.js","src/utils/types/isFunction.js","src/utils/types/isElement.js","src/utils/lang/later.js","src/utils/lang/easeInQuad.js","src/utils/dom/_getScrollElement.js","src/utils/dom/scrollTo.js","src/utils/types/isNumber.js","src/utils/dom/matches.js","src/utils/dom/getParentOrHost.js","src/utils/event/enum.js","src/utils/event/_off.js","src/utils/event/_delete.js","src/utils/event/purgeElement.js","src/utils/event/getListeners.js","src/utils/event/off.js","src/utils/event/on.js","src/utils/event/getTarget.js","src/utils/dom/resolveTextNode.js","src/utils/dom/closest.js","src/utils/event/stop.js","src/utils/observer/_subscribers.js","src/utils/observer/_hasDirectSubscribersFor.js","src/utils/observer/has.js","src/utils/observer/_hasSubscribers.js","src/utils/observer/emit.js","src/utils/types/isTypedArray.js","src/utils/types/isArray.js","src/utils/icons.js","src/utils/lang/trim.js","src/utils/dom/setAttribute.js","src/utils/dom/createElement.js","src/utils/types/isFragment.js","src/utils/dom/hasClass.js","src/utils/dom/removeClass.js","src/_resetHeading.js","src/utils/types/isEmpty.js","src/utils/lang/groupBy.js","src/getChapters.js","src/utils/lang/stripTags.js","src/_getChapterParentIdByDiffer.js","src/_getChaptersWithCode.js","src/anchors.js","src/_updateHeading.js","src/utils/dom/addClass.js","src/drawer.js","src/utils/event/emit.js","src/utils/dom/offsetTop.js","src/chapters.js","src/_paintChapters.js","src/utils/dom/intersection.js","src/_createButton.js","src/toolbar.js","src/utils/lang/guid.js","src/utils/observer/_removeSubscriber.js","src/utils/observer/off.js","src/utils/observer/_removeSubscriberByToken.js","src/outline.js","src/utils/observer/on.js"],"sourcesContent":["/**\r\n * 检测数据是否为 String 类型\r\n * ========================================================================\r\n * @method isArray\r\n * @param {*} str\r\n * @returns {boolean}\r\n */\r\nconst isString = (str) => {\r\n  return typeof str === 'string'\r\n}\r\n\r\nexport default isString\r\n","/**\r\n * 检测对象自身属性中是否具有指定的属性。\r\n * ========================================================================\r\n * @method hasOwn\r\n * @param {Object} obj - （必须）检测的目标对象\r\n * @param {String} prop - （必须）属性名\r\n * @returns {Boolean}\r\n */\r\nconst hasOwn = (obj, prop) => {\r\n  const hasOwnProperty = Object.prototype.hasOwnProperty\r\n  return obj && hasOwnProperty.call(obj, prop)\r\n}\r\n\r\nexport default hasOwn\r\n","const toString = Object.prototype.toString\r\n\r\n/**\r\n * Object 对象原型上的 toString 方法\r\n * ========================================================================\r\n * @method toString\r\n * @param {*} val\r\n * @returns {string}\r\n */\r\nexport default toString\r\n","import toString from '../lang/toString'\r\n\r\n/**\r\n * 检测数据是否为 Object 类型\r\n * ========================================================================\r\n * @method isObject\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isObject = (o) => {\r\n  return toString.apply(o) === '[object Object]' && o !== null\r\n}\r\n\r\nexport default isObject\r\n","import isString from './utils/types/isString'\r\nimport hasOwn from './utils/lang/hasOwn'\r\nimport isObject from './utils/types/isObject'\r\nimport extend from './utils/lang/extend'\r\n\r\nclass Base {\r\n  constructor(options) {\r\n    this.attrs = {}\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    this.attr(options).render().addListeners()\r\n    return this\r\n  }\r\n\r\n  attr(prop, value) {\r\n    const attrs = this.attrs\r\n\r\n    if (isString(prop)) {\r\n      // 只能扩展 attrs 中已有的属性\r\n      if (value && hasOwn(attrs, prop)) {\r\n        // 更新单个配置信息\r\n        attrs[prop] = value\r\n        return this\r\n      }\r\n\r\n      // 只传递 prop 参数，则返回对应的属性值\r\n      return attrs[prop]\r\n    } else if (isObject(prop)) {\r\n      // 批量更新配置信息\r\n      extend(attrs, prop)\r\n\r\n      return this\r\n    } else if (arguments.length === 0) {\r\n      // 不传递参数，直接返回整个\r\n      return attrs\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  render() {\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    this.removeListeners()\r\n    return this\r\n  }\r\n\r\n  reload(options) {\r\n    this.destroy().initialize(this.attr(options))\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    return this\r\n  }\r\n}\r\n\r\nexport default Base\r\n","import hasOwn from './hasOwn'\r\n\r\n/**\r\n * 扩展对象\r\n * ========================================================================\r\n * @method extend\r\n * @param {Object} origin\r\n * @param {Object} source\r\n */\r\nconst extend = (origin, source) => {\r\n  const keys = Object.keys(source)\r\n\r\n  keys.forEach((prop) => {\r\n    if (hasOwn(source, prop)) {\r\n      origin[prop] = source[prop]\r\n    }\r\n  })\r\n}\r\n\r\nexport default extend\r\n","import toString from '../lang/toString'\r\n\r\n/**\r\n * 检测测试数据是否为 Function 类型\r\n * ========================================================================\r\n * @method isFunction\r\n * @param {*} val - （必须）待检测的数据\r\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\r\n */\r\nconst isFunction = (val) => {\r\n  return (\r\n    typeof val === 'function' || toString.apply(val) === '[object Function]'\r\n  )\r\n}\r\n\r\nexport default isFunction\r\n","/**\r\n * 检测数据是否为 HTMLElement DOM 节点\r\n * ========================================================================\r\n * @method isElement\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isElement = (o) => {\r\n  return o && o.nodeName && o.tagName && o.nodeType === 1\r\n}\r\n\r\nexport default isElement\r\n","import isFunction from '../types/isFunction'\r\n\r\n/**\r\n * later - 延迟执行方法\r\n * ========================================================================\r\n * @method later\r\n * @param {Function} fn\r\n * @param {Number} [delay]\r\n * @returns {number|boolean}\r\n */\r\nconst later = (fn, delay = 300) => {\r\n  if (!isFunction(fn)) {\r\n    return false\r\n  }\r\n\r\n  return setTimeout(() => {\r\n    fn()\r\n  }, delay)\r\n}\r\n\r\nexport default later\r\n","/**\r\n * 返回给定值的平方值\r\n * ========================================================================\r\n * @method easeInQuad\r\n * @param {Number} x\r\n * @returns {number}\r\n */\r\nconst easeInQuad = (x) => {\r\n  return x * x\r\n}\r\n\r\nexport default easeInQuad\r\n","import isString from '../types/isString'\r\nimport isElement from '../types/isElement'\r\n\r\nconst _getScrollElement = (scrollElement = null) => {\r\n  let $rootElements\r\n  let $scrollElement\r\n\r\n  if (!scrollElement) {\r\n    $rootElements = document.querySelectorAll('html,body')\r\n    $scrollElement =\r\n      $rootElements[0].scrollTop - $rootElements[1].scrollTop >= 0\r\n        ? $rootElements[0]\r\n        : $rootElements[1]\r\n  } else {\r\n    if (isString(scrollElement)) {\r\n      $scrollElement = document.querySelector(scrollElement)\r\n    } else if (isElement(scrollElement)) {\r\n      $scrollElement = scrollElement\r\n    }\r\n  }\r\n\r\n  return $scrollElement\r\n}\r\n\r\nexport default _getScrollElement\r\n","import easeInQuad from '../lang/easeInQuad'\r\nimport isFunction from '../types/isFunction'\r\nimport isNumber from '../types/isNumber'\r\nimport _getScrollElement from './_getScrollElement'\r\n\r\nlet timer = null\r\n\r\n/**\r\n * 指定 rootElement DOM 节点滚动到指定 top 位置\r\n * ========================================================================\r\n * @method scrollTo\r\n * @param {HTMLElement|Object} [scrollElement] - （必须）要滚动的 DOM 节点\r\n * @param {Number} top - （必须）滚动的 scrollTop 数值\r\n * @param {Function|Number} [afterStop] - （可选）滚动完成的回调函数或者滚动的速率值\r\n * @param {Number} [speed] - 可选）滚动的速率值\r\n */\r\nconst scrollTo = (scrollElement, top, afterStop, speed = 30) => {\r\n  const $scrollElement = _getScrollElement(scrollElement)\r\n  let scrollTop = $scrollElement.scrollTop\r\n  let step = 0\r\n  const distance = top - scrollTop\r\n  const MAX_HEIGHT = $scrollElement.scrollHeight\r\n  const MAX_TOP = top - MAX_HEIGHT <= 0 ? top : MAX_HEIGHT\r\n  const stop = () => {\r\n    clearTimeout(timer)\r\n    timer = null\r\n  }\r\n  const play = () => {\r\n    if (timer) {\r\n      stop()\r\n    }\r\n\r\n    step += 3\r\n\r\n    // 线上滚动\r\n    if (distance < 0) {\r\n      scrollTop -= easeInQuad(step)\r\n      $scrollElement.scrollTop = scrollTop\r\n\r\n      if (scrollTop <= top) {\r\n        $scrollElement.scrollTop = top\r\n        stop()\r\n\r\n        if (isFunction(afterStop)) {\r\n          afterStop(top)\r\n        }\r\n\r\n        return false\r\n      }\r\n    } else {\r\n      scrollTop += easeInQuad(step)\r\n      $scrollElement.scrollTop = scrollTop\r\n\r\n      if (scrollTop >= MAX_TOP) {\r\n        $scrollElement.scrollTop = MAX_TOP\r\n        stop()\r\n\r\n        if (isFunction(afterStop)) {\r\n          afterStop(MAX_TOP)\r\n        }\r\n\r\n        return false\r\n      }\r\n    }\r\n\r\n    timer = setTimeout(play, isNumber(afterStop) ? afterStop : speed)\r\n  }\r\n\r\n  play()\r\n}\r\n\r\nexport default scrollTo\r\n","/**\r\n * 检测数据是否为 Number 类型\r\n * ========================================================================\r\n * @method isNumber\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isNumber = (o) => {\r\n  return typeof o === 'number'\r\n}\r\n\r\nexport default isNumber\r\n","/**\r\n * 获取 options 节点下匹配 selector 选择器的 DOM 节点\r\n * ========================================================================\r\n * Element.matches() 方法可以用来判断 DOM 元素是否与给定的选择器匹配，事件代理判断是\r\n * 否触发绑定的代理事件回调函数，关键就是使用 Element.matches() 辨别当前事件触发的目\r\n * 标 DOM 元素是否为事件代理所期望触发的目标。\r\n * ========================================================================\r\n * @method matches\r\n * @see https://developer.mozilla.org/en-US/docs/web/api/element/matches\r\n * @param {HTMLElement} el - （必须）DOM 元素\r\n * @param {String} selector - （必须）匹配 DOM 元素的选择器\r\n * @returns {Boolean}\r\n */\r\nconst matches = (el, selector = '') => {\r\n  const sel = selector.replace(/^>/i, '')\r\n\r\n  if (!selector || !sel || !el) {\r\n    return false\r\n  }\r\n\r\n  /* istanbul ignore else */\r\n  if (el.matches) {\r\n    return el.matches(sel)\r\n  } else if (el.msMatchesSelector) {\r\n    return el.msMatchesSelector(sel)\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport default matches\r\n","/**\r\n * 获取 DOM 元素的父节点\r\n * ========================================================================\r\n * @method getParentOrHost\r\n * @param {*|HTMLElement} el - （必须）要获取父节点的 DOM 元素\r\n * @returns {*|HTMLElement}\r\n */\r\nconst getParentOrHost = (el) => {\r\n  return el.host && el !== document && el.host.nodeType\r\n    ? el.host\r\n    : el.parentNode\r\n}\r\n\r\nexport default getParentOrHost\r\n","export const CAPTURE_EVENTS = [\r\n  'focusout',\r\n  'blur',\r\n  'focusin',\r\n  'focus',\r\n  'load',\r\n  'unload',\r\n  'mouseenter',\r\n  'mouseleave'\r\n]\r\n","import { CAPTURE_EVENTS } from './enum'\r\nimport _delete from './_delete'\r\n\r\n/**\r\n * （私有方法）取消 type 类型的代理事件绑定\r\n * ========================================================================\r\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\r\n * ========================================================================\r\n * @method _off\r\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\r\n * @param {String} type - （必须）事件类型\r\n * @param {Function} fn - （必须）事件处理器回调函数\r\n * @private\r\n */\r\nconst _off = (el, type, fn) => {\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n\r\n  /* istanbul ignore else */\r\n  if (fn._delegateListener) {\r\n    fn = fn._delegateListener\r\n    delete fn._delegateListener\r\n  }\r\n\r\n  // 移除缓存的 _listeners 数据\r\n  _delete(el, type, fn)\r\n\r\n  el.removeEventListener(type, fn, capture)\r\n}\r\n\r\nexport default _off\r\n","/**\r\n * 删除 DOM 元素缓存的 _listeners 数据\r\n * ========================================================================\r\n * @method _delete\r\n * @param {HTMLElement} el - 要删除 listener 的 DOM 元素\r\n * @param {String} type - 事件类型（名称）\r\n * @param {Function} [fn] - 事件处理器回调函数\r\n */\r\nconst _delete = function (el, type, fn) {\r\n  const listeners = el._listeners\r\n  let index = -1\r\n\r\n  if (listeners.length < 1) {\r\n    return false\r\n  }\r\n\r\n  // 移除缓存的 _listeners 数据\r\n  listeners.forEach((listener, i) => {\r\n    const handler = listener.fn\r\n\r\n    if (type === listener.type) {\r\n      index = i\r\n\r\n      if (handler === fn) {\r\n        index = i\r\n      }\r\n    }\r\n  })\r\n\r\n  /* istanbul ignore else */\r\n  if (index > -1) {\r\n    listeners.splice(index, 1)\r\n  }\r\n}\r\n\r\nexport default _delete\r\n","import isString from '../types/isString'\r\nimport isElement from '../types/isElement'\r\nimport getListeners from './getListeners'\r\nimport _off from './_off'\r\n\r\n/**\r\n * 销毁（type 类型的）代理事件绑定\r\n * ========================================================================\r\n * 1. 设置了事件类型 type，则销毁指定类型的事件绑定，否则清除所有代理事件绑定\r\n * 2. recurse 设置为 true，递归销毁子节点全部事件绑定\r\n * ========================================================================\r\n * @method purgeElement\r\n * @param {HTMLElement|String} el - （必须）DOM 元素或者其选择器\r\n * @param {String|Boolean} type - （必须）事件类型\r\n * @param {Boolean} [recurse] - （可选）是否递归销毁子节点所有事件绑定\r\n */\r\nconst purgeElement = function (el, type, recurse = false) {\r\n  const $element = isString(el) ? document.querySelector(el) : el\r\n  const $children = $element.childNodes\r\n  const listeners = getListeners($element, type)\r\n\r\n  listeners.forEach((listener) => {\r\n    _off($element, listener.type, listener.fn)\r\n  })\r\n\r\n  if (\r\n    (recurse || type === true || arguments.length === 1) &&\r\n    $element &&\r\n    $children\r\n  ) {\r\n    $children.forEach(($child) => {\r\n      if (isElement($child)) {\r\n        purgeElement($child, type, recurse)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default purgeElement\r\n","import isString from '../types/isString'\r\n\r\n/**\r\n * 获取 DOM 元素（type 事件类型）事件绑定信息\r\n * ========================================================================\r\n * 如果设置了事件类型 type， 则返回指定类型的事件绑定信息，否则返回所有事件绑定信息\r\n * ========================================================================\r\n * @methods getListeners\r\n * @param {HTMLElement} el - （必须）要获取事件绑定信息的 DOM 元素\r\n * @param {String} [type] - （可选）事件类型\r\n * @returns {Array} - 已绑定的事件信息\r\n */\r\nconst getListeners = (el, type) => {\r\n  let listeners = el._listeners || []\r\n\r\n  if (isString(type) && type) {\r\n    listeners = listeners.filter((listener) => {\r\n      return listener.type === type\r\n    })\r\n  }\r\n\r\n  return listeners\r\n}\r\n\r\nexport default getListeners\r\n","import purgeElement from './purgeElement'\r\nimport isFunction from '../types/isFunction'\r\nimport _off from './_off'\r\n\r\n/**\r\n * 取消 type 类型的代理事件绑定\r\n * ========================================================================\r\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\r\n * ========================================================================\r\n * @method off\r\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\r\n * @param {String} type - （必须）事件类型\r\n * @param {Function} [fn] - （可选）事件处理器回调函数\r\n */\r\nconst off = (el, type, fn) => {\r\n  // 如果不设置 fn 参数，默认清除 el 元素上绑定的所有事件处理器\r\n  if (!isFunction(fn)) {\r\n    return purgeElement(el, type)\r\n  }\r\n\r\n  _off(el, type, fn)\r\n}\r\n\r\nexport default off\r\n","import closest from '../dom/closest'\r\nimport off from './off'\r\nimport getTarget from './getTarget'\r\n\r\nimport { CAPTURE_EVENTS } from './enum'\r\n\r\n/**\r\n * 绑定代理事件\r\n * ========================================================================\r\n * @method on\r\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\r\n * @param {String} selector - （必须）事件代理目标 DOM 元素的选择器\r\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\r\n * @param {Function|Object} fn - （可选） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\r\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\r\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\r\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\r\n * @param {Boolean} once - （可选）是否仅触发一次\r\n */\r\nconst on = (el, selector, type, fn, data, context, once = false) => {\r\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n\r\n  const listener = function (evt) {\r\n    const target = getTarget(evt)\r\n    // 通过 Element.matches 方法获得点击的目标元素\r\n    const delegateTarget = closest(target, selector, el)\r\n    let overrideContext = context || el\r\n\r\n    evt.delegateTarget = delegateTarget\r\n\r\n    // 当设置为 true 时，则事件处理器回调函数的\r\n    // this 上下文指向为 data 对象\r\n    if (context === true) {\r\n      overrideContext = data\r\n    }\r\n\r\n    /* istanbul ignore else */\r\n    if (delegateTarget) {\r\n      // 仅触发一次\r\n      /* istanbul ignore else */\r\n      if (once === true) {\r\n        off(el, type, listener)\r\n      }\r\n\r\n      fn.call(overrideContext, evt, data)\r\n    }\r\n  }\r\n\r\n  if (!el._listeners) {\r\n    el._listeners = []\r\n  }\r\n\r\n  // 缓存 options 元素绑定的事件处理器\r\n  el._listeners.push({\r\n    el,\r\n    selector,\r\n    type,\r\n    fn: listener,\r\n    data,\r\n    context,\r\n    capture\r\n  })\r\n\r\n  // 缓存包装后的事件处理器\r\n  fn._delegateListener = listener\r\n\r\n  el.addEventListener(type, listener, capture)\r\n}\r\n\r\nexport default on\r\n","import resolveTextNode from '../dom/resolveTextNode'\r\n\r\n/**\r\n * 返回触发事件的 target DOM 元素\r\n * ========================================================================\r\n * @method getTarget\r\n * @param {Event} evt - Event 对象\r\n * @return {HTMLElement} - Event 对象的 target DOM 元素\r\n */\r\nconst getTarget = function (evt) {\r\n  const target = evt.target\r\n\r\n  return resolveTextNode(target)\r\n}\r\n\r\nexport default getTarget\r\n","/**\r\n * 在某些情况下，某些浏览器（例如：Safari 浏览器）会返回实际的目标元素内部的文本节点。\r\n * resolveTextNode() 方法则会返回实际的目标节点。\r\n * ========================================================================\r\n * @method resolveTextNode\r\n * @param {HTMLElement|Text} el - 要解析的节点\r\n * @return {*|HTMLElement} - 实际的目标 DOM 节点\r\n */\r\nconst resolveTextNode = function (el) {\r\n  if (el && el.nodeType === 3) {\r\n    return el.parentNode\r\n  }\r\n\r\n  return el\r\n}\r\n\r\nexport default resolveTextNode\r\n","import matches from './matches'\r\nimport getParentOrHost from './getParentOrHost'\r\n\r\n/**\r\n * 获取 options 元素父元素最近的包含 selector 选择器的元素\r\n * ========================================================================\r\n * @method closest\r\n * @param {HTMLElement} el - （必须）DOM 元素\r\n * @param {String} selector - （必须）DOM 元素的选择其\r\n * @param {HTMLElement} [ctx] - （必须）比对的 DOM 元素\r\n * @param {Boolean} [includeCTX] - （必须）是否包含 context DOM 元素\r\n * @returns {null|HTMLElement} - 返回最接近的 DOM 元素\r\n */\r\nconst closest = (el, selector, ctx, includeCTX) => {\r\n  const context = ctx || document\r\n\r\n  if (!el) {\r\n    return null\r\n  }\r\n\r\n  do {\r\n    /* istanbul ignore else */\r\n    if (\r\n      (selector != null &&\r\n        (selector[0] === '>'\r\n          ? el.parentNode === context && matches(el, selector)\r\n          : matches(el, selector))) ||\r\n      (includeCTX && el === context)\r\n    ) {\r\n      return el\r\n    }\r\n\r\n    /* istanbul ignore else */\r\n    if (el === context) {\r\n      break\r\n    }\r\n\r\n    /* jshint boss:true */\r\n  } while ((el = getParentOrHost(el)))\r\n}\r\n\r\nexport default closest\r\n","/**\r\n * 停止事件（阻止默认行为和阻止事件的捕获或冒泡）\r\n * ========================================================================\r\n * @method stop\r\n * @param {Event} evt - 事件对象\r\n *\r\n * @example\r\n * <div id=\"nav\" class=\"nav\">\r\n *   <a id=\"service\" class=\"anchor\" href=\"https://www.yaohaixiao.com/serivce\">Service</a>\r\n *   <a id=\"help\" class=\"anchor\" href=\"https://www.yaohaixiao.com/help\">Help</a>\r\n * </div>\r\n *\r\n * const $nav = document.querySelector('#nav')\r\n * const $service = document.querySelector('.anchor')\r\n *\r\n * on($nav, 'click', function(evt) {\r\n *   console.log('你点击了导航栏')\r\n * })\r\n *\r\n * on($anchor, 'click', function(evt) {\r\n *   console.log('tagName', this.tagName)\r\n *\r\n *   // 工作台输出：'a'\r\n *   // 不会触发事件冒泡，输出：'你点击了导航栏'\r\n *   // 也不会切换到 href 属性的页面，阻止了点击链接的默认行为\r\n *   stopEvent(evt)\r\n * })\r\n */\r\nconst stop = function (evt) {\r\n  evt.stopPropagation()\r\n  evt.preventDefault()\r\n}\r\n\r\nexport default stop\r\n","/**\r\n * 存储订阅者（主题和处理器的）私有对象\r\n * ========================================================================\r\n * @type {{}}\r\n * @private\r\n */\r\nconst _subscribers = {}\r\n\r\nexport default _subscribers\r\n","import _subscribers from './_subscribers'\r\nimport hasOwn from '../lang/hasOwn'\r\n\r\n/**\r\n * 判断是否存在与给定 topic 完全匹配的订阅者信息\r\n * ========================================================================\r\n * @method _hasDirectSubscribersFor\r\n * @param {String} topic - （必须）订阅主题字符串\r\n * @returns {Boolean}\r\n */\r\nconst _hasDirectSubscribersFor = (topic) => {\r\n  return hasOwn(_subscribers, topic) && _subscribers[topic].length > 0\r\n}\r\n\r\nexport default _hasDirectSubscribersFor\r\n","import _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\r\nimport _hasSubscribers from './_hasSubscribers'\r\n\r\n/**\r\n * 判断是否存在包含 topic 指定的订阅者信息\r\n * ========================================================================\r\n * @method has\r\n * @param {String} topic - （必须）主题名称\r\n * @param {Boolean} [isDirect] - （可选）是否为直接的主题，默认值：true\r\n * @returns {Boolean}\r\n */\r\nconst has = (topic, isDirect = true) => {\r\n  return isDirect ? _hasDirectSubscribersFor(topic) : _hasSubscribers(topic)\r\n}\r\n\r\nexport default has\r\n","import _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\r\n\r\n/**\r\n * 判断是否存在包含给定 topic 相关的订阅者信息\r\n * ========================================================================\r\n * @method _hasSubscribers\r\n * @param {String} topic - （必须）订阅主题字符串\r\n * @returns {Boolean}\r\n */\r\nconst _hasSubscribers = (topic) => {\r\n  let found = _hasDirectSubscribersFor(topic)\r\n  let position = topic.lastIndexOf('.')\r\n\r\n  while (!found && position !== -1) {\r\n    topic = topic.substring(0, position)\r\n    position = topic.lastIndexOf('.')\r\n    found = _hasDirectSubscribersFor(topic)\r\n  }\r\n\r\n  return found\r\n}\r\n\r\nexport default _hasSubscribers\r\n","import isTypedArray from '../types/isTypedArray'\r\nimport _subscribers from './_subscribers'\r\nimport has from './has'\r\nimport _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\r\n\r\n/**\r\n * （异步）发布订阅主题信息\r\n * ========================================================================\r\n * 主题默认是异步发布的。确保在消费者处理主题时，主题的发起者不会被阻止。\r\n * ========================================================================\r\n * @method emit\r\n * @param {String} topic - （必须）主题名称\r\n * @param {Object} data - （必须）数据对象\r\n * @param {Boolean} async - (可选) 是否异步发布\r\n */\r\nconst emit = (topic, data, async = true) => {\r\n  const execute = (topic) => {\r\n    if (!_hasDirectSubscribersFor(topic)) {\r\n      return false\r\n    }\r\n\r\n    _subscribers[topic].forEach((subscriber) => {\r\n      // 针对 mqtt 消息服务返回的 Uint8Array 类似的 typed arrays 格式的数据\r\n      // 采用 toString() 方法转化为普通（JSON）字符串\r\n      const message = isTypedArray(data) ? data.toString() : data\r\n\r\n      subscriber.callback.call(subscriber.context || subscriber, message)\r\n    })\r\n  }\r\n  const deliver = () => {\r\n    let subscriber = topic\r\n    let position = topic.lastIndexOf('.')\r\n\r\n    while (position !== -1) {\r\n      subscriber = subscriber.substring(0, position)\r\n      position = subscriber.lastIndexOf('.')\r\n\r\n      execute(subscriber)\r\n    }\r\n\r\n    // 执行 topic 对应的处理器\r\n    execute(topic)\r\n    // 执行特殊 topic：'*'（监听全部消息的发布）\r\n    execute('*')\r\n  }\r\n\r\n  if (!has(topic)) {\r\n    return false\r\n  }\r\n\r\n  if (async) {\r\n    setTimeout(deliver, 10)\r\n  } else {\r\n    deliver()\r\n  }\r\n}\r\n\r\nexport default emit\r\n","import toString from '../lang/toString'\r\n/**\r\n * 判断检测数据是否为 Typed Arrays 类型的数据\r\n * ========================================================================\r\n * @param {*} val\r\n * @returns {boolean}\r\n */\r\nconst isTypedArray = (val) => {\r\n  const TYPES = [\r\n    '[object Int8Array]',\r\n    '[object Uint8Array]',\r\n    '[object Uint8ClampedArray]',\r\n    '[object Int16Array]',\r\n    '[object Uint16Array]',\r\n    '[object Int32Array]',\r\n    '[object Uint32Array]',\r\n    '[object Float32Array]',\r\n    '[object Float64Array]',\r\n    '[object BigInt64Array]',\r\n    '[object BigUint64Array]'\r\n  ]\r\n\r\n  return TYPES.indexOf(toString.call(val)) > -1\r\n}\r\n\r\nexport default isTypedArray\r\n","import toString from '../lang/toString'\r\n\r\n/**\r\n * 检测数据是否为 Array 类型\r\n * ========================================================================\r\n * @method isArray\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isArray = (o) => {\r\n  if (Array.isArray) {\r\n    return Array.isArray(o)\r\n  } else {\r\n    return toString.apply(o) === '[object Array]'\r\n  }\r\n}\r\n\r\nexport default isArray\r\n","import isArray from './types/isArray'\r\n\r\n/**\r\n * 绘制 SVG Sprites 图标集\r\n * ========================================================================\r\n * @method paintSvgSprites\r\n * @param {Array} [symbols] - （可选）symbols 图标数组\r\n *                             传递 symbols - 绘制 symbols + SYMBOLS 的图标集\r\n *                             不传递 symbols - 仅绘制默认 SYMBOLS 图标集\r\n */\r\nexport const paintSvgSprites = (symbols = []) => {\r\n  const SYMBOLS = [\r\n    '<symbol id=\"outline-icon-up\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 261.696c0.832-0.448 1.536-1.216 2.368-1.536a38.72 38.72 0 0 1 46.08 8.256l277.824 302.272a41.92 41.92 0 0 1-1.536 58.048 39.104 39.104 0 0 1-56.448-1.6L513.728 355.904 260.736 626.048a39.104 39.104 0 0 1-56.448 1.088 41.6 41.6 0 0 1-1.088-57.984L483.84 269.696c0.512-0.512 1.344-0.768 1.92-1.408l1.088-1.344c2.368-2.496 5.312-3.648 8-5.248z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-down\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 762.304c0.832 0.448 1.536 1.216 2.368 1.536 15.232 7.488 33.92 4.992 46.08-8.256l277.824-302.272a41.92 41.92 0 0 0-1.536-58.048 39.104 39.104 0 0 0-56.448 1.6l-249.344 271.232-252.992-270.144a39.104 39.104 0 0 0-56.448-1.088 41.6 41.6 0 0 0-1.088 57.984l280.576 299.456c0.512 0.512 1.344 0.768 1.92 1.408l1.088 1.344c2.368 2.496 5.312 3.648 8 5.248z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-menu\" viewBox=\"0 0 1024 1024\"><path d=\"M320 256h640V128H320zM320 576h640V448H320zM320 896h640v-128H320zM64 256h128V128H64zM64 576h128V448H64zM64 896h128v-128H64z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-hash\" viewBox=\"0 0 24 24\"><path d=\"M14.216 10l-0.444 4h-3.988l0.444-4zM15.006 2.89l-0.568 5.11h-3.988l0.543-4.89c0.061-0.549-0.335-1.043-0.883-1.104s-1.043 0.335-1.104 0.884l-0.568 5.11h-4.438c-0.552 0-1 0.448-1 1s0.448 1 1 1h4.216l-0.444 4h-3.772c-0.552 0-1 0.448-1 1s0.448 1 1 1h3.549l-0.543 4.89c-0.061 0.549 0.335 1.043 0.883 1.104s1.043-0.335 1.104-0.883l0.569-5.111h3.988l-0.543 4.89c-0.061 0.549 0.335 1.043 0.883 1.104s1.043-0.335 1.104-0.883l0.568-5.111h4.438c0.552 0 1-0.448 1-1s-0.448-1-1-1h-4.216l0.444-4h3.772c0.552 0 1-0.448 1-1s-0.448-1-1-1h-3.549l0.543-4.89c0.061-0.549-0.335-1.043-0.883-1.104s-1.043 0.335-1.104 0.883z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-close\" viewBox=\"0 0 1024 1024\"><path d=\"M536.96 491.648L310.592 265.344a32 32 0 1 0-45.248 45.248L491.584 536.96l-226.304 226.304a32 32 0 0 0 45.312 45.248l226.24-226.304 226.304 226.304a32 32 0 0 0 45.248-45.248L582.144 536.896l226.304-226.24a32 32 0 0 0-45.248-45.248L536.896 491.584z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-homepage\" viewBox=\"0 0 26 28\"><path d=\"M22 15.5v7.5c0 0.547-0.453 1-1 1h-6v-6h-4v6h-6c-0.547 0-1-0.453-1-1v-7.5c0-0.031 0.016-0.063 0.016-0.094l8.984-7.406 8.984 7.406c0.016 0.031 0.016 0.063 0.016 0.094zM25.484 14.422l-0.969 1.156c-0.078 0.094-0.203 0.156-0.328 0.172h-0.047c-0.125 0-0.234-0.031-0.328-0.109l-10.813-9.016-10.813 9.016c-0.109 0.078-0.234 0.125-0.375 0.109-0.125-0.016-0.25-0.078-0.328-0.172l-0.969-1.156c-0.172-0.203-0.141-0.531 0.063-0.703l11.234-9.359c0.656-0.547 1.719-0.547 2.375 0l3.813 3.187v-3.047c0-0.281 0.219-0.5 0.5-0.5h3c0.281 0 0.5 0.219 0.5 0.5v6.375l3.422 2.844c0.203 0.172 0.234 0.5 0.063 0.703z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-tags\" viewBox=\"0 0 24 28\"><path d=\"M7 7c0-1.109-0.891-2-2-2s-2 0.891-2 2 0.891 2 2 2 2-0.891 2-2zM23.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578s-1.047-0.219-1.406-0.578l-11.172-11.188c-0.797-0.781-1.422-2.297-1.422-3.406v-6.5c0-1.094 0.906-2 2-2h6.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422zM29.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578-0.812 0-1.219-0.375-1.75-0.922l7.344-7.344c0.359-0.359 0.578-0.875 0.578-1.406s-0.219-1.047-0.578-1.422l-11.172-11.156c-0.797-0.797-2.312-1.422-3.422-1.422h3.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422z\"></path><path d=\"M12 2c6.625 0 12 5.375 12 12 0 5.297-3.437 9.797-8.203 11.391-0.609 0.109-0.828-0.266-0.828-0.578 0-0.391 0.016-1.687 0.016-3.297 0-1.125-0.375-1.844-0.812-2.219 2.672-0.297 5.484-1.313 5.484-5.922 0-1.313-0.469-2.375-1.234-3.219 0.125-0.313 0.531-1.531-0.125-3.187-1-0.313-3.297 1.234-3.297 1.234-0.953-0.266-1.984-0.406-3-0.406s-2.047 0.141-3 0.406c0 0-2.297-1.547-3.297-1.234-0.656 1.656-0.25 2.875-0.125 3.187-0.766 0.844-1.234 1.906-1.234 3.219 0 4.594 2.797 5.625 5.469 5.922-0.344 0.313-0.656 0.844-0.766 1.609-0.688 0.313-2.438 0.844-3.484-1-0.656-1.141-1.844-1.234-1.844-1.234-1.172-0.016-0.078 0.734-0.078 0.734 0.781 0.359 1.328 1.75 1.328 1.75 0.703 2.141 4.047 1.422 4.047 1.422 0 1 0.016 1.937 0.016 2.234 0 0.313-0.219 0.688-0.828 0.578-4.766-1.594-8.203-6.094-8.203-11.391 0-6.625 5.375-12 12-12zM4.547 19.234c0.031-0.063-0.016-0.141-0.109-0.187-0.094-0.031-0.172-0.016-0.203 0.031-0.031 0.063 0.016 0.141 0.109 0.187 0.078 0.047 0.172 0.031 0.203-0.031zM5.031 19.766c0.063-0.047 0.047-0.156-0.031-0.25-0.078-0.078-0.187-0.109-0.25-0.047-0.063 0.047-0.047 0.156 0.031 0.25 0.078 0.078 0.187 0.109 0.25 0.047zM5.5 20.469c0.078-0.063 0.078-0.187 0-0.297-0.063-0.109-0.187-0.156-0.266-0.094-0.078 0.047-0.078 0.172 0 0.281s0.203 0.156 0.266 0.109zM6.156 21.125c0.063-0.063 0.031-0.203-0.063-0.297-0.109-0.109-0.25-0.125-0.313-0.047-0.078 0.063-0.047 0.203 0.063 0.297 0.109 0.109 0.25 0.125 0.313 0.047zM7.047 21.516c0.031-0.094-0.063-0.203-0.203-0.25-0.125-0.031-0.266 0.016-0.297 0.109s0.063 0.203 0.203 0.234c0.125 0.047 0.266 0 0.297-0.094zM8.031 21.594c0-0.109-0.125-0.187-0.266-0.172-0.141 0-0.25 0.078-0.25 0.172 0 0.109 0.109 0.187 0.266 0.172 0.141 0 0.25-0.078 0.25-0.172zM8.937 21.438c-0.016-0.094-0.141-0.156-0.281-0.141-0.141 0.031-0.234 0.125-0.219 0.234 0.016 0.094 0.141 0.156 0.281 0.125s0.234-0.125 0.219-0.219z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-issues\" viewBox=\"0 0 26 28\"><path d=\"M25.5 15c0 0.547-0.453 1-1 1h-3.5c0 1.953-0.422 3.422-1.047 4.531l3.25 3.266c0.391 0.391 0.391 1.016 0 1.406-0.187 0.203-0.453 0.297-0.703 0.297s-0.516-0.094-0.703-0.297l-3.094-3.078s-2.047 1.875-4.703 1.875v-14h-2v14c-2.828 0-4.891-2.063-4.891-2.063l-2.859 3.234c-0.203 0.219-0.469 0.328-0.75 0.328-0.234 0-0.469-0.078-0.672-0.25-0.406-0.375-0.438-1-0.078-1.422l3.156-3.547c-0.547-1.078-0.906-2.469-0.906-4.281h-3.5c-0.547 0-1-0.453-1-1s0.453-1 1-1h3.5v-4.594l-2.703-2.703c-0.391-0.391-0.391-1.016 0-1.406s1.016-0.391 1.406 0l2.703 2.703h13.188l2.703-2.703c0.391-0.391 1.016-0.391 1.406 0s0.391 1.016 0 1.406l-2.703 2.703v4.594h3.5c0.547 0 1 0.453 1 1zM18 6h-10c0-2.766 2.234-5 5-5s5 2.234 5 5z\"></path></symbol>'\r\n  ]\r\n  const sprites =\r\n    isArray(symbols) && symbols.length > 0 ? SYMBOLS.concat(symbols) : SYMBOLS\r\n  const $body = document.body\r\n  let $icons = document.querySelector('#svg-sprites')\r\n\r\n  if ($icons) {\r\n    $icons.innerHTML = sprites.join('')\r\n  } else {\r\n    $icons = document.createElement('div')\r\n    $icons.innerHTML =\r\n      `<svg id=\"svg-sprites\" aria-hidden=\"true\" style=\"position:absolute;display:none;width:0;height:0;overflow:hidden;\">` +\r\n      `${sprites.join('')}` +\r\n      `</svg>`\r\n    $body.insertBefore($icons.firstChild, $body.firstChild)\r\n  }\r\n}\r\n\r\n/**\r\n * 创建 SVG 图标 DOM 元素\r\n * ========================================================================\r\n * @method createSvgIcon\r\n * @param {String} name\r\n * @param {Number|String|Array} [size]\r\n * @param {String} [color]\r\n * @param {String} [iconSet]\r\n * @returns {HTMLElement}\r\n */\r\nexport const createSvgIcon = (\r\n  name,\r\n  size = 0,\r\n  color = '',\r\n  iconSet = 'outline'\r\n) => {\r\n  const binds = iconSet\r\n    ? `xlink:href=\"#${iconSet}-icon-${name}\"`\r\n    : `xlink:href=\"#icon-${name}\"`\r\n  const width = isArray(size) ? size[0] : size\r\n  const height = isArray(size) ? size[1] : size\r\n  const defaultRules = size ? `width:${width}px;height:${height}px;` : ''\r\n  const cssRules = color ? defaultRules + `color:${color}` : defaultRules\r\n  const svg =\r\n    `<svg aria-hidden=\"true\" class=\"outline-icon__svg\" style=\"${cssRules}\">` +\r\n    `<use ${binds}></use>` +\r\n    `</svg>`\r\n  const $icon = document.createElement('i')\r\n\r\n  $icon.className = 'outline-icon'\r\n  $icon.innerHTML = svg\r\n\r\n  return $icon\r\n}\r\n","import isString from '../types/isString'\r\n\r\n/**\r\n * 清楚字符串起始位置所有的空格\r\n * ========================================================================\r\n * @method trim\r\n * @param {string} str\r\n * @returns {string|Boolean}\r\n */\r\nconst trim = (str) => {\r\n  if (!isString(str)) {\r\n    return false\r\n  }\r\n  return str.replace(/^\\s+|\\s+$/g, '')\r\n}\r\n\r\nexport default trim\r\n","/**\r\n * 给 DOM 节点设置属性/值\r\n * ========================================================================\r\n * @method setAttribute\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} attr - 属性名称\r\n * @param {String|Number|Boolean} value - 属性值\r\n */\r\nconst setAttribute = (el, attr, value) => {\r\n  let tagName = el.tagName.toLowerCase()\r\n\r\n  switch (attr) {\r\n    case 'style':\r\n      el.style.cssText = value\r\n      break\r\n    case 'value':\r\n      if (tagName === 'input' || tagName === 'textarea') {\r\n        el.value = value\r\n      } else {\r\n        el.setAttribute(attr, value)\r\n      }\r\n      break\r\n    case 'className':\r\n      el.className = value\r\n      break\r\n    default:\r\n      el.setAttribute(attr, value)\r\n      break\r\n  }\r\n}\r\n\r\nexport default setAttribute\r\n","import hasOwn from '../lang/hasOwn'\nimport isArray from '../types/isArray'\nimport isElement from '../types/isElement'\nimport isFragment from '../types/isFragment'\nimport setAttribute from './setAttribute'\n\n/**\n * 创建 DOM 节点，并添加属性和子节点\n * ========================================================================\n * @method createElement\n * @param {String} tagName - 标签名称\n * @param {Object} attributes - 属性对象\n * @param {Array} children - 子节点数组\n * @returns {HTMLElement}\n */\nconst createElement = (tagName, attributes, children) => {\n  const keys = Object.keys(attributes)\n  const $fragment = document.createDocumentFragment()\n  const $el = document.createElement(tagName)\n  const append = (child) => {\n    let $child\n    if (isElement(child) || isFragment(child)) {\n      $child = child\n    } else {\n      $child = document.createTextNode(child)\n    }\n\n    $fragment.appendChild($child)\n  }\n\n  keys.forEach((attr) => {\n    if (hasOwn(attributes, attr)) {\n      setAttribute($el, attr, attributes[attr])\n    }\n  })\n\n  if (isArray(children)) {\n    children.forEach((child) => {\n      append(child)\n    })\n  } else {\n    append(children)\n  }\n\n  $el.appendChild($fragment)\n\n  return $el\n}\n\nexport default createElement\n","import toString from '../lang/toString'\n\nconst isFragment = (fragment) => {\n  return toString.call(fragment) === '[object DocumentFragment]'\n}\n\nexport default isFragment\n","/**\r\n * 检测 DOM 节点是否包含名为 className 的样式\r\n * ========================================================================\r\n * @method hasClass\r\n * @param {HTMLElement|Object} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {*}\r\n */\r\nconst hasClass = (el, className) => {\r\n  let allClass = el.className\r\n\r\n  if (!allClass) {\r\n    return false\r\n  }\r\n\r\n  return allClass.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'))\r\n}\r\n\r\nexport default hasClass\r\n","import trim from '../lang/trim'\r\nimport hasClass from './hasClass'\r\n\r\n/**\r\n * 移除 DOM 节点的 className 样式\r\n * ========================================================================\r\n * @method removeClass\r\n * @param {HTMLElement|Object} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst removeClass = (el, className) => {\r\n  let allClass = el.className\r\n\r\n  if (!allClass || !hasClass(el, className)) {\r\n    return false\r\n  }\r\n\r\n  allClass = trim(allClass.replace(className, ''))\r\n\r\n  el.className = allClass\r\n}\r\n\r\nexport default removeClass\r\n","import removeClass from './utils/dom/removeClass'\r\nimport isEmpty from './utils/types/isEmpty'\r\nimport trim from './utils/lang/trim'\r\n\r\nconst _resetHeading = ($heading, hasAnchor = true, isAtStart = true) => {\r\n  const CLS_HEADING = 'outline-heading'\r\n  const text = $heading.innerHTML\r\n  let $anchor\r\n\r\n  $heading.innerHTML = text.replace(/^\\d+(?:(\\.?\\d*)*\\s?)?/gi, '')\r\n  $heading.removeAttribute('id')\r\n  $heading.removeAttribute('data-id')\r\n\r\n  removeClass($heading, CLS_HEADING)\r\n\r\n  if (!hasAnchor) {\r\n    return false\r\n  }\r\n\r\n  $anchor = $heading.querySelector(`.${CLS_HEADING}__anchor`)\r\n\r\n  if (isAtStart) {\r\n    removeClass($heading, `${CLS_HEADING}_start`)\r\n  }\r\n\r\n  if (isEmpty(trim($heading.className))) {\r\n    $heading.removeAttribute('class')\r\n  }\r\n\r\n  $heading.removeChild($anchor)\r\n}\r\n\r\nexport default _resetHeading\r\n","import isString from './isString'\r\n/**\r\n * 检测数据是否为空字符串\r\n * ========================================================================\r\n * @method isEmpty\r\n * @param {String} str\r\n * @returns {boolean}\r\n */\r\nconst isEmpty = (str) => {\r\n  return isString(str) && str === ''\r\n}\r\n\r\nexport default isEmpty\r\n","/**\r\n * 给对象的属性通过 prop 属性分组\r\n * ========================================================================\r\n * @method groupBy\r\n * @param {Array} list\r\n * @param {String} prop\r\n * @return {Array}\r\n */\r\nconst groupBy = (list, prop) => {\r\n  const groups = {}\r\n  const cb = (o) => {\r\n    return [o[prop]]\r\n  }\r\n\r\n  list.forEach((o) => {\r\n    const group = JSON.stringify(cb(o))\r\n\r\n    groups[group] = groups[group] || []\r\n    groups[group].push(o)\r\n  })\r\n\r\n  return Object.keys(groups).map((group) => {\r\n    return groups[group]\r\n  })\r\n}\r\n\r\nexport default groupBy\r\n","import trim from './utils/lang/trim'\r\nimport stripTags from './utils/lang/stripTags'\r\n\r\nimport _getChaptersWithCode from './_getChaptersWithCode'\r\nimport _getChapterParentIdByDiffer from './_getChapterParentIdByDiffer'\r\n\r\nconst getChapters = (headings) => {\r\n  const chapters = []\r\n  let previous = 1\r\n  let level = 0\r\n\r\n  headings.forEach((heading, i) => {\r\n    const headingLevel = heading.tagName.replace(/h/i, '')\r\n    let current = parseInt(headingLevel, 10)\r\n    let pid = -1\r\n\r\n    // 当前标题的（标题标签）序号 > 前一个标题的序号：两个相连的标题是父标题 -> 子标题关系；\r\n    // h2 （前一个标题）\r\n    // h3 （当前标题）\r\n    if (current > previous) {\r\n      level += 1\r\n\r\n      // 第一层级的 pid 是 -1\r\n      if (level === 1) {\r\n        pid = -1\r\n      } else {\r\n        pid = i - 1\r\n      }\r\n    }\r\n    // 当前标题的（标题标签）序号 = 前一个标题的序号\r\n    // h2 （前一个标题）\r\n    // h2 （当前标题）\r\n    // 当前标题的（标题标签）序号 < 前一个标题的序号，并且当前标题序号 > 当前的级别\r\n    // h2\r\n    // h4 （前一个标题）\r\n    // h3 （当前标题：这种情况我们还是任务 h3 是 h2 的下一级章节）\r\n    else if (current === previous || (current < previous && current > level)) {\r\n      // H1 的层级肯定是 1\r\n      if (current === 1) {\r\n        level = 1\r\n\r\n        pid = -1\r\n      } else {\r\n        pid = chapters[i - 1].pid\r\n      }\r\n    } else if (current <= level) {\r\n      // H1 的层级肯定是 1\r\n      if (current === 1) {\r\n        level = 1\r\n      } else {\r\n        level = level - (previous - current)\r\n\r\n        if (level <= 1) {\r\n          level = 1\r\n        }\r\n      }\r\n\r\n      // 第一级的标题\r\n      if (level === 1) {\r\n        pid = -1\r\n      } else {\r\n        // 虽然看上去差点，不过能工作啊\r\n        pid = _getChapterParentIdByDiffer(chapters, previous - current, i)\r\n      }\r\n    }\r\n\r\n    previous = current\r\n\r\n    chapters.push({\r\n      id: i,\r\n      pid: pid,\r\n      level: level,\r\n      rel: `heading-${i}`,\r\n      text: stripTags(trim(heading.innerHTML))\r\n    })\r\n  })\r\n\r\n  return _getChaptersWithCode(chapters)\r\n}\r\n\r\nexport default getChapters\r\n","import isString from '../types/isString'\r\n\r\n/**\r\n * 过滤所有 HTML 标签\r\n * ========================================================================\r\n * @method stripTags\r\n * @param {string} str\r\n * @returns {string}\r\n */\r\nconst stripTags = (str) => {\r\n  if (!isString(str)) {\r\n    return ''\r\n  }\r\n  return str.replace(/<\\/?[^>]+(>|$)/g, '')\r\n}\r\n\r\nexport default stripTags\r\n","const _getChapterParentIdByDiffer = (chapters, differ, index) => {\r\n  let pid\r\n\r\n  // 最大只有 5 级的差距\r\n  switch (differ) {\r\n    case 2:\r\n      pid = chapters[chapters[chapters[index - 1].pid].pid].pid\r\n      break\r\n    case 3:\r\n      pid = chapters[chapters[chapters[chapters[index - 1].pid].pid].pid].pid\r\n      break\r\n    case 4:\r\n      pid =\r\n        chapters[\r\n          chapters[chapters[chapters[chapters[index - 1].pid].pid].pid].pid\r\n        ].pid\r\n      break\r\n    case 5:\r\n      pid =\r\n        chapters[\r\n          chapters[\r\n            chapters[chapters[chapters[chapters[index - 1].pid].pid].pid].pid\r\n          ].pid\r\n        ].pid\r\n      break\r\n    default:\r\n      pid = chapters[chapters[index - 1].pid].pid\r\n      break\r\n  }\r\n\r\n  return pid\r\n}\r\n\r\nexport default _getChapterParentIdByDiffer\r\n","import groupBy from './utils/lang/groupBy'\r\n\r\nconst _getChaptersWithCode = (chapters) => {\r\n  const groups = groupBy(chapters, 'pid')\r\n\r\n  groups.forEach((group) => {\r\n    group.forEach((chapter, i) => {\r\n      chapter.index = i + 1\r\n    })\r\n  })\r\n\r\n  groups.forEach((group) => {\r\n    group.forEach((paragraph) => {\r\n      chapters.forEach((chapter) => {\r\n        if (chapter.pid === -1) {\r\n          chapter.code = String(chapter.index)\r\n        } else {\r\n          if (chapter.pid === paragraph.id) {\r\n            chapter.code = paragraph.code + '.' + chapter.index\r\n          }\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  return [...chapters]\r\n}\r\n\r\nexport default _getChaptersWithCode\r\n","import Base from './base'\r\n\r\n// 在文章的标题生成 anchor 链接\r\nimport isString from './utils/types/isString'\r\nimport isFunction from './utils/types/isFunction'\r\nimport isElement from './utils/types/isElement'\r\nimport later from './utils/lang/later'\r\nimport scrollTo from './utils/dom/scrollTo'\r\nimport _getScrollElement from './utils/dom/_getScrollElement'\r\nimport on from './utils/event/on'\r\nimport off from './utils/event/off'\r\nimport stop from './utils/event/stop'\r\nimport publish from './utils/observer/emit'\r\nimport { paintSvgSprites } from './utils/icons'\r\n\r\nimport _updateHeading from './_updateHeading'\r\nimport _resetHeading from './_resetHeading'\r\nimport getChapters from './getChapters'\r\n\r\nclass Anchors extends Base {\r\n  constructor(options) {\r\n    super()\r\n\r\n    this.attrs = Anchors.DEFAULTS\r\n    this.$articleElement = null\r\n    this.$scrollElement = null\r\n    this.$headings = []\r\n\r\n    this.chapters = []\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    let created\r\n    let scrollElement\r\n    let selector\r\n    let $articleElement\r\n    let articleElement\r\n\r\n    this.attr(options)\r\n    articleElement = this.attr('articleElement')\r\n    scrollElement = this.attr('scrollElement')\r\n    selector = this.attr('selector')\r\n    created = this.attr('created')\r\n\r\n    if (isString(articleElement)) {\r\n      $articleElement = document.querySelector(articleElement)\r\n    } else if (isElement(articleElement)) {\r\n      $articleElement = articleElement\r\n    }\r\n\r\n    if (!$articleElement) {\r\n      return this\r\n    }\r\n\r\n    this.$articleElement = $articleElement\r\n    this.$scrollElement = _getScrollElement(scrollElement)\r\n    this.$headings = [...$articleElement.querySelectorAll(selector)]\r\n\r\n    if (this.$headings.length < 1) {\r\n      return this\r\n    }\r\n\r\n    this.chapters = getChapters(this.$headings)\r\n\r\n    if (isFunction(created)) {\r\n      created.call(this)\r\n    }\r\n\r\n    this.render().addListeners()\r\n\r\n    return this\r\n  }\r\n\r\n  getChapters() {\r\n    return this.chapters\r\n  }\r\n\r\n  count() {\r\n    return this.chapters.length\r\n  }\r\n\r\n  render() {\r\n    const mounted = this.attr('mounted')\r\n    const hasAnchor = this.attr('hasAnchor')\r\n    const isAtStart = this.attr('isAtStart')\r\n    const showCode = this.attr('showCode')\r\n    const anchorURL = this.attr('anchorURL')\r\n    const $headings = this.$headings\r\n    const chapters = this.getChapters()\r\n\r\n    paintSvgSprites()\r\n\r\n    $headings.forEach(($heading, i) => {\r\n      const chapterCode = chapters[i].code\r\n      _updateHeading($heading, i, {\r\n        hasAnchor,\r\n        isAtStart,\r\n        showCode,\r\n        chapterCode,\r\n        anchorURL\r\n      })\r\n    })\r\n\r\n    if (isFunction(mounted)) {\r\n      mounted.call(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  scrollTo(top, after) {\r\n    const el = this.$scrollElement\r\n\r\n    scrollTo(el, top, after, 100)\r\n\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    const hasAnchor = this.attr('hasAnchor')\r\n    const isAtStart = this.attr('isAtStart')\r\n    const beforeDestroy = this.attr('beforeDestroy')\r\n    const afterDestroy = this.attr('afterDestroy')\r\n    const $headings = this.$headings\r\n\r\n    if (isFunction(beforeDestroy)) {\r\n      beforeDestroy.call(this)\r\n    }\r\n\r\n    this.removeListeners()\r\n    $headings.forEach(($heading) => {\r\n      _resetHeading($heading, hasAnchor, isAtStart)\r\n    })\r\n\r\n    this.attr(Anchors.DEFAULTS)\r\n    this.$articleElement = null\r\n    this.$scrollElement = null\r\n    this.$headings = []\r\n    this.chapters = []\r\n\r\n    if (isFunction(afterDestroy)) {\r\n      afterDestroy.call(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  onAnchorTrigger(evt) {\r\n    const anchorURL = this.attr('anchorURL')\r\n    const afterScroll = this.attr('afterScroll')\r\n    const $anchor = evt.delegateTarget\r\n    const $heading = $anchor.parentNode\r\n    const top = $heading.offsetTop\r\n    const $scrollElement = this.$scrollElement\r\n    const min = 0\r\n    const max = $scrollElement.scrollHeight - $scrollElement.clientHeight\r\n    const after = () => {\r\n      if (isFunction(afterScroll)) {\r\n        afterScroll.call(this)\r\n      }\r\n\r\n      later(() => {\r\n        publish('update:toolbar', {\r\n          top,\r\n          min,\r\n          max\r\n        })\r\n      })\r\n    }\r\n\r\n    this.scrollTo(top, after)\r\n\r\n    if (!anchorURL) {\r\n      stop(evt)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    const $articleElement = this.$articleElement\r\n\r\n    on(\r\n      $articleElement,\r\n      '.outline-heading__anchor',\r\n      'click',\r\n      this.onAnchorTrigger,\r\n      this,\r\n      true\r\n    )\r\n\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    const $articleElement = this.$articleElement\r\n\r\n    off($articleElement, 'click', this.onAnchorTrigger)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nAnchors.DEFAULTS = {\r\n  scrollElement: 'html,body',\r\n  articleElement: '#article',\r\n  selector: 'h1,h2,h3,h4,h5,h6',\r\n  anchorURL: '',\r\n  hasAnchor: true,\r\n  isAtStart: true,\r\n  showCode: false,\r\n  created: null,\r\n  mounted: null,\r\n  afterScroll: null,\r\n  beforeDestroy: null,\r\n  afterDestroy: null\r\n}\r\n\r\nexport default Anchors\r\n","import trim from './utils/lang/trim'\nimport createElement from './utils/dom/createElement'\nimport setAttribute from './utils/dom/setAttribute'\n\nimport { createSvgIcon } from './utils/icons'\n\nconst _updateHeading = ($heading, i, options) => {\n  const CLS_HEADING = 'outline-heading'\n  const hasAnchor = options.hasAnchor || true\n  const isAtStart = options.isAtStart || true\n  const showCode = options.showCode || false\n  const chapterCode = options.chapterCode || ''\n  const anchorURL = options.anchorURL || ''\n  const headingId = `heading-${i}`\n  const attrs = {\n    id: headingId,\n    className: isAtStart ? `${CLS_HEADING} ${CLS_HEADING}_start` : CLS_HEADING,\n    'data-id': i\n  }\n  const keys = Object.keys(attrs)\n  const text = trim($heading.innerHTML)\n  const $fragment = document.createDocumentFragment()\n  let $anchor\n  let $icon\n\n  keys.forEach((prop) => {\n    setAttribute($heading, prop, attrs[prop])\n  })\n\n  if (showCode) {\n    $heading.innerHTML = chapterCode + ' ' + text\n  }\n\n  if (!hasAnchor) {\n    return false\n  }\n\n  $icon = createSvgIcon('hash')\n  $anchor = createElement(\n    'a',\n    {\n      id: `anchor-${i}`,\n      className: `${CLS_HEADING}__anchor anchor-${i}`,\n      href: anchorURL ? anchorURL : `#${headingId}`,\n      target: anchorURL ? '_blank' : 'self',\n      'data-id': i\n    },\n    [$icon]\n  )\n  $fragment.appendChild($anchor)\n  $heading.appendChild($fragment)\n}\n\nexport default _updateHeading\n","import hasClass from './hasClass'\r\n\r\n/**\r\n * 给 DOM 节点添加名为 className 的样式\r\n * ========================================================================\r\n * @method addClass\r\n * @param {HTMLElement|Object} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst addClass = (el, className) => {\r\n  let allClass = el.className\r\n\r\n  if (hasClass(el, className)) {\r\n    return false\r\n  }\r\n\r\n  allClass += allClass.length > 0 ? ' ' + className : className\r\n\r\n  el.className = allClass\r\n}\r\n\r\nexport default addClass\r\n","import Base from './base'\n\nimport later from './utils/lang/later'\nimport isFunction from './utils/types/isFunction'\nimport addClass from './utils/dom/addClass'\nimport removeClass from './utils/dom/removeClass'\nimport createElement from './utils/dom/createElement'\nimport on from './utils/event/on'\nimport off from './utils/event/off'\n\nimport { paintSvgSprites, createSvgIcon } from './utils/icons'\n\nclass Drawer extends Base {\n  constructor(options) {\n    super()\n\n    this.attrs = Drawer.DEFAULTS\n    this.title = ''\n    this.closed = true\n    this.$el = null\n    this.$modal = null\n    this.$header = null\n    this.$title = null\n    this.$close = null\n    this.$main = null\n    this.$footer = null\n    this.$overlay = null\n\n    if (options) {\n      this.initialize(options)\n    }\n  }\n\n  initialize(options) {\n    let created\n\n    this.attr(options)\n\n    this.title = this.attr('title')\n    created = this.attr('created')\n\n    if (isFunction(created)) {\n      created.call(this)\n    }\n\n    this.render().addListeners()\n    return this\n  }\n\n  setTitle(title) {\n    this.attr('title', title)\n    this.title = title\n    this.$title.innerHTML = title\n\n    return this\n  }\n\n  isClosed() {\n    return this.closed\n  }\n\n  render() {\n    const mounted = this.attr('mounted')\n    const size = this.attr('size')\n    const placement = this.attr('placement')\n    const hasClose = this.attr('hasClose')\n    const hasOverlay = this.attr('hasOverlay')\n    const hasOffset = this.attr('hasOffset')\n    const hasPadding = this.attr('hasPadding')\n    const customClass = this.attr('customClass')\n    const $fragment = document.createDocumentFragment()\n    let $el\n    let $modal\n    let $header\n    let $title\n    let $close\n    let $main\n    let $footer\n    let $overlay\n\n    paintSvgSprites()\n    Drawer.zIndex += 1\n\n    $title = createElement(\n      'h2',\n      {\n        className: 'outline-drawer__title'\n      },\n      [this.title]\n    )\n    this.$title = $title\n\n    if (hasClose) {\n      $close = createElement(\n        'div',\n        {\n          className: 'outline-drawer__close'\n        },\n        [createSvgIcon('close', 20)]\n      )\n      this.$close = $close\n    }\n\n    $header = createElement(\n      'header',\n      {\n        className: 'outline-drawer__header'\n      },\n      [$title, $close]\n    )\n    this.$header = $header\n\n    $main = createElement(\n      'div',\n      {\n        className: 'outline-drawer__main'\n      },\n      ['']\n    )\n    this.$main = $main\n\n    if (!hasPadding) {\n      addClass($main, ' outline-drawer_full')\n    }\n\n    $footer = createElement(\n      'footer',\n      {\n        className: 'outline-drawer__footer'\n      },\n      ['']\n    )\n    this.$footer = $footer\n\n    $modal = createElement(\n      'div',\n      {\n        className: `outline-drawer__modal outline-drawer_${placement} outline-drawer_${size} outline-drawer_closed`\n      },\n      [$header, $main, $footer]\n    )\n    this.$modal = $modal\n\n    if (hasOffset) {\n      addClass($modal, 'outline-drawer_offset')\n    }\n\n    if (customClass) {\n      addClass($modal, customClass)\n    }\n\n    if (hasOverlay) {\n      $overlay = createElement(\n        'div',\n        {\n          className: 'outline-drawer__overlay'\n        },\n        ['']\n      )\n      this.$overlay = $overlay\n    }\n\n    $el = createElement(\n      'div',\n      {\n        className: `outline-drawer`\n      },\n      [$modal, $overlay]\n    )\n    this.$el = $el\n    $fragment.appendChild($el)\n    document.body.appendChild($fragment)\n\n    if (isFunction(mounted)) {\n      mounted.call(this)\n    }\n\n    return this\n  }\n\n  open() {\n    const opened = this.attr('afterOpened')\n    const $modal = this.$modal\n\n    addClass(this.$el, 'outline-drawer_opened')\n    removeClass($modal, 'outline-drawer_closed')\n    addClass($modal, 'outline-drawer_opened')\n\n    later(() => {\n      this.closed = false\n\n      if (isFunction(opened)) {\n        opened.call(this)\n      }\n    })\n\n    return this\n  }\n\n  close() {\n    const closed = this.attr('afterClosed')\n    const $modal = this.$modal\n\n    removeClass($modal, 'outline-drawer_opened')\n    addClass($modal, 'outline-drawer_closed')\n\n    later(() => {\n      removeClass(this.$el, 'outline-drawer_opened')\n      this.closed = true\n\n      if (isFunction(closed)) {\n        closed.call(this)\n      }\n    })\n\n    return this\n  }\n\n  toggle() {\n    if (this.isClosed()) {\n      this.open()\n    } else {\n      this.close()\n    }\n\n    return this\n  }\n\n  destroy() {\n    const afterDestroy = this.attr('afterDestroy')\n    const beforeDestroy = this.attr('beforeDestroy')\n\n    if (isFunction(beforeDestroy)) {\n      beforeDestroy.call(this)\n    }\n\n    this.removeListeners()\n\n    this.attrs = Drawer.DEFAULTS\n    this.title = ''\n    this.closed = false\n    this.$el = null\n    this.$modal = null\n    this.$header = null\n    this.$title = null\n    this.$close = null\n    this.$main = null\n    this.$footer = null\n    this.$overlay = null\n\n    Drawer.zIndex -= 1\n\n    if (isFunction(afterDestroy)) {\n      afterDestroy.call(this)\n    }\n\n    return this\n  }\n\n  addListeners() {\n    const hasClose = this.attr('hasClose')\n    const hasOverlay = this.attr('hasOverlay')\n    const $el = this.$el\n\n    if (hasClose) {\n      on($el, '.outline-drawer__close', 'click', this.onClose, this, true)\n    }\n\n    if (hasOverlay) {\n      on($el, '.outline-drawer__overlay', 'click', this.onClose, this, true)\n    }\n\n    return this\n  }\n\n  removeListeners() {\n    const hasClose = this.attr('hasClose')\n    const hasOverlay = this.attr('hasOverlay')\n    const $el = this.$el\n\n    if (!hasClose && !hasOverlay) {\n      return this\n    }\n\n    off($el, 'click', this.onClose)\n\n    return this\n  }\n\n  onClose() {\n    this.close()\n    return this\n  }\n}\n\nDrawer.DEFAULTS = {\n  placement: 'rtl',\n  title: '标题',\n  size: 'regular',\n  hasClose: true,\n  hasOverlay: true,\n  hasOffset: false,\n  hasPadding: true,\n  created: null,\n  mounted: null,\n  afterClosed: null,\n  afterOpened: null,\n  afterScroll: null,\n  beforeDestroy: null,\n  afterDestroy: null\n}\n\nDrawer.zIndex = 2000\n\nexport default Drawer\n","import isFunction from '../types/isFunction'\r\nimport off from './off'\r\n\r\nimport { CAPTURE_EVENTS } from './enum'\r\n\r\n/**\r\n * 绑定代理事件\r\n * ========================================================================\r\n * @method emit\r\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\r\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\r\n * @param {Function|Object} fn - （必须） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\r\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\r\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\r\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\r\n * @param {Boolean} once - （可选）是否仅触发一次\r\n */\r\nconst emit = (el, type, fn, data, context, once = false) => {\r\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n  const listener = function (evt) {\r\n    let overrideContext = context || el\r\n\r\n    // 当设置为 true 时，则事件处理器回调函数的\r\n    // this 上下文指向为 data 对象\r\n    if (context === true) {\r\n      overrideContext = data\r\n    }\r\n\r\n    // 仅触发一次\r\n    /* istanbul ignore else */\r\n    if (once === true) {\r\n      off(el, type, listener)\r\n    }\r\n\r\n    fn.call(overrideContext, evt, data)\r\n  }\r\n\r\n  if (!isFunction(fn)) {\r\n    return false\r\n  }\r\n\r\n  if (!el._listeners) {\r\n    el._listeners = []\r\n  }\r\n\r\n  // 缓存 options 元素绑定的事件处理器\r\n  el._listeners.push({\r\n    el,\r\n    type,\r\n    fn: listener,\r\n    data,\r\n    context,\r\n    capture\r\n  })\r\n\r\n  // 缓存包装后的事件处理器\r\n  fn._delegateListener = listener\r\n\r\n  el.addEventListener(type, listener, capture)\r\n}\r\n\r\nexport default emit\r\n","/**\r\n * 获取 DOM 节点相对于窗口的 left （纵坐标）值\r\n * ========================================================================\r\n * @method offsetTop\r\n * @param {HTMLElement} el - DOM 节点\r\n * @returns {Number}\r\n */\r\nconst offsetTop = (el) => {\r\n  let top = el.offsetTop\r\n\r\n  if (el.offsetParent !== null) {\r\n    top += offsetTop(el.offsetParent)\r\n  }\r\n\r\n  return top\r\n}\r\n\r\nexport default offsetTop\r\n","import Base from './base'\r\n\r\nimport isString from './utils/types/isString'\r\nimport isFunction from './utils/types/isFunction'\r\nimport isElement from './utils/types/isElement'\r\nimport later from './utils/lang/later'\r\nimport emit from './utils/event/emit'\r\nimport on from './utils/event/on'\r\nimport off from './utils/event/off'\r\nimport stop from './utils/event/stop'\r\nimport createElement from './utils/dom/createElement'\r\nimport scrollTo from './utils/dom/scrollTo'\r\nimport addClass from './utils/dom/addClass'\r\nimport intersection from './utils/dom/intersection'\r\nimport removeClass from './utils/dom/removeClass'\r\nimport offsetTop from './utils/dom/offsetTop'\r\nimport publish from './utils/observer/emit'\r\n\r\nimport _getScrollElement from './utils/dom/_getScrollElement'\r\nimport _paintChapters from './_paintChapters'\r\n\r\nclass Chapters extends Base {\r\n  constructor(options) {\r\n    super()\r\n\r\n    this.attrs = Chapters.DEFAULTS\r\n    this.$el = null\r\n    this.$title = null\r\n    this.$main = null\r\n    this.$list = null\r\n    this.$placeholder = null\r\n    this.$parentElement = null\r\n    this.$scrollElement = null\r\n    this.chapters = []\r\n    this.closed = false\r\n    this.active = 0\r\n    this.offsetTop = 0\r\n    this.$active = null\r\n    this.timer = null\r\n    this.playing = false\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    let created\r\n    let parentElement\r\n    let scrollElement\r\n    let $parent\r\n\r\n    this.attr(options)\r\n    created = this.attr('created')\r\n    parentElement = this.attr('parentElement')\r\n    scrollElement = this.attr('scrollElement')\r\n\r\n    if (isString(parentElement)) {\r\n      $parent = document.querySelector(parentElement)\r\n    } else if (isElement(parentElement)) {\r\n      $parent = parentElement\r\n    }\r\n    this.$parentElement = $parent\r\n    this.$scrollElement = _getScrollElement(scrollElement)\r\n\r\n    this.chapters = this.attr('chapters')\r\n    this.closed = this.attr('closed')\r\n    this.active = this.attr('active')\r\n\r\n    if (isFunction(created)) {\r\n      created.call(this)\r\n    }\r\n\r\n    if (this.chapters.length < 1) {\r\n      return this\r\n    }\r\n\r\n    this.render().addListeners()\r\n\r\n    this.$active = document.querySelector(`#chapter-${this.active}`)\r\n\r\n    return this\r\n  }\r\n\r\n  isClosed() {\r\n    return this.closed\r\n  }\r\n\r\n  isSticky() {\r\n    const position = this.attr('position')\r\n    return position === 'sticky'\r\n  }\r\n\r\n  isFixed() {\r\n    const position = this.attr('position')\r\n    return position === 'fixed'\r\n  }\r\n\r\n  isInside() {\r\n    return this.isFixed() || this.isSticky()\r\n  }\r\n\r\n  isOutside() {\r\n    return !this.isInside()\r\n  }\r\n\r\n  render() {\r\n    const mounted = this.attr('mounted')\r\n    const title = this.attr('title')\r\n    const showCode = this.attr('showCode')\r\n    const customClass = this.attr('customClass')\r\n    const $parentElement = this.$parentElement\r\n    const contents = []\r\n    let $title = null\r\n    let $el\r\n    let $main\r\n    let $list\r\n    let $placeholder\r\n\r\n    if (!$parentElement) {\r\n      return this\r\n    }\r\n\r\n    if (this.isInside()) {\r\n      $title = createElement(\r\n        'h2',\r\n        {\r\n          className: 'outline-chapters__title'\r\n        },\r\n        [title]\r\n      )\r\n      this.$title = $title\r\n      contents.push($title)\r\n    }\r\n\r\n    $list = createElement(\r\n      'ul',\r\n      {\r\n        className: 'outline-chapters__list'\r\n      },\r\n      ['']\r\n    )\r\n    this.$list = $list\r\n\r\n    $placeholder = createElement(\r\n      'div',\r\n      {\r\n        className: 'outline-chapters__placeholder'\r\n      },\r\n      ['']\r\n    )\r\n    this.$placeholder = $placeholder\r\n\r\n    $main = createElement(\r\n      'div',\r\n      {\r\n        className: 'outline-chapters__main'\r\n      },\r\n      [$list, $placeholder]\r\n    )\r\n    this.$main = $main\r\n    contents.push($main)\r\n\r\n    $el = createElement(\r\n      'nav',\r\n      {\r\n        id: 'outline-chapters',\r\n        className: 'outline-chapters'\r\n      },\r\n      contents\r\n    )\r\n    this.$el = $el\r\n\r\n    if (this.isSticky()) {\r\n      addClass($el, 'outline-chapters_sticky')\r\n    }\r\n\r\n    if (customClass) {\r\n      addClass($el, customClass)\r\n    }\r\n\r\n    $parentElement.appendChild($el)\r\n    _paintChapters($list, this.chapters, showCode)\r\n\r\n    this.offsetTop = offsetTop(document.querySelector('#outline-chapters'))\r\n\r\n    if (isFunction(mounted)) {\r\n      mounted.call(this)\r\n    }\r\n\r\n    this.onObserver()\r\n\r\n    return this\r\n  }\r\n\r\n  highlight(id) {\r\n    const $anchor = this.$el.querySelector(`#outline-anchor-${id}`)\r\n    const HIGHLIGHT = 'outline-chapters_active'\r\n    const $placeholder = this.$placeholder\r\n    let top\r\n\r\n    if (this.$active) {\r\n      removeClass(this.$active, HIGHLIGHT)\r\n    }\r\n\r\n    this.active = parseInt($anchor.getAttribute('data-id'), 10)\r\n    this.$active = $anchor\r\n    addClass(this.$active, HIGHLIGHT)\r\n\r\n    top = 30 * this.active\r\n    $placeholder.style.top = `calc(0.5em + ${top}px)`\r\n\r\n    return this\r\n  }\r\n\r\n  sticky() {\r\n    const FIXED = 'outline-chapters_fixed'\r\n    const $el = this.$el\r\n    const top = this.offsetTop\r\n    const scrollTop = this.$scrollElement.scrollTop\r\n\r\n    if (this.isClosed()) {\r\n      return this\r\n    }\r\n\r\n    if (scrollTop >= top) {\r\n      addClass($el, FIXED)\r\n    } else {\r\n      removeClass($el, FIXED)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  scrollTo(top, after) {\r\n    const el = this.$scrollElement\r\n\r\n    scrollTo(el, top, after, 100)\r\n\r\n    return this\r\n  }\r\n\r\n  show() {\r\n    const HIDDEN = 'outline-chapters_hidden'\r\n    const opened = this.attr('afterOpened')\r\n\r\n    removeClass(this.$el, HIDDEN)\r\n    if (this.isInside()) {\r\n      removeClass(this.$parentElement, HIDDEN)\r\n    }\r\n    this.closed = false\r\n\r\n    if (isFunction(opened)) {\r\n      opened.call(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  hide() {\r\n    const HIDDEN = 'outline-chapters_hidden'\r\n    const closed = this.attr('afterClosed')\r\n\r\n    addClass(this.$el, HIDDEN)\r\n    if (this.isInside()) {\r\n      addClass(this.$parentElement, HIDDEN)\r\n    }\r\n    this.closed = true\r\n\r\n    if (isFunction(closed)) {\r\n      closed.call(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  toggle() {\r\n    if (this.closed) {\r\n      this.show()\r\n    } else {\r\n      this.hide()\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    const beforeDestroy = this.attr('beforeDestroy')\r\n    const afterDestroy = this.attr('afterDestroy')\r\n\r\n    if (isFunction(beforeDestroy)) {\r\n      beforeDestroy.call(this)\r\n    }\r\n\r\n    this.removeListeners()\r\n    this.$parentElement.removeChild(this.$el)\r\n\r\n    this.attr(Chapters.DEFAULTS)\r\n    this.$el = null\r\n    this.$title = null\r\n    this.$main = null\r\n    this.$list = null\r\n    this.$placeholder = null\r\n    this.$parentElement = null\r\n    this.$scrollElement = null\r\n    this.chapters = []\r\n    this.active = 0\r\n    this.offsetTop = 0\r\n    this.$active = null\r\n    this.closed = false\r\n\r\n    if (this.timer) {\r\n      clearTimeout(this.timer)\r\n      this.timer = null\r\n    }\r\n\r\n    if (isFunction(afterDestroy)) {\r\n      afterDestroy.call(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  onObserver() {\r\n    let timer = null\r\n\r\n    intersection(\r\n      ($heading) => {\r\n        const id = $heading.getAttribute('data-id')\r\n\r\n        if (this.playing) {\r\n          return false\r\n        }\r\n\r\n        if (timer) {\r\n          clearTimeout(timer)\r\n        }\r\n\r\n        timer = later(() => {\r\n          this.highlight(id)\r\n        }, 100)\r\n      },\r\n      { context: this }\r\n    )\r\n\r\n    return this\r\n  }\r\n\r\n  onSelect(evt) {\r\n    const $anchor = evt.delegateTarget\r\n    const id = $anchor.getAttribute('data-id')\r\n    const headingId = $anchor.href.split('#')[1]\r\n    const $heading = document.querySelector(`#${headingId}`)\r\n    const top = $heading.offsetTop\r\n    const min = 0\r\n    const max = this.$scrollElement.scrollHeight\r\n    const afterScroll = this.attr('afterScroll')\r\n    const after = () => {\r\n      if (isFunction(afterScroll)) {\r\n        afterScroll.call(this)\r\n      }\r\n\r\n      later(() => {\r\n        this.playing = false\r\n        publish('update:toolbar', {\r\n          top,\r\n          min,\r\n          max\r\n        })\r\n      })\r\n    }\r\n\r\n    this.playing = true\r\n    if (this.isFixed()) {\r\n      this.sticky()\r\n      later(() => {\r\n        this.scrollTo(top, after)\r\n        this.highlight(id)\r\n      }, 10)\r\n    } else {\r\n      this.scrollTo(top, after)\r\n      this.highlight(id)\r\n    }\r\n\r\n    stop(evt)\r\n\r\n    return this\r\n  }\r\n\r\n  onScroll() {\r\n    const $scrollElement = this.$scrollElement\r\n\r\n    if (this.timer) {\r\n      clearTimeout(this.timer)\r\n    }\r\n\r\n    this.timer = later(() => {\r\n      const top = $scrollElement.scrollTop\r\n      const min = 0\r\n      const max = $scrollElement.scrollHeight - $scrollElement.clientHeight\r\n\r\n      if (this.isFixed()) {\r\n        this.sticky()\r\n      }\r\n\r\n      publish('update:toolbar', {\r\n        top,\r\n        min,\r\n        max\r\n      })\r\n    }, 50)\r\n\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    const $el = this.$el\r\n    const $scrollElement = this.$scrollElement\r\n    const tagName = $scrollElement.tagName.toLowerCase()\r\n    let $element = $scrollElement\r\n\r\n    if (tagName === 'html' || tagName === 'body') {\r\n      $element = window\r\n    }\r\n\r\n    on($el, '.outline-chapters__anchor', 'click', this.onSelect, this, true)\r\n    emit($element, 'scroll', this.onScroll, this, true)\r\n\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    const $el = this.$el\r\n    const $scrollElement = this.$scrollElement\r\n    const tagName = $scrollElement.tagName.toLowerCase()\r\n    let $element = $scrollElement\r\n\r\n    if (tagName === 'html' || tagName === 'body') {\r\n      $element = window\r\n    }\r\n\r\n    off($el, 'click', this.onSelect)\r\n    off($element, 'scroll', this.onScroll)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nChapters.DEFAULTS = {\r\n  parentElement: '',\r\n  scrollElement: '',\r\n  selector: '',\r\n  active: 0,\r\n  closed: false,\r\n  showCode: true,\r\n  position: 'relative',\r\n  chapters: [],\r\n  created: null,\r\n  mounted: null,\r\n  afterClosed: null,\r\n  afterOpened: null,\r\n  afterScroll: null,\r\n  beforeDestroy: null,\r\n  afterDestroy: null\r\n}\r\n\r\nexport default Chapters\r\n","import createElement from './utils/dom/createElement'\r\n\r\nconst _paintChapters = (list, chapters, showCode = false) => {\r\n  chapters.forEach((chapter) => {\r\n    const pid = chapter.pid\r\n    const text = createElement(\r\n      'span',\r\n      {\r\n        className: 'outline-chapters__text'\r\n      },\r\n      [chapter.text]\r\n    )\r\n    const link = createElement(\r\n      'a',\r\n      {\r\n        id: `outline-anchor-${chapter.id}`,\r\n        className: 'outline-chapters__anchor',\r\n        href: '#' + chapter.rel,\r\n        rel: chapter.rel,\r\n        'data-id': chapter.id\r\n      },\r\n      [text]\r\n    )\r\n    let parent\r\n    let ul\r\n    let li\r\n    let code\r\n    let children = []\r\n\r\n    if (showCode) {\r\n      code = createElement(\r\n        'span',\r\n        {\r\n          className: 'outline-chapters__code',\r\n          'data-id': chapter.id\r\n        },\r\n        [chapter.code]\r\n      )\r\n\r\n      link.insertBefore(code, link.firstChild)\r\n    }\r\n\r\n    children.push(link)\r\n\r\n    li = createElement(\r\n      'li',\r\n      {\r\n        id: `outline-chapter-${chapter.id}`,\r\n        className: 'outline-chapters__item',\r\n        'data-id': chapter.id\r\n      },\r\n      children\r\n    )\r\n\r\n    if (pid === -1) {\r\n      list.appendChild(li)\r\n    } else {\r\n      parent = document.getElementById('outline-chapter-' + pid)\r\n      ul = document.getElementById('outline-subject-' + pid)\r\n\r\n      if (!ul) {\r\n        ul = createElement(\r\n          'ul',\r\n          {\r\n            id: 'outline-subject-' + pid,\r\n            className: 'outline-chapters__subject'\r\n          },\r\n          [li]\r\n        )\r\n\r\n        parent.appendChild(ul)\r\n      } else {\r\n        ul.appendChild(li)\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport default _paintChapters\r\n","import isFunction from '../types/isFunction'\r\n\r\n/**\r\n * 通用的 IntersectionObserver 观察者处理器\r\n * ========================================================================\r\n * @method intersection\r\n * @param {Function} fn\r\n * @param {Object} [props]\r\n * @param {Object|HTMLElement} [props.root]\r\n * @param {String} [props.selector]\r\n * @param {Object} [props.context]\r\n * @param {String} [props.attr]\r\n * @param {String} [props.rootMargin]\r\n */\r\nconst intersection = (fn, props) => {\r\n  const root = props.root || null\r\n  const selector = props.selector || '.outline-heading'\r\n  const context = props.context || null\r\n  const rootMargin = props.rootMargin || '0px 0px -90% 0px'\r\n  const options = {\r\n    rootMargin: rootMargin\r\n  }\r\n  const Observer = new IntersectionObserver((entries) => {\r\n    entries.forEach((entry) => {\r\n      if (entry.intersectionRatio > 0) {\r\n        if (isFunction(fn)) {\r\n          fn.call(context || entry.target, entry.target)\r\n        }\r\n      }\r\n    })\r\n  }, options)\r\n\r\n  if (root) {\r\n    options.root = root\r\n  }\r\n\r\n  document.querySelectorAll(selector).forEach((section) => {\r\n    Observer.observe(section)\r\n  })\r\n}\r\n\r\nexport default intersection\r\n","import { createSvgIcon } from './utils/icons'\r\nimport createElement from './utils/dom/createElement'\r\nimport addClass from './utils/dom/addClass'\r\n\r\nconst _createButton = (button) => {\r\n  const $icon = createSvgIcon(button.icon, button.size)\r\n  const $anchor = createElement(\r\n    'a',\r\n    {\r\n      className: `outline-toolbar__anchor`,\r\n      href: button.link\r\n    },\r\n    [$icon]\r\n  )\r\n  const $button = createElement(\r\n    'div',\r\n    {\r\n      className: `outline-toolbar__button ${button.name}`\r\n    },\r\n    [button.link ? $anchor : $icon]\r\n  )\r\n\r\n  addClass($icon, 'outline-toolbar__icon')\r\n\r\n  if (button.disabled) {\r\n    addClass($button, 'outline-toolbar_disabled')\r\n  }\r\n\r\n  return $button\r\n}\r\n\r\nexport default _createButton\r\n","import Base from './base'\n\nimport isFunction from './utils/types/isFunction'\nimport isObject from './utils/types/isObject'\nimport isArray from './utils/types/isArray'\nimport later from './utils/lang/later'\nimport createElement from './utils/dom/createElement'\nimport addClass from './utils/dom/addClass'\nimport hasClass from './utils/dom/hasClass'\nimport removeClass from './utils/dom/removeClass'\nimport on from './utils/event/on'\nimport off from './utils/event/off'\nimport { paintSvgSprites } from './utils/icons'\n\nimport _createButton from './_createButton'\n\nconst DISABLED = 'outline-toolbar_disabled'\nconst HIDDEN = 'outline-toolbar_hidden'\n\nclass Toolbar extends Base {\n  constructor(options) {\n    super()\n\n    this.attrs = Toolbar.DEFAULTS\n    this.$el = null\n    this.disabled = false\n    this.closed = false\n    this.buttons = []\n\n    if (options) {\n      this.initialize(options)\n    }\n  }\n\n  initialize(options) {\n    let created\n\n    this.attr(options)\n    created = this.attr('created')\n    this.disabled = this.attr('disabled')\n    this.closed = this.attr('closed')\n\n    if (isFunction(created)) {\n      created.call(this)\n    }\n\n    this.render().addListeners()\n\n    return this\n  }\n\n  isDisabled(name) {\n    const buttons = this.attr('buttons')\n    let button\n\n    if (name) {\n      button = buttons.find((option) => option.name === name)\n\n      return !!(button && button.disabled)\n    }\n\n    return this.disabled\n  }\n\n  isClosed() {\n    return this.closed\n  }\n\n  highlight(name) {\n    const button = this.buttons.find((item) => item.name === name)\n    const ACTIVE = 'outline-toolbar_active'\n    let $button\n\n    if ($button) {\n      return this\n    }\n\n    $button = button.$el\n\n    if (hasClass($button, ACTIVE)) {\n      removeClass($button, ACTIVE)\n    } else {\n      addClass($button, ACTIVE)\n    }\n\n    return this\n  }\n\n  render() {\n    const mounted = this.attr('mounted')\n    const buttons = this.attr('buttons') || []\n    const placement = this.attr('placement')\n    const $buttons = document.createDocumentFragment()\n    const $fragment = document.createDocumentFragment()\n\n    paintSvgSprites()\n\n    buttons.forEach((button) => {\n      const $button = _createButton(button)\n\n      $buttons.appendChild($button)\n      this.buttons.push({\n        name: button.name,\n        $el: $button\n      })\n    })\n\n    this.$el = createElement(\n      'div',\n      {\n        id: 'outline-toolbar',\n        className: `outline-toolbar outline-toolbar_${placement}`\n      },\n      [$buttons]\n    )\n    $fragment.appendChild(this.$el)\n    document.body.appendChild($fragment)\n\n    if (this.closed) {\n      this.hide()\n    }\n\n    if (this.disabled) {\n      this.disable()\n    }\n\n    if (isFunction(mounted)) {\n      mounted.call(this)\n    }\n\n    return this\n  }\n\n  add(button) {\n    const $el = this.$el\n    const buttons = this.attr('buttons')\n    const action = button.action\n    const $fragment = document.createDocumentFragment()\n    let type\n\n    if (isObject(button)) {\n      buttons.push(button)\n      $fragment.appendChild(_createButton(button))\n    } else if (isArray(button)) {\n      button.forEach((item) => {\n        $fragment.appendChild(_createButton(item))\n      })\n    }\n    $el.appendChild($fragment)\n\n    if (action && isFunction(action.handler)) {\n      type = action.type || 'click'\n      on($el, `.${button.name}`, type, action.handler)\n    }\n\n    return this\n  }\n\n  remove(name) {\n    const $el = this.$el\n    const buttons = this.attr('buttons')\n    const button = buttons.find((option) => option.name === name)\n    let index = -1\n    let $button\n\n    if (!button) {\n      return this\n    }\n\n    buttons.forEach((button, i) => {\n      if (button.name === name) {\n        index = i\n      }\n    })\n\n    if (index > -1) {\n      this.attr().buttons.splice(index, 1)\n    }\n\n    $button = $el.querySelector(`.${name}`)\n    this.switch(name, false)\n    $el.removeChild($button)\n\n    return this\n  }\n\n  switch(name, enabled) {\n    const $el = this.$el\n    const buttons = this.attr('buttons')\n    const button = buttons.find((option) => option.name === name)\n    let action\n    let type\n    let listener\n    let $button\n\n    if (!button) {\n      return this\n    }\n\n    buttons.forEach((option) => {\n      if (option.name === name) {\n        button.disabled = !enabled\n      }\n    })\n\n    action = button.action\n    $button = $el.querySelector(`.${name}`)\n\n    if (action) {\n      type = action.type || 'click'\n      listener = action.handler\n    }\n\n    if (enabled) {\n      removeClass($button, DISABLED)\n\n      if (type && listener) {\n        on($el, `.${name}`, type, listener)\n      }\n    } else {\n      addClass($button, DISABLED)\n\n      if (type && listener) {\n        off($el, type, listener)\n      }\n    }\n\n    return this\n  }\n\n  disable(name) {\n    const disabled = this.attr('afterDisabled')\n\n    if (name) {\n      this.switch(name, false)\n    } else {\n      addClass(this.$el, DISABLED)\n      this.removeListeners()\n      this.disabled = true\n\n      if (isFunction(disabled)) {\n        disabled.call(this)\n      }\n    }\n\n    return this\n  }\n\n  enable(name) {\n    const enabled = this.attr('afterEnabled')\n\n    if (name) {\n      this.switch(name, true)\n    } else {\n      this.disabled = false\n      removeClass(this.$el, DISABLED)\n      this.addListeners()\n\n      if (isFunction(enabled)) {\n        enabled.call(this)\n      }\n    }\n\n    return this\n  }\n\n  show(name) {\n    const opened = this.attr('afterOpened')\n    const button = this.attr('buttons').find((option) => option.name === name)\n    const $el = this.$el\n    let $button\n\n    if (name) {\n      if (!button) {\n        return this\n      }\n\n      $button = $el.querySelector(`.${name}`)\n      removeClass($button, HIDDEN)\n    } else {\n      removeClass($el, HIDDEN)\n      this.closed = false\n\n      if (isFunction(opened)) {\n        later(() => {\n          opened.call(this)\n        }, 310)\n      }\n    }\n\n    return this\n  }\n\n  hide(name) {\n    const closed = this.attr('afterClosed')\n    const button = this.attr('buttons').find((option) => option.name === name)\n    const $el = this.$el\n    let $button\n\n    if (name) {\n      if (!button) {\n        return this\n      }\n      $button = $el.querySelector(`.${name}`)\n      addClass($button, HIDDEN)\n    } else {\n      addClass($el, HIDDEN)\n      this.closed = true\n\n      if (isFunction(closed)) {\n        later(() => {\n          closed.call(this)\n        }, 310)\n      }\n    }\n\n    return this\n  }\n\n  toggle() {\n    if (this.isClosed()) {\n      this.show()\n    } else {\n      this.hide()\n    }\n\n    return this\n  }\n\n  destroy() {\n    const beforeDestroy = this.attr('beforeDestroy')\n    const afterDestroy = this.attr('afterDestroy')\n    let $el = this.$el\n\n    if (isFunction(beforeDestroy)) {\n      beforeDestroy.call(this)\n    }\n\n    this.removeListeners()\n    document.body.removeChild($el)\n    $el = null\n\n    this.attr(Toolbar.DEFAULTS)\n    this.disabled = false\n    this.closed = false\n    this.buttons = []\n\n    if (isFunction(afterDestroy)) {\n      afterDestroy.call(this)\n    }\n\n    return this\n  }\n\n  refresh() {\n    const $el = this.$el\n    const buttons = this.attr('buttons') || []\n\n    this.removeListeners()\n    $el.innerHTML = ''\n\n    buttons.forEach((button) => {\n      this.$el.appendChild(_createButton(button))\n    })\n\n    this.addListeners()\n\n    return this\n  }\n\n  addListeners() {\n    const buttons = this.attr('buttons')\n    const $el = this.$el\n\n    if (!buttons || buttons.length < 1) {\n      return this\n    }\n\n    buttons.forEach((button) => {\n      const action = button.action\n      const disabled = this.disabled\n      let type\n      let listener\n      let context\n\n      if (action) {\n        listener = action.handler\n        type = action.type || 'click'\n        context = action.context\n      }\n\n      if (isFunction(listener) && !disabled) {\n        on($el, `.${button.name}`, type, listener, context || this, true)\n      }\n    })\n\n    return this\n  }\n\n  removeListeners() {\n    const buttons = this.attr('buttons')\n    const $el = this.$el\n\n    if (!buttons || buttons.length < 1) {\n      return this\n    }\n\n    buttons.forEach((button) => {\n      const action = button.action\n      const disabled = this.disabled\n      let type\n      let listener\n\n      if (action) {\n        listener = action.handler\n        type = action.type || 'click'\n      }\n\n      if (isFunction(listener) && !disabled) {\n        off($el, type, listener)\n      }\n    })\n\n    return this\n  }\n}\n\nToolbar.DEFAULTS = {\n  placement: 'ltr',\n  closed: false,\n  disabled: false,\n  buttons: [],\n  created: null,\n  mounted: null,\n  afterClosed: null,\n  afterOpened: null,\n  afterDisabled: null,\n  afterEnabled: null,\n  beforeDestroy: null,\n  afterDestroy: null\n}\n\nexport default Toolbar\n","/**\r\n * 生成唯一 id 字符串的函数\r\n * ========================================================================\r\n * @method guid\r\n * @param {String} [prefix] - 生成 id 的前缀字符串\r\n * @return {String} 返回一个表示唯一 id 的字符串\r\n */\r\nconst guid = (() => {\r\n  let uuid = 0\r\n\r\n  return (prefix) => {\r\n    uuid += 1\r\n\r\n    return prefix ? prefix + '-' + uuid : 'guid-' + uuid\r\n  }\r\n})()\r\n\r\nexport default guid\r\n","import _subscribers from './_subscribers'\r\nimport hasOwn from '../lang/hasOwn'\r\n\r\n/**\r\n * 删除与给定 topic 相同的订阅者信息\r\n * ========================================================================\r\n * @method _removeSubscriber\r\n * @param {String} topic - （必须）订阅主题字符串\r\n * @returns {Boolean}\r\n */\r\nconst _removeSubscriber = (topic) => {\r\n  if (!hasOwn(_subscribers, topic)) {\r\n    return false\r\n  }\r\n\r\n  delete _subscribers[topic]\r\n}\r\n\r\nexport default _removeSubscriber\r\n","import has from './has'\r\nimport _removeSubscriber from './_removeSubscriber'\r\nimport _removeSubscriberByToken from './_removeSubscriberByToken'\r\n\r\n/**\r\n * 取消订阅主题\r\n * ========================================================================\r\n * @method off\r\n * @param {String} topic - （必须）订阅的主题\r\n * @param {Function|String} [token] - （可选）订阅主题的处理器函数或者唯一 Id 值\r\n */\r\nconst off = (topic, token) => {\r\n  if (!has(topic)) {\r\n    return false\r\n  }\r\n\r\n  if (token) {\r\n    _removeSubscriberByToken(token)\r\n  } else {\r\n    _removeSubscriber(topic)\r\n  }\r\n}\r\n\r\nexport default off\r\n","import _subscribers from './_subscribers'\r\nimport _removeSubscriber from './_removeSubscriber'\r\n\r\n/**\r\n * 通过订阅者 token 值删除订阅者信息\r\n * ========================================================================\r\n * @method _removeSubscriberByToken\r\n * @param {String} token - 订阅者 token 字符串\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst _removeSubscriberByToken = (token) => {\r\n  const keys = Object.keys(_subscribers)\r\n  let index = -1\r\n\r\n  if (!token || keys.length < 1) {\r\n    return false\r\n  }\r\n\r\n  keys.forEach((subject) => {\r\n    const subscriber = _subscribers[subject]\r\n    let topic\r\n\r\n    subscriber.forEach((execution, j) => {\r\n      if (execution.callback === token || execution.token === token) {\r\n        topic = execution.topic\r\n        subscriber.splice(index, j)\r\n      }\r\n    })\r\n\r\n    /* istanbul ignore else */\r\n    if (subscriber.length < 1) {\r\n      _removeSubscriber(topic)\r\n    }\r\n  })\r\n}\r\n\r\nexport default _removeSubscriberByToken\r\n","import Base from './base'\nimport Anchors from './anchors'\nimport Drawer from './drawer'\nimport Chapters from './chapters'\nimport Toolbar from './toolbar'\n\nimport isFunction from './utils/types/isFunction'\nimport later from './utils/lang/later'\nimport subscribe from './utils/observer/on'\nimport unsubscribe from './utils/observer/off'\n\nclass Outline extends Base {\n  constructor(options) {\n    super()\n\n    this.attrs = Outline.DEFAULTS\n    this.anchors = null\n    this.drawer = null\n    this.chapters = null\n    this.toolbar = null\n\n    if (options) {\n      this.initialize(options)\n    }\n  }\n\n  initialize(options) {\n    this.attr(options).render().addListeners()\n    return this\n  }\n\n  getChapters() {\n    return this.anchors.getChapters()\n  }\n\n  render() {\n    this._renderAnchors()._renderChapters()._renderToolbar()\n\n    return this\n  }\n\n  _renderAnchors() {\n    const articleElement = this.attr('articleElement')\n    const selector = this.attr('selector')\n    const scrollElement = this.attr('scrollElement')\n    const showCode = this.attr('showCode')\n    const anchorURL = this.attr('anchorURL')\n\n    this.anchors = new Anchors({\n      articleElement: articleElement,\n      scrollElement: scrollElement,\n      selector,\n      showCode,\n      anchorURL\n    })\n\n    return this\n  }\n\n  _renderChapters() {\n    const title = this.attr('title')\n    const scrollElement = this.attr('scrollElement')\n    const customClass = this.attr('customClass')\n    const showCode = this.attr('showCode')\n    const position = this.attr('position')\n    const placement = this.attr('placement')\n    const count = this.anchors.count()\n    let parentElement = this.attr('parentElement')\n    let CHAPTERS_OPTIONS = {\n      scrollElement: scrollElement,\n      showCode,\n      position,\n      title,\n      chapters: this.anchors.getChapters()\n    }\n\n    if (count < 1) {\n      return this\n    }\n\n    if (position === 'relative') {\n      this.drawer = new Drawer({\n        placement,\n        title,\n        size: 'tiny',\n        hasOffset: true,\n        hasPadding: false,\n        customClass,\n        afterClosed: () => {\n          const toolbar = this.toolbar\n          toolbar.toggle()\n        }\n      })\n      parentElement = this.drawer.$main\n    } else {\n      CHAPTERS_OPTIONS.customClass = customClass\n    }\n\n    CHAPTERS_OPTIONS.parentElement = parentElement\n    this.chapters = new Chapters(CHAPTERS_OPTIONS)\n\n    return this\n  }\n\n  _renderToolbar() {\n    const placement = this.attr('placement')\n    const count = this.anchors.count()\n    const UP = {\n      name: 'up',\n      icon: 'up',\n      size: 20,\n      action: {\n        type: 'click',\n        handler: this.onScrollTop,\n        context: this\n      }\n    }\n    const MENU = {\n      name: 'menu',\n      icon: 'menu',\n      size: 20,\n      action: {\n        type: 'click',\n        handler: this.onToggle,\n        context: this\n      }\n    }\n    const DOWN = {\n      name: 'down',\n      icon: 'down',\n      size: 20,\n      action: {\n        type: 'click',\n        handler: this.onScrollBottom,\n        context: this\n      }\n    }\n    const buttons = []\n\n    buttons.push(UP)\n    if (count > 0) {\n      buttons.push(MENU)\n    }\n    buttons.push(DOWN)\n\n    this.toolbar = new Toolbar({\n      placement,\n      buttons: buttons\n    })\n\n    return this\n  }\n\n  toTop(afterScroll) {\n    const toolbar = this.toolbar\n    const chapters = this.chapters\n    const count = this.anchors.count()\n    const afterTop = () => {\n      toolbar.hide('up')\n      toolbar.show('down')\n\n      if (count > 1) {\n        chapters.highlight(0)\n      }\n      chapters.playing = false\n\n      if (isFunction(afterScroll)) {\n        afterScroll.call(this)\n      }\n    }\n\n    chapters.playing = true\n    this.scrollTo(0, afterTop)\n\n    return this\n  }\n\n  toBottom(afterScroll) {\n    const anchors = this.anchors\n    const toolbar = this.toolbar\n    const chapters = this.chapters\n    const count = anchors.count()\n    const top = anchors.$scrollElement.scrollHeight\n    const afterDown = () => {\n      toolbar.hide('down')\n      toolbar.show('up')\n\n      chapters.playing = false\n\n      if (isFunction(afterScroll)) {\n        afterScroll.call(this)\n      }\n    }\n\n    chapters.playing = true\n    if (count > 0) {\n      chapters.highlight(anchors.count() - 1)\n    }\n    this.scrollTo(top, afterDown)\n\n    return this\n  }\n\n  scrollTo(top, afterScroll) {\n    this.anchors.scrollTo(top, afterScroll)\n    return this\n  }\n\n  toggle() {\n    const toolbar = this.toolbar\n    const drawer = this.drawer\n    const chapters = this.chapters\n    const count = this.anchors.count()\n\n    toolbar.toggle()\n\n    if (count < 1) {\n      return this\n    }\n\n    later(() => {\n      if (chapters.isInside()) {\n        chapters.toggle()\n      } else {\n        drawer.toggle()\n      }\n    })\n\n    return this\n  }\n\n  destroy() {\n    const anchors = this.anchors\n    const chapters = this.chapters\n    const count = anchors.count()\n\n    this.removeListeners()\n\n    this.attr(Outline.DEFAULTS)\n    this.anchors.destroy()\n    if (count < 1) {\n      chapters.destroy()\n      if (chapters.isOutside()) {\n        this.drawer.destroy()\n      }\n    }\n    this.toolbar.destroy()\n\n    return this\n  }\n\n  onToggle() {\n    this.toggle()\n    return this\n  }\n\n  onScrollTop() {\n    this.toTop()\n    return this\n  }\n\n  onScrollBottom() {\n    this.toBottom()\n    return this\n  }\n\n  onUpdateToolbar({ top, min, max }) {\n    const toolbar = this.toolbar\n    const current = Math.ceil(top)\n\n    if (current <= min) {\n      toolbar.hide('up')\n      toolbar.show('down')\n    } else if (current >= max) {\n      toolbar.hide('down')\n      toolbar.show('up')\n    } else if (current > min && current < max) {\n      toolbar.show('up')\n      toolbar.show('down')\n    }\n\n    return this\n  }\n\n  addListeners() {\n    subscribe('update:toolbar', this.onUpdateToolbar, this)\n    return this\n  }\n\n  removeListeners() {\n    unsubscribe('update:toolbar')\n    return this\n  }\n}\n\nOutline.DEFAULTS = {\n  articleElement: '#article',\n  selector: 'h2,h3,h4,h5,h6',\n  title: '目录',\n  scrollElement: 'html,body',\n  position: 'relative',\n  parentElement: '#aside',\n  placement: 'rtl',\n  showCode: true,\n  anchorURL: '',\n  customClass: ''\n}\n\nif (window.jQuery) {\n  // 将 Outline 扩展为一个 jquery 插件\n  // eslint-disable-next-line no-undef\n  jQuery.extend(jQuery.fn, {\n    outline: function (options) {\n      // eslint-disable-next-line no-undef\n      let $article = jQuery(this)\n\n      return new Outline(\n        // eslint-disable-next-line no-undef\n        jQuery.extend({}, options, {\n          articleElement: $article\n        })\n      )\n    }\n  })\n}\n\nexport default Outline\n","import _subscribers from './_subscribers'\r\nimport isFunction from '../types/isFunction'\r\nimport guid from '../lang/guid'\r\n\r\n/**\r\n * 订阅主题，并给出处理器函数\r\n * ========================================================================\r\n * @method on\r\n * @param {String} topic - （必须）主题名称\r\n * @param {Function} handler - （必须）主题的处理器函数\r\n * @param {Object} [context] - （可选）指定 this 执行上下文\r\n * @return {String|Boolean} - 唯一的 token 字符串，例如：'guid-1'。\r\n */\r\nconst on = (topic, handler, context = null) => {\r\n  const token = guid()\r\n  let subject = typeof topic === 'symbol' ? topic.toString() : topic\r\n\r\n  if (!isFunction(handler)) {\r\n    return false\r\n  }\r\n\r\n  /* istanbul ignore else */\r\n  if (!_subscribers[subject]) {\r\n    _subscribers[subject] = []\r\n  }\r\n\r\n  _subscribers[subject].push({\r\n    topic: subject,\r\n    callback: handler,\r\n    context,\r\n    token\r\n  })\r\n\r\n  return token\r\n}\r\n\r\nexport default on\r\n"],"names":["isString","str","hasOwn","obj","prop","hasOwnProperty","Object","prototype","call","toString","isObject","o","apply","Base","constructor","options","this","attrs","initialize","attr","render","addListeners","value","origin","source","keys","forEach","arguments","length","destroy","removeListeners","reload","isFunction","val","isElement","nodeName","tagName","nodeType","later","fn","delay","setTimeout","easeInQuad","x","_getScrollElement","scrollElement","$rootElements","$scrollElement","document","querySelector","querySelectorAll","scrollTop","timer","scrollTo","top","afterStop","speed","step","distance","MAX_HEIGHT","scrollHeight","MAX_TOP","stop","clearTimeout","play","matches","el","selector","sel","replace","msMatchesSelector","getParentOrHost","host","parentNode","CAPTURE_EVENTS","_off","type","capture","indexOf","_delegateListener","listeners","_listeners","index","listener","i","handler","splice","_delete","removeEventListener","purgeElement","recurse","$element","$children","childNodes","filter","getListeners","$child","off","on","data","context","once","evt","target","getTarget","delegateTarget","ctx","includeCTX","closest","overrideContext","push","addEventListener","stopPropagation","preventDefault","_subscribers","_hasDirectSubscribersFor","topic","has","isDirect","found","position","lastIndexOf","substring","_hasSubscribers","emit","async","execute","subscriber","message","callback","deliver","isArray","Array","paintSvgSprites","symbols","SYMBOLS","sprites","concat","$body","body","$icons","innerHTML","join","createElement","insertBefore","firstChild","createSvgIcon","name","size","color","iconSet","binds","width","height","defaultRules","svg","$icon","className","trim","setAttribute","toLowerCase","style","cssText","attributes","children","$fragment","createDocumentFragment","$el","append","child","fragment","createTextNode","appendChild","hasClass","allClass","match","RegExp","removeClass","_resetHeading","$heading","hasAnchor","isAtStart","CLS_HEADING","text","$anchor","removeAttribute","removeChild","groupBy","list","groups","group","JSON","stringify","cb","map","getChapters","headings","chapters","previous","level","heading","headingLevel","current","parseInt","pid","differ","_getChapterParentIdByDiffer","id","rel","chapter","paragraph","code","String","_getChaptersWithCode","Anchors","super","DEFAULTS","$articleElement","$headings","created","articleElement","count","mounted","showCode","anchorURL","chapterCode","headingId","href","_updateHeading","after","beforeDestroy","afterDestroy","onAnchorTrigger","afterScroll","offsetTop","max","clientHeight","publish","min","addClass","Drawer","title","closed","$modal","$header","$title","$close","$main","$footer","$overlay","setTitle","isClosed","placement","hasClose","hasOverlay","hasOffset","hasPadding","customClass","zIndex","open","opened","close","toggle","onClose","afterClosed","afterOpened","offsetParent","Chapters","$list","$placeholder","$parentElement","active","$active","playing","parentElement","$parent","isSticky","isFixed","isInside","isOutside","contents","link","parent","ul","li","getElementById","_paintChapters","onObserver","highlight","HIGHLIGHT","getAttribute","sticky","FIXED","show","HIDDEN","hide","props","root","rootMargin","Observer","IntersectionObserver","entries","entry","intersectionRatio","section","observe","intersection","onSelect","split","onScroll","window","_createButton","button","icon","$button","disabled","DISABLED","Toolbar","buttons","isDisabled","find","option","item","ACTIVE","$buttons","disable","add","action","remove","switch","enabled","enable","refresh","afterDisabled","afterEnabled","guid","uuid","prefix","_removeSubscriber","token","subject","execution","j","_removeSubscriberByToken","Outline","anchors","drawer","toolbar","_renderAnchors","_renderChapters","_renderToolbar","CHAPTERS_OPTIONS","UP","onScrollTop","MENU","onToggle","DOWN","onScrollBottom","toTop","toBottom","onUpdateToolbar","Math","ceil","subscribe","unsubscribe","jQuery","extend","outline","$article"],"mappings":"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"}