{"version":3,"file":"anchors.min.js","sources":["src/utils/types/isString.js","src/utils/lang/hasOwn.js","src/utils/lang/toString.js","src/utils/types/isFunction.js","src/utils/types/isObject.js","src/base.js","src/utils/lang/extend.js","src/utils/types/isElement.js","src/utils/lang/easeInQuad.js","src/utils/dom/_getScrollElement.js","src/utils/dom/scrollTo.js","src/utils/dom/matches.js","src/utils/dom/getParentOrHost.js","src/utils/event/enum.js","src/utils/event/_off.js","src/utils/event/_delete.js","src/utils/event/purgeElement.js","src/utils/event/getListeners.js","src/utils/event/off.js","src/utils/event/on.js","src/utils/event/getTarget.js","src/utils/dom/resolveTextNode.js","src/utils/dom/closest.js","src/utils/observer/_subscribers.js","src/utils/observer/_hasDirectSubscribersFor.js","src/utils/observer/has.js","src/utils/observer/_hasSubscribers.js","src/utils/observer/emit.js","src/utils/types/isTypedArray.js","src/utils/types/isArray.js","src/utils/lang/trim.js","src/utils/types/isDOM.js","src/utils/types/isHTMLCollection.js","src/utils/types/isFragment.js","src/utils/types/isTextNode.js","src/utils/dom/setAttribute.js","src/_updateHeading.js","src/utils/icons.js","src/utils/dom/createElement.js","src/utils/dom/removeClass.js","src/utils/dom/hasClass.js","src/_resetHeading.js","src/utils/types/isEmpty.js","src/utils/lang/groupBy.js","src/getChapters.js","src/utils/lang/stripTags.js","src/_getChapterParentIdByDiffer.js","src/_getChaptersWithCode.js","src/anchors.js","src/utils/types/isNumber.js","src/utils/lang/later.js","src/utils/event/stop.js"],"sourcesContent":["/**\n * 检测数据是否为 String 类型\n * ========================================================================\n * @method isArray\n * @param {*} str\n * @returns {boolean}\n */\nconst isString = (str) => {\n  return typeof str === 'string'\n}\n\nexport default isString\n","/**\n * 检测对象自身属性中是否具有指定的属性。\n * ========================================================================\n * @method hasOwn\n * @param {Object} obj - （必须）检测的目标对象\n * @param {String} prop - （必须）属性名\n * @returns {Boolean}\n */\nconst hasOwn = (obj, prop) => {\n  const hasOwnProperty = Object.prototype.hasOwnProperty\n  return obj && hasOwnProperty.call(obj, prop)\n}\n\nexport default hasOwn\n","const toString = Object.prototype.toString\n\n/**\n * Object 对象原型上的 toString 方法\n * ========================================================================\n * @method toString\n * @param {*} val\n * @returns {string}\n */\nexport default toString\n","import toString from '../lang/toString'\n\n/**\n * 检测测试数据是否为 Function 类型\n * ========================================================================\n * @method isFunction\n * @param {*} val - （必须）待检测的数据\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\n */\nconst isFunction = (val) => {\n  return (\n    typeof val === 'function' || toString.apply(val) === '[object Function]'\n  )\n}\n\nexport default isFunction\n","import toString from '../lang/toString'\nimport isFunction from '../types/isFunction'\n\n/**\n * 检测数据是否为 Object 类型\n * ========================================================================\n * @method isObject\n * @param {*} o\n * @returns {boolean}\n */\nconst isObject = (o) => {\n  return (\n    (toString.apply(o) === '[object Object]' ||\n      typeof o === 'object' ||\n      isFunction(o)) &&\n    o !== null\n  )\n}\n\nexport default isObject\n","import isString from './utils/types/isString'\r\nimport hasOwn from './utils/lang/hasOwn'\r\nimport isObject from './utils/types/isObject'\r\nimport extend from './utils/lang/extend'\r\n\r\nclass Base {\r\n  constructor(options) {\r\n    this.attrs = {}\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    this.attr(options).render().addListeners()\r\n    return this\r\n  }\r\n\r\n  attr(prop, value) {\r\n    const attrs = this.attrs\r\n\r\n    if (isString(prop)) {\r\n      // 只能扩展 attrs 中已有的属性\r\n      if (value && hasOwn(attrs, prop)) {\r\n        // 更新单个配置信息\r\n        attrs[prop] = value\r\n        return this\r\n      }\r\n\r\n      // 只传递 prop 参数，则返回对应的属性值\r\n      return attrs[prop]\r\n    } else if (isObject(prop)) {\r\n      // 批量更新配置信息\r\n      extend(attrs, prop)\r\n\r\n      return this\r\n    } else if (arguments.length === 0) {\r\n      // 不传递参数，直接返回整个\r\n      return attrs\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  render() {\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    this.removeListeners()\r\n    return this\r\n  }\r\n\r\n  reload(options) {\r\n    this.destroy().initialize(this.attr(options))\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    return this\r\n  }\r\n}\r\n\r\nexport default Base\r\n","import hasOwn from './hasOwn'\n\n/**\n * 扩展对象\n * ========================================================================\n * @method extend\n * @param {Object} origin\n * @param {Object} source\n */\nconst extend = (origin, source) => {\n  const keys = Object.keys(source)\n\n  keys.forEach((prop) => {\n    if (hasOwn(source, prop)) {\n      origin[prop] = source[prop]\n    }\n  })\n}\n\nexport default extend\n","import isObject from './isObject'\n\n/**\n * 检测数据是否为 HTMLElement DOM 节点\n * ========================================================================\n * @method isElement\n * @param {*} o\n * @returns {boolean}\n */\nconst isElement = (o) => {\n  return isObject(o) && o.nodeName && o.tagName && o.nodeType === 1\n}\n\nexport default isElement\n","/**\n * 返回给定值的平方值\n * ========================================================================\n * @method easeInQuad\n * @param {Number} x\n * @returns {number}\n */\nconst easeInQuad = (x) => {\n  return x * x\n}\n\nexport default easeInQuad\n","import isString from '../types/isString'\nimport isElement from '../types/isElement'\n\nconst _getScrollElement = (scrollElement = null) => {\n  let $rootElements\n  let $scrollElement\n\n  if (!scrollElement) {\n    $rootElements = document.querySelectorAll('html,body')\n    $scrollElement =\n      $rootElements[0].scrollTop - $rootElements[1].scrollTop >= 0\n        ? $rootElements[0]\n        : $rootElements[1]\n  } else {\n    if (isString(scrollElement)) {\n      $scrollElement = document.querySelector(scrollElement)\n    } else if (isElement(scrollElement)) {\n      $scrollElement = scrollElement\n    }\n  }\n\n  return $scrollElement\n}\n\nexport default _getScrollElement\n","import easeInQuad from '../lang/easeInQuad'\nimport isFunction from '../types/isFunction'\nimport isNumber from '../types/isNumber'\nimport _getScrollElement from './_getScrollElement'\n\nlet timer = null\n\n/**\n * 指定 rootElement DOM 节点滚动到指定 top 位置\n * ========================================================================\n * @method scrollTo\n * @param {HTMLElement|Object} [scrollElement] - （必须）要滚动的 DOM 节点\n * @param {Number} top - （必须）滚动的 scrollTop 数值\n * @param {Function|Number} [afterStop] - （可选）滚动完成的回调函数或者滚动的速率值\n * @param {Number} [speed] - 可选）滚动的速率值\n */\nconst scrollTo = (scrollElement, top, afterStop, speed = 50) => {\n  const $scrollElement = _getScrollElement(scrollElement)\n  let scrollTop = $scrollElement.scrollTop\n  let step = 0\n  const distance = top - scrollTop\n  const MAX_HEIGHT = $scrollElement.scrollHeight\n  const MAX_TOP = top - MAX_HEIGHT <= 0 ? top : MAX_HEIGHT\n  const stop = () => {\n    clearTimeout(timer)\n    timer = null\n  }\n  const play = () => {\n    if (timer) {\n      stop()\n    }\n\n    step += 3\n\n    // 线上滚动\n    if (distance < 0) {\n      scrollTop -= easeInQuad(step)\n      $scrollElement.scrollTop = scrollTop\n\n      if (scrollTop <= top) {\n        $scrollElement.scrollTop = top\n        stop()\n\n        if (isFunction(afterStop)) {\n          afterStop(top)\n        }\n\n        return false\n      }\n    } else {\n      scrollTop += easeInQuad(step)\n      $scrollElement.scrollTop = scrollTop\n\n      if (scrollTop >= MAX_TOP) {\n        $scrollElement.scrollTop = MAX_TOP\n        stop()\n\n        if (isFunction(afterStop)) {\n          afterStop(MAX_TOP)\n        }\n\n        return false\n      }\n    }\n\n    timer = setTimeout(play, isNumber(afterStop) ? afterStop : speed)\n  }\n\n  play()\n}\n\nexport default scrollTo\n","/**\n * 获取 options 节点下匹配 selector 选择器的 DOM 节点\n * ========================================================================\n * Element.matches() 方法可以用来判断 DOM 元素是否与给定的选择器匹配，事件代理判断是\n * 否触发绑定的代理事件回调函数，关键就是使用 Element.matches() 辨别当前事件触发的目\n * 标 DOM 元素是否为事件代理所期望触发的目标。\n * ========================================================================\n * @method matches\n * @see https://developer.mozilla.org/en-US/docs/web/api/element/matches\n * @param {HTMLElement} el - （必须）DOM 元素\n * @param {String} selector - （必须）匹配 DOM 元素的选择器\n * @returns {Boolean}\n */\nconst matches = (el, selector = '') => {\n  const sel = selector.replace(/^>/i, '')\n\n  if (!selector || !sel || !el) {\n    return false\n  }\n\n  /* istanbul ignore else */\n  if (el.matches) {\n    return el.matches(sel)\n  } else if (el.msMatchesSelector) {\n    return el.msMatchesSelector(sel)\n  } else {\n    return false\n  }\n}\n\nexport default matches\n","/**\n * 获取 DOM 元素的父节点\n * ========================================================================\n * @method getParentOrHost\n * @param {*|HTMLElement} el - （必须）要获取父节点的 DOM 元素\n * @returns {*|HTMLElement}\n */\nconst getParentOrHost = (el) => {\n  return el.host && el !== document && el.host.nodeType\n    ? el.host\n    : el.parentNode\n}\n\nexport default getParentOrHost\n","export const CAPTURE_EVENTS = [\n  'focusout',\n  'blur',\n  'focusin',\n  'focus',\n  'load',\n  'unload',\n  'mouseenter',\n  'mouseleave'\n]\n","import { CAPTURE_EVENTS } from './enum'\nimport _delete from './_delete'\n\n/**\n * （私有方法）取消 type 类型的代理事件绑定\n * ========================================================================\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\n * ========================================================================\n * @method _off\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\n * @param {String} type - （必须）事件类型\n * @param {Function} fn - （必须）事件处理器回调函数\n * @private\n */\nconst _off = (el, type, fn) => {\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\n\n  /* istanbul ignore else */\n  if (fn._delegateListener) {\n    fn = fn._delegateListener\n    delete fn._delegateListener\n  }\n\n  // 移除缓存的 _listeners 数据\n  _delete(el, type, fn)\n\n  el.removeEventListener(type, fn, capture)\n}\n\nexport default _off\n","/**\n * 删除 DOM 元素缓存的 _listeners 数据\n * ========================================================================\n * @method _delete\n * @param {HTMLElement} el - 要删除 listener 的 DOM 元素\n * @param {String} type - 事件类型（名称）\n * @param {Function} [fn] - 事件处理器回调函数\n */\nconst _delete = function (el, type, fn) {\n  const listeners = el._listeners\n  let index = -1\n\n  if (listeners.length < 1) {\n    return false\n  }\n\n  // 移除缓存的 _listeners 数据\n  listeners.forEach((listener, i) => {\n    const handler = listener.fn\n\n    if (type === listener.type) {\n      index = i\n\n      if (handler === fn) {\n        index = i\n      }\n    }\n  })\n\n  /* istanbul ignore else */\n  if (index > -1) {\n    listeners.splice(index, 1)\n  }\n}\n\nexport default _delete\n","import isString from '../types/isString'\nimport isElement from '../types/isElement'\nimport getListeners from './getListeners'\nimport _off from './_off'\n\n/**\n * 销毁（type 类型的）代理事件绑定\n * ========================================================================\n * 1. 设置了事件类型 type，则销毁指定类型的事件绑定，否则清除所有代理事件绑定\n * 2. recurse 设置为 true，递归销毁子节点全部事件绑定\n * ========================================================================\n * @method purgeElement\n * @param {HTMLElement|String} el - （必须）DOM 元素或者其选择器\n * @param {String|Boolean} type - （必须）事件类型\n * @param {Boolean} [recurse] - （可选）是否递归销毁子节点所有事件绑定\n */\nconst purgeElement = function (el, type, recurse = false) {\n  const $element = isString(el) ? document.querySelector(el) : el\n  const $children = $element.childNodes\n  const listeners = getListeners($element, type)\n\n  listeners.forEach((listener) => {\n    _off($element, listener.type, listener.fn)\n  })\n\n  if (\n    (recurse || type === true || arguments.length === 1) &&\n    $element &&\n    $children\n  ) {\n    $children.forEach(($child) => {\n      if (isElement($child)) {\n        purgeElement($child, type, recurse)\n      }\n    })\n  }\n}\n\nexport default purgeElement\n","import isString from '../types/isString'\n\n/**\n * 获取 DOM 元素（type 事件类型）事件绑定信息\n * ========================================================================\n * 如果设置了事件类型 type， 则返回指定类型的事件绑定信息，否则返回所有事件绑定信息\n * ========================================================================\n * @methods getListeners\n * @param {HTMLElement} el - （必须）要获取事件绑定信息的 DOM 元素\n * @param {String} [type] - （可选）事件类型\n * @returns {Array} - 已绑定的事件信息\n */\nconst getListeners = (el, type) => {\n  let listeners = el._listeners || []\n\n  if (isString(type) && type) {\n    listeners = listeners.filter((listener) => {\n      return listener.type === type\n    })\n  }\n\n  return listeners\n}\n\nexport default getListeners\n","import purgeElement from './purgeElement'\nimport isFunction from '../types/isFunction'\nimport _off from './_off'\n\n/**\n * 取消 type 类型的代理事件绑定\n * ========================================================================\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\n * ========================================================================\n * @method off\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\n * @param {String} type - （必须）事件类型\n * @param {Function} [fn] - （可选）事件处理器回调函数\n */\nconst off = (el, type, fn) => {\n  // 如果不设置 fn 参数，默认清除 el 元素上绑定的所有事件处理器\n  if (!isFunction(fn)) {\n    return purgeElement(el, type)\n  }\n\n  _off(el, type, fn)\n}\n\nexport default off\n","import closest from '../dom/closest'\nimport off from './off'\nimport getTarget from './getTarget'\n\nimport { CAPTURE_EVENTS } from './enum'\n\n/**\n * 绑定代理事件\n * ========================================================================\n * @method on\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\n * @param {String} selector - （必须）事件代理目标 DOM 元素的选择器\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\n * @param {Function|Object} fn - （可选） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\n * @param {Boolean} once - （可选）是否仅触发一次\n */\nconst on = (el, selector, type, fn, data, context, once = false) => {\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\n\n  const listener = function (evt) {\n    const target = getTarget(evt)\n    // 通过 Element.matches 方法获得点击的目标元素\n    const delegateTarget = closest(target, selector, el)\n    let overrideContext = context || el\n\n    evt.delegateTarget = delegateTarget\n\n    // 当设置为 true 时，则事件处理器回调函数的\n    // this 上下文指向为 data 对象\n    if (context === true) {\n      overrideContext = data\n    }\n\n    /* istanbul ignore else */\n    if (delegateTarget) {\n      // 仅触发一次\n      /* istanbul ignore else */\n      if (once === true) {\n        off(el, type, listener)\n      }\n\n      fn.call(overrideContext, evt, data)\n    }\n  }\n\n  if (!el._listeners) {\n    el._listeners = []\n  }\n\n  // 缓存 options 元素绑定的事件处理器\n  el._listeners.push({\n    el,\n    selector,\n    type,\n    fn: listener,\n    data,\n    context,\n    capture\n  })\n\n  // 缓存包装后的事件处理器\n  fn._delegateListener = listener\n\n  el.addEventListener(type, listener, capture)\n}\n\nexport default on\n","import resolveTextNode from '../dom/resolveTextNode'\n\n/**\n * 返回触发事件的 target DOM 元素\n * ========================================================================\n * @method getTarget\n * @param {Event} evt - Event 对象\n * @return {HTMLElement} - Event 对象的 target DOM 元素\n */\nconst getTarget = function (evt) {\n  const target = evt.target\n\n  return resolveTextNode(target)\n}\n\nexport default getTarget\n","/**\n * 在某些情况下，某些浏览器（例如：Safari 浏览器）会返回实际的目标元素内部的文本节点。\n * resolveTextNode() 方法则会返回实际的目标节点。\n * ========================================================================\n * @method resolveTextNode\n * @param {HTMLElement|Text} el - 要解析的节点\n * @return {*|HTMLElement} - 实际的目标 DOM 节点\n */\nconst resolveTextNode = function (el) {\n  if (el && el.nodeType === 3) {\n    return el.parentNode\n  }\n\n  return el\n}\n\nexport default resolveTextNode\n","import matches from './matches'\nimport getParentOrHost from './getParentOrHost'\n\n/**\n * 获取 options 元素父元素最近的包含 selector 选择器的元素\n * ========================================================================\n * @method closest\n * @param {HTMLElement} el - （必须）DOM 元素\n * @param {String} selector - （必须）DOM 元素的选择其\n * @param {HTMLElement} [ctx] - （必须）比对的 DOM 元素\n * @param {Boolean} [includeCTX] - （必须）是否包含 context DOM 元素\n * @returns {null|HTMLElement} - 返回最接近的 DOM 元素\n */\nconst closest = (el, selector, ctx, includeCTX) => {\n  const context = ctx || document\n\n  if (!el) {\n    return null\n  }\n\n  do {\n    /* istanbul ignore else */\n    if (\n      (selector != null &&\n        (selector[0] === '>'\n          ? el.parentNode === context && matches(el, selector)\n          : matches(el, selector))) ||\n      (includeCTX && el === context)\n    ) {\n      return el\n    }\n\n    /* istanbul ignore else */\n    if (el === context) {\n      break\n    }\n\n    /* jshint boss:true */\n  } while ((el = getParentOrHost(el)))\n}\n\nexport default closest\n","/**\n * 存储订阅者（主题和处理器的）私有对象\n * ========================================================================\n * @type {{}}\n * @private\n */\nconst _subscribers = {}\n\nexport default _subscribers\n","import _subscribers from './_subscribers'\nimport hasOwn from '../lang/hasOwn'\n\n/**\n * 判断是否存在与给定 topic 完全匹配的订阅者信息\n * ========================================================================\n * @method _hasDirectSubscribersFor\n * @param {String} topic - （必须）订阅主题字符串\n * @returns {Boolean}\n */\nconst _hasDirectSubscribersFor = (topic) => {\n  return hasOwn(_subscribers, topic) && _subscribers[topic].length > 0\n}\n\nexport default _hasDirectSubscribersFor\n","import _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\nimport _hasSubscribers from './_hasSubscribers'\n\n/**\n * 判断是否存在包含 topic 指定的订阅者信息\n * ========================================================================\n * @method has\n * @param {String} topic - （必须）主题名称\n * @param {Boolean} [isDirect] - （可选）是否为直接的主题，默认值：true\n * @returns {Boolean}\n */\nconst has = (topic, isDirect = true) => {\n  return isDirect ? _hasDirectSubscribersFor(topic) : _hasSubscribers(topic)\n}\n\nexport default has\n","import _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\n\n/**\n * 判断是否存在包含给定 topic 相关的订阅者信息\n * ========================================================================\n * @method _hasSubscribers\n * @param {String} topic - （必须）订阅主题字符串\n * @returns {Boolean}\n */\nconst _hasSubscribers = (topic) => {\n  let found = _hasDirectSubscribersFor(topic)\n  let position = topic.lastIndexOf('.')\n\n  while (!found && position !== -1) {\n    topic = topic.substring(0, position)\n    position = topic.lastIndexOf('.')\n    found = _hasDirectSubscribersFor(topic)\n  }\n\n  return found\n}\n\nexport default _hasSubscribers\n","import isTypedArray from '../types/isTypedArray'\nimport _subscribers from './_subscribers'\nimport has from './has'\nimport _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\n\n/**\n * （异步）发布订阅主题信息\n * ========================================================================\n * 主题默认是异步发布的。确保在消费者处理主题时，主题的发起者不会被阻止。\n * ========================================================================\n * @method emit\n * @param {String} topic - （必须）主题名称\n * @param {Object} data - （必须）数据对象\n * @param {Boolean} async - (可选) 是否异步发布\n */\nconst emit = (topic, data, async = true) => {\n  const execute = (topic) => {\n    if (!_hasDirectSubscribersFor(topic)) {\n      return false\n    }\n\n    _subscribers[topic].forEach((subscriber) => {\n      // 针对 mqtt 消息服务返回的 Uint8Array 类似的 typed arrays 格式的数据\n      // 采用 toString() 方法转化为普通（JSON）字符串\n      const message = isTypedArray(data) ? data.toString() : data\n\n      subscriber.callback.call(subscriber.context || subscriber, message)\n    })\n  }\n  const deliver = () => {\n    let subscriber = topic\n    let position = topic.lastIndexOf('.')\n\n    while (position !== -1) {\n      subscriber = subscriber.substring(0, position)\n      position = subscriber.lastIndexOf('.')\n\n      execute(subscriber)\n    }\n\n    // 执行 topic 对应的处理器\n    execute(topic)\n    // 执行特殊 topic：'*'（监听全部消息的发布）\n    execute('*')\n  }\n\n  if (!has(topic)) {\n    return false\n  }\n\n  if (async) {\n    setTimeout(deliver, 10)\n  } else {\n    deliver()\n  }\n}\n\nexport default emit\n","import toString from '../lang/toString'\n/**\n * 判断检测数据是否为 Typed Arrays 类型的数据\n * ========================================================================\n * @param {*} val\n * @returns {boolean}\n */\nconst isTypedArray = (val) => {\n  const TYPES = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]',\n    '[object BigInt64Array]',\n    '[object BigUint64Array]'\n  ]\n\n  return TYPES.indexOf(toString.call(val)) > -1\n}\n\nexport default isTypedArray\n","import toString from '../lang/toString'\n\n/**\n * 检测数据是否为 Array 类型\n * ========================================================================\n * @method isArray\n * @param {*} o\n * @returns {boolean}\n */\nconst isArray = (o) => {\n  if (Array.isArray) {\n    return Array.isArray(o)\n  } else {\n    return toString.apply(o) === '[object Array]'\n  }\n}\n\nexport default isArray\n","import isString from '../types/isString'\n\n/**\n * 清楚字符串起始位置所有的空格\n * ========================================================================\n * @method trim\n * @param {string} str\n * @returns {string|Boolean}\n */\nconst trim = (str) => {\n  if (!isString(str)) {\n    return false\n  }\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nexport default trim\n","import isObject from './isObject'\r\nimport isElement from './isElement'\r\nimport isHTMLCollection from './isHTMLCollection'\r\nimport isFragment from './isFragment'\r\nimport isTextNode from './isTextNode'\r\n\r\nconst isDOM = (el) => {\r\n  return (\r\n    isObject(el) &&\r\n    (isElement(el) || isHTMLCollection(el) || isFragment(el) || isTextNode(el))\r\n  )\r\n}\r\n\r\nexport default isDOM\r\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isHTMLCollection = (el) => {\r\n  return isObject(el) && toString.apply(el) === '[object NodeList]'\r\n}\r\n\r\nexport default isHTMLCollection\r\n","import toString from '../lang/toString'\nimport isObject from './isObject'\n\nconst isFragment = (fragment) => {\n  return (\n    isObject(fragment) &&\n    toString.call(fragment) === '[object DocumentFragment]'\n  )\n}\n\nexport default isFragment\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isTextNode = (el) => {\r\n  return (\r\n    isObject(el) &&\r\n    (toString.apply(el) === '[object Text]' ||\r\n      (el.tagName && el.nodeType === 3))\r\n  )\r\n}\r\n\r\nexport default isTextNode\r\n","/**\n * 给 DOM 节点设置属性/值\n * ========================================================================\n * @method setAttribute\n * @param {HTMLElement} el - DOM 节点\n * @param {String} attr - 属性名称\n * @param {String|Number|Boolean} value - 属性值\n */\nconst setAttribute = (el, attr, value) => {\n  let tagName = el.tagName.toLowerCase()\n\n  switch (attr) {\n    case 'style':\n      el.style.cssText = value\n      break\n    case 'value':\n      if (tagName === 'input' || tagName === 'textarea') {\n        el.value = value\n      } else {\n        el.setAttribute(attr, value)\n      }\n      break\n    case 'className':\n      el.className = value\n      break\n    default:\n      el.setAttribute(attr, value)\n      break\n  }\n}\n\nexport default setAttribute\n","import trim from './utils/lang/trim'\nimport createElement from './utils/dom/createElement'\nimport setAttribute from './utils/dom/setAttribute'\n\nimport { createSvgIcon } from './utils/icons'\n\nconst _updateHeading = ($heading, i, options) => {\n  const CLS_HEADING = 'outline-heading'\n  const hasAnchor = options.hasAnchor || true\n  const isAtStart = options.isAtStart || true\n  const showCode = options.showCode || false\n  const chapterCode = options.chapterCode || ''\n  const anchorURL = options.anchorURL || ''\n  const headingId = `heading-${i}`\n  const attrs = {\n    id: headingId,\n    className: isAtStart ? `${CLS_HEADING} ${CLS_HEADING}_start` : CLS_HEADING,\n    'data-id': i\n  }\n  const keys = Object.keys(attrs)\n  const text = trim($heading.innerHTML)\n  const $fragment = document.createDocumentFragment()\n  let $anchor\n  let $icon\n\n  keys.forEach((prop) => {\n    setAttribute($heading, prop, attrs[prop])\n  })\n\n  if (showCode) {\n    $heading.innerHTML = chapterCode + ' ' + text\n  }\n\n  if (!hasAnchor) {\n    return false\n  }\n\n  $icon = createSvgIcon('hash')\n  $anchor = createElement(\n    'a',\n    {\n      id: `anchor-${i}`,\n      className: `${CLS_HEADING}__anchor anchor-${i}`,\n      href: anchorURL ? anchorURL : `#${headingId}`,\n      target: anchorURL ? '_blank' : 'self',\n      'data-id': i\n    },\n    [$icon]\n  )\n  $fragment.appendChild($anchor)\n  $heading.appendChild($fragment)\n}\n\nexport default _updateHeading\n","import isArray from './types/isArray'\n\n/**\n * 绘制 SVG Sprites 图标集\n * ========================================================================\n * @method paintSvgSprites\n * @param {Array} [symbols] - （可选）symbols 图标数组\n *                             传递 symbols - 绘制 symbols + SYMBOLS 的图标集\n *                             不传递 symbols - 仅绘制默认 SYMBOLS 图标集\n */\nexport const paintSvgSprites = (symbols = []) => {\n  const SYMBOLS = [\n    '<symbol id=\"outline-icon-up\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 261.696c0.832-0.448 1.536-1.216 2.368-1.536a38.72 38.72 0 0 1 46.08 8.256l277.824 302.272a41.92 41.92 0 0 1-1.536 58.048 39.104 39.104 0 0 1-56.448-1.6L513.728 355.904 260.736 626.048a39.104 39.104 0 0 1-56.448 1.088 41.6 41.6 0 0 1-1.088-57.984L483.84 269.696c0.512-0.512 1.344-0.768 1.92-1.408l1.088-1.344c2.368-2.496 5.312-3.648 8-5.248z\"></path></symbol>',\n    '<symbol id=\"outline-icon-down\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 762.304c0.832 0.448 1.536 1.216 2.368 1.536 15.232 7.488 33.92 4.992 46.08-8.256l277.824-302.272a41.92 41.92 0 0 0-1.536-58.048 39.104 39.104 0 0 0-56.448 1.6l-249.344 271.232-252.992-270.144a39.104 39.104 0 0 0-56.448-1.088 41.6 41.6 0 0 0-1.088 57.984l280.576 299.456c0.512 0.512 1.344 0.768 1.92 1.408l1.088 1.344c2.368 2.496 5.312 3.648 8 5.248z\"></path></symbol>',\n    '<symbol id=\"outline-icon-menu\" viewBox=\"0 0 1024 1024\"><path d=\"M320 256h640V128H320zM320 576h640V448H320zM320 896h640v-128H320zM64 256h128V128H64zM64 576h128V448H64zM64 896h128v-128H64z\"></path></symbol>',\n    '<symbol id=\"outline-icon-hash\" viewBox=\"0 0 24 24\"><path d=\"M14.216 10l-0.444 4h-3.988l0.444-4zM15.006 2.89l-0.568 5.11h-3.988l0.543-4.89c0.061-0.549-0.335-1.043-0.883-1.104s-1.043 0.335-1.104 0.884l-0.568 5.11h-4.438c-0.552 0-1 0.448-1 1s0.448 1 1 1h4.216l-0.444 4h-3.772c-0.552 0-1 0.448-1 1s0.448 1 1 1h3.549l-0.543 4.89c-0.061 0.549 0.335 1.043 0.883 1.104s1.043-0.335 1.104-0.883l0.569-5.111h3.988l-0.543 4.89c-0.061 0.549 0.335 1.043 0.883 1.104s1.043-0.335 1.104-0.883l0.568-5.111h4.438c0.552 0 1-0.448 1-1s-0.448-1-1-1h-4.216l0.444-4h3.772c0.552 0 1-0.448 1-1s-0.448-1-1-1h-3.549l0.543-4.89c0.061-0.549-0.335-1.043-0.883-1.104s-1.043 0.335-1.104 0.883z\"></path></symbol>',\n    '<symbol id=\"outline-icon-close\" viewBox=\"0 0 1024 1024\"><path d=\"M536.96 491.648L310.592 265.344a32 32 0 1 0-45.248 45.248L491.584 536.96l-226.304 226.304a32 32 0 0 0 45.312 45.248l226.24-226.304 226.304 226.304a32 32 0 0 0 45.248-45.248L582.144 536.896l226.304-226.24a32 32 0 0 0-45.248-45.248L536.896 491.584z\"></path></symbol>',\n    '<symbol id=\"outline-icon-homepage\" viewBox=\"0 0 26 28\"><path d=\"M22 15.5v7.5c0 0.547-0.453 1-1 1h-6v-6h-4v6h-6c-0.547 0-1-0.453-1-1v-7.5c0-0.031 0.016-0.063 0.016-0.094l8.984-7.406 8.984 7.406c0.016 0.031 0.016 0.063 0.016 0.094zM25.484 14.422l-0.969 1.156c-0.078 0.094-0.203 0.156-0.328 0.172h-0.047c-0.125 0-0.234-0.031-0.328-0.109l-10.813-9.016-10.813 9.016c-0.109 0.078-0.234 0.125-0.375 0.109-0.125-0.016-0.25-0.078-0.328-0.172l-0.969-1.156c-0.172-0.203-0.141-0.531 0.063-0.703l11.234-9.359c0.656-0.547 1.719-0.547 2.375 0l3.813 3.187v-3.047c0-0.281 0.219-0.5 0.5-0.5h3c0.281 0 0.5 0.219 0.5 0.5v6.375l3.422 2.844c0.203 0.172 0.234 0.5 0.063 0.703z\"></path></symbol>',\n    '<symbol id=\"outline-icon-tags\" viewBox=\"0 0 24 28\"><path d=\"M7 7c0-1.109-0.891-2-2-2s-2 0.891-2 2 0.891 2 2 2 2-0.891 2-2zM23.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578s-1.047-0.219-1.406-0.578l-11.172-11.188c-0.797-0.781-1.422-2.297-1.422-3.406v-6.5c0-1.094 0.906-2 2-2h6.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422zM29.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578-0.812 0-1.219-0.375-1.75-0.922l7.344-7.344c0.359-0.359 0.578-0.875 0.578-1.406s-0.219-1.047-0.578-1.422l-11.172-11.156c-0.797-0.797-2.312-1.422-3.422-1.422h3.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422z\"></path><path d=\"M12 2c6.625 0 12 5.375 12 12 0 5.297-3.437 9.797-8.203 11.391-0.609 0.109-0.828-0.266-0.828-0.578 0-0.391 0.016-1.687 0.016-3.297 0-1.125-0.375-1.844-0.812-2.219 2.672-0.297 5.484-1.313 5.484-5.922 0-1.313-0.469-2.375-1.234-3.219 0.125-0.313 0.531-1.531-0.125-3.187-1-0.313-3.297 1.234-3.297 1.234-0.953-0.266-1.984-0.406-3-0.406s-2.047 0.141-3 0.406c0 0-2.297-1.547-3.297-1.234-0.656 1.656-0.25 2.875-0.125 3.187-0.766 0.844-1.234 1.906-1.234 3.219 0 4.594 2.797 5.625 5.469 5.922-0.344 0.313-0.656 0.844-0.766 1.609-0.688 0.313-2.438 0.844-3.484-1-0.656-1.141-1.844-1.234-1.844-1.234-1.172-0.016-0.078 0.734-0.078 0.734 0.781 0.359 1.328 1.75 1.328 1.75 0.703 2.141 4.047 1.422 4.047 1.422 0 1 0.016 1.937 0.016 2.234 0 0.313-0.219 0.688-0.828 0.578-4.766-1.594-8.203-6.094-8.203-11.391 0-6.625 5.375-12 12-12zM4.547 19.234c0.031-0.063-0.016-0.141-0.109-0.187-0.094-0.031-0.172-0.016-0.203 0.031-0.031 0.063 0.016 0.141 0.109 0.187 0.078 0.047 0.172 0.031 0.203-0.031zM5.031 19.766c0.063-0.047 0.047-0.156-0.031-0.25-0.078-0.078-0.187-0.109-0.25-0.047-0.063 0.047-0.047 0.156 0.031 0.25 0.078 0.078 0.187 0.109 0.25 0.047zM5.5 20.469c0.078-0.063 0.078-0.187 0-0.297-0.063-0.109-0.187-0.156-0.266-0.094-0.078 0.047-0.078 0.172 0 0.281s0.203 0.156 0.266 0.109zM6.156 21.125c0.063-0.063 0.031-0.203-0.063-0.297-0.109-0.109-0.25-0.125-0.313-0.047-0.078 0.063-0.047 0.203 0.063 0.297 0.109 0.109 0.25 0.125 0.313 0.047zM7.047 21.516c0.031-0.094-0.063-0.203-0.203-0.25-0.125-0.031-0.266 0.016-0.297 0.109s0.063 0.203 0.203 0.234c0.125 0.047 0.266 0 0.297-0.094zM8.031 21.594c0-0.109-0.125-0.187-0.266-0.172-0.141 0-0.25 0.078-0.25 0.172 0 0.109 0.109 0.187 0.266 0.172 0.141 0 0.25-0.078 0.25-0.172zM8.937 21.438c-0.016-0.094-0.141-0.156-0.281-0.141-0.141 0.031-0.234 0.125-0.219 0.234 0.016 0.094 0.141 0.156 0.281 0.125s0.234-0.125 0.219-0.219z\"></path></symbol>',\n    '<symbol id=\"outline-icon-issues\" viewBox=\"0 0 26 28\"><path d=\"M25.5 15c0 0.547-0.453 1-1 1h-3.5c0 1.953-0.422 3.422-1.047 4.531l3.25 3.266c0.391 0.391 0.391 1.016 0 1.406-0.187 0.203-0.453 0.297-0.703 0.297s-0.516-0.094-0.703-0.297l-3.094-3.078s-2.047 1.875-4.703 1.875v-14h-2v14c-2.828 0-4.891-2.063-4.891-2.063l-2.859 3.234c-0.203 0.219-0.469 0.328-0.75 0.328-0.234 0-0.469-0.078-0.672-0.25-0.406-0.375-0.438-1-0.078-1.422l3.156-3.547c-0.547-1.078-0.906-2.469-0.906-4.281h-3.5c-0.547 0-1-0.453-1-1s0.453-1 1-1h3.5v-4.594l-2.703-2.703c-0.391-0.391-0.391-1.016 0-1.406s1.016-0.391 1.406 0l2.703 2.703h13.188l2.703-2.703c0.391-0.391 1.016-0.391 1.406 0s0.391 1.016 0 1.406l-2.703 2.703v4.594h3.5c0.547 0 1 0.453 1 1zM18 6h-10c0-2.766 2.234-5 5-5s5 2.234 5 5z\"></path></symbol>'\n  ]\n  const sprites =\n    isArray(symbols) && symbols.length > 0 ? SYMBOLS.concat(symbols) : SYMBOLS\n  const $body = document.body\n  let $icons = document.querySelector('#svg-sprites')\n\n  if ($icons) {\n    $icons.innerHTML = sprites.join('')\n  } else {\n    $icons = document.createElement('div')\n    $icons.innerHTML =\n      `<svg id=\"svg-sprites\" aria-hidden=\"true\" style=\"position:absolute;display:none;width:0;height:0;overflow:hidden;\">` +\n      `${sprites.join('')}` +\n      `</svg>`\n    $body.insertBefore($icons.firstChild, $body.firstChild)\n  }\n}\n\n/**\n * 创建 SVG 图标 DOM 元素\n * ========================================================================\n * @method createSvgIcon\n * @param {String} name\n * @param {Number|String|Array} [size]\n * @param {String} [color]\n * @param {String} [iconSet]\n * @returns {HTMLElement}\n */\nexport const createSvgIcon = (\n  name,\n  size = 0,\n  color = '',\n  iconSet = 'outline'\n) => {\n  const binds = iconSet\n    ? `xlink:href=\"#${iconSet}-icon-${name}\"`\n    : `xlink:href=\"#icon-${name}\"`\n  const width = isArray(size) ? size[0] : size\n  const height = isArray(size) ? size[1] : size\n  const defaultRules = size ? `width:${width}px;height:${height}px;` : ''\n  const cssRules = color ? defaultRules + `color:${color}` : defaultRules\n  const svg =\n    `<svg aria-hidden=\"true\" class=\"outline-icon__svg\" style=\"${cssRules}\">` +\n    `<use ${binds}></use>` +\n    `</svg>`\n  const $icon = document.createElement('i')\n\n  $icon.className = 'outline-icon'\n  $icon.innerHTML = svg\n\n  return $icon\n}\n","import hasOwn from '../lang/hasOwn'\nimport isObject from '../types/isObject'\nimport isString from '../types/isString'\nimport isArray from '../types/isArray'\nimport isDOM from '../types/isDOM'\nimport setAttribute from './setAttribute'\n\n/**\n * 创建 DOM 节点，并添加属性和子节点\n * ========================================================================\n * @method createElement\n * @param {String} tagName - 标签名称\n * @param {Object|Array} attrs - 属性对象或者子节点\n * @param {Array} [children] - 子节点数组\n * @returns {HTMLElement}\n */\nconst createElement = (tagName, attrs, children) => {\n  const $fragment = document.createDocumentFragment()\n  const $el = document.createElement(tagName)\n  const isValidChild = (child) => {\n    return isDOM(child) || isString(child)\n  }\n  const append = (child) => {\n    let $child\n\n    if (!isValidChild(child)) {\n      return false\n    }\n\n    if (isDOM(child)) {\n      $child = child\n    } else if (isString(child)) {\n      $child = document.createTextNode(child)\n    }\n\n    $fragment.appendChild($child)\n  }\n\n  if (isObject(attrs)) {\n    Object.keys(attrs).forEach((attr) => {\n      if (hasOwn(attrs, attr)) {\n        setAttribute($el, attr, attrs[attr])\n      }\n    })\n  } else if (isArray(attrs) && attrs.every((attr) => isValidChild(attr))) {\n    attrs.forEach((child) => {\n      append(child)\n    })\n  }\n\n  if (isArray(children)) {\n    children.forEach((child) => {\n      append(child)\n    })\n  } else {\n    append(children)\n  }\n\n  $el.appendChild($fragment)\n\n  return $el\n}\n\nexport default createElement\n","import trim from '../lang/trim'\nimport hasClass from './hasClass'\n\n/**\n * 移除 DOM 节点的 className 样式\n * ========================================================================\n * @method removeClass\n * @param {HTMLElement|Object} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst removeClass = (el, className) => {\n  let allClass = el.className\n\n  if (!allClass || !hasClass(el, className)) {\n    return false\n  }\n\n  allClass = trim(allClass.replace(className, ''))\n\n  el.className = allClass\n}\n\nexport default removeClass\n","/**\n * 检测 DOM 节点是否包含名为 className 的样式\n * ========================================================================\n * @method hasClass\n * @param {HTMLElement|Object} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst hasClass = (el, className) => {\n  const pattern = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)')\n  const allClass = el.className\n  const classList = el.classList\n\n  if (!allClass) {\n    return false\n  }\n\n  if (classList?.contains) {\n    return el.classList.contains(className)\n  }\n\n  return !!allClass.match(pattern)\n}\n\nexport default hasClass\n","import removeClass from './utils/dom/removeClass'\nimport isEmpty from './utils/types/isEmpty'\nimport trim from './utils/lang/trim'\n\nconst _resetHeading = ($heading, hasAnchor = true, isAtStart = true) => {\n  const CLS_HEADING = 'outline-heading'\n  const text = $heading.innerHTML\n  let $anchor\n\n  $heading.innerHTML = text.replace(/^\\d+(?:(\\.?\\d*)*\\s?)?/gi, '')\n  $heading.removeAttribute('id')\n  $heading.removeAttribute('data-id')\n\n  removeClass($heading, CLS_HEADING)\n\n  if (!hasAnchor) {\n    return false\n  }\n\n  $anchor = $heading.querySelector(`.${CLS_HEADING}__anchor`)\n\n  if (isAtStart) {\n    removeClass($heading, `${CLS_HEADING}_start`)\n  }\n\n  if (isEmpty(trim($heading.className))) {\n    $heading.removeAttribute('class')\n  }\n\n  $heading.removeChild($anchor)\n}\n\nexport default _resetHeading\n","import isString from './isString'\n/**\n * 检测数据是否为空字符串\n * ========================================================================\n * @method isEmpty\n * @param {String} str\n * @returns {boolean}\n */\nconst isEmpty = (str) => {\n  return isString(str) && str === ''\n}\n\nexport default isEmpty\n","/**\n * 给对象的属性通过 prop 属性分组\n * ========================================================================\n * @method groupBy\n * @param {Array} list\n * @param {String} prop\n * @return {Array}\n */\nconst groupBy = (list, prop) => {\n  const clone = [...list]\n  const groups = {}\n  const cb = (o) => {\n    return [o[prop]]\n  }\n\n  clone.forEach((o) => {\n    const group = JSON.stringify(cb(o))\n\n    groups[group] = groups[group] || []\n    groups[group].push(o)\n  })\n\n  return Object.keys(groups).map((group) => {\n    return groups[group]\n  })\n}\n\nexport default groupBy\n","import trim from './utils/lang/trim'\nimport stripTags from './utils/lang/stripTags'\n\nimport _getChaptersWithCode from './_getChaptersWithCode'\nimport _getChapterParentIdByDiffer from './_getChapterParentIdByDiffer'\n\nconst getChapters = (headings) => {\n  const chapters = []\n  let previous = 1\n  let level = 0\n\n  headings.forEach((heading, i) => {\n    const headingLevel = heading.tagName.replace(/h/i, '')\n    let current = parseInt(headingLevel, 10)\n    let pid = -1\n\n    // 当前标题的（标题标签）序号 > 前一个标题的序号：两个相连的标题是父标题 -> 子标题关系；\n    // h2 （前一个标题）\n    // h3 （当前标题）\n    if (current > previous) {\n      level += 1\n\n      // 第一层级的 pid 是 -1\n      if (level === 1) {\n        pid = -1\n      } else {\n        pid = i - 1\n      }\n    }\n    // 当前标题的（标题标签）序号 = 前一个标题的序号\n    // h2 （前一个标题）\n    // h2 （当前标题）\n    // 当前标题的（标题标签）序号 < 前一个标题的序号，并且当前标题序号 > 当前的级别\n    // h2\n    // h4 （前一个标题）\n    // h3 （当前标题：这种情况我们还是任务 h3 是 h2 的下一级章节）\n    else if (current === previous || (current < previous && current > level)) {\n      // H1 的层级肯定是 1\n      if (current === 1) {\n        level = 1\n\n        pid = -1\n      } else {\n        pid = chapters[i - 1].pid\n      }\n    } else if (current <= level) {\n      // H1 的层级肯定是 1\n      if (current === 1) {\n        level = 1\n      } else {\n        level = level - (previous - current)\n\n        if (level <= 1) {\n          level = 1\n        }\n      }\n\n      // 第一级的标题\n      if (level === 1) {\n        pid = -1\n      } else {\n        // 虽然看上去差点，不过能工作啊\n        pid = _getChapterParentIdByDiffer(chapters, previous - current, i)\n      }\n    }\n\n    previous = current\n\n    chapters.push({\n      id: i,\n      pid: pid,\n      level: level,\n      rel: `heading-${i}`,\n      text: stripTags(trim(heading.innerHTML))\n    })\n  })\n\n  return _getChaptersWithCode(chapters)\n}\n\nexport default getChapters\n","import isString from '../types/isString'\n\n/**\n * 过滤所有 HTML 标签\n * ========================================================================\n * @method stripTags\n * @param {string} str\n * @returns {string}\n */\nconst stripTags = (str) => {\n  if (!isString(str)) {\n    return ''\n  }\n  return str.replace(/<\\/?[^>]+(>|$)/g, '')\n}\n\nexport default stripTags\n","const _getChapterParentIdByDiffer = (chapters, differ, index) => {\n  let pid\n\n  // 最大只有 5 级的差距\n  switch (differ) {\n    case 2:\n      pid = chapters[chapters[chapters[index - 1].pid].pid].pid\n      break\n    case 3:\n      pid = chapters[chapters[chapters[chapters[index - 1].pid].pid].pid].pid\n      break\n    case 4:\n      pid =\n        chapters[\n          chapters[chapters[chapters[chapters[index - 1].pid].pid].pid].pid\n        ].pid\n      break\n    case 5:\n      pid =\n        chapters[\n          chapters[\n            chapters[chapters[chapters[chapters[index - 1].pid].pid].pid].pid\n          ].pid\n        ].pid\n      break\n    default:\n      pid = chapters[chapters[index - 1].pid].pid\n      break\n  }\n\n  return pid\n}\n\nexport default _getChapterParentIdByDiffer\n","import groupBy from './utils/lang/groupBy'\n\nconst _getChaptersWithCode = (chapters) => {\n  const groups = groupBy(chapters, 'pid')\n  const clone = [...chapters]\n\n  groups.forEach((group) => {\n    group.forEach((chapter, i) => {\n      chapter.index = i + 1\n    })\n  })\n\n  groups.forEach((group) => {\n    group.forEach((paragraph) => {\n      clone.forEach((chapter) => {\n        if (chapter.pid === -1) {\n          chapter.code = String(chapter.index)\n        } else {\n          if (chapter.pid === paragraph.id) {\n            chapter.code = paragraph.code + '.' + chapter.index\n          }\n        }\n      })\n    })\n  })\n\n  return clone\n}\n\nexport default _getChaptersWithCode\n","import Base from './base'\n\n// 在文章的标题生成 anchor 链接\nimport isString from './utils/types/isString'\nimport isFunction from './utils/types/isFunction'\nimport isElement from './utils/types/isElement'\nimport later from './utils/lang/later'\nimport scrollTo from './utils/dom/scrollTo'\nimport _getScrollElement from './utils/dom/_getScrollElement'\nimport on from './utils/event/on'\nimport off from './utils/event/off'\nimport stop from './utils/event/stop'\nimport publish from './utils/observer/emit'\nimport { paintSvgSprites } from './utils/icons'\n\nimport _updateHeading from './_updateHeading'\nimport _resetHeading from './_resetHeading'\nimport getChapters from './getChapters'\n\nclass Anchors extends Base {\n  constructor(options) {\n    super()\n\n    this.attrs = Anchors.DEFAULTS\n    this.$articleElement = null\n    this.$scrollElement = null\n    this.$headings = []\n\n    this.chapters = []\n\n    if (options) {\n      this.initialize(options)\n    }\n  }\n\n  initialize(options) {\n    let created\n    let scrollElement\n    let selector\n    let $articleElement\n    let articleElement\n\n    this.attr(options)\n    articleElement = this.attr('articleElement')\n    scrollElement = this.attr('scrollElement')\n    selector = this.attr('selector')\n    created = this.attr('created')\n\n    if (isString(articleElement)) {\n      $articleElement = document.querySelector(articleElement)\n    } else if (isElement(articleElement)) {\n      $articleElement = articleElement\n    }\n\n    if (!$articleElement) {\n      return this\n    }\n\n    this.$articleElement = $articleElement\n    this.$scrollElement = _getScrollElement(scrollElement)\n    this.$headings = [...$articleElement.querySelectorAll(selector)]\n\n    if (this.$headings.length < 1) {\n      return this\n    }\n\n    this.chapters = getChapters(this.$headings)\n\n    if (isFunction(created)) {\n      created.call(this)\n    }\n\n    this.render().addListeners()\n\n    return this\n  }\n\n  getChapters() {\n    return this.chapters\n  }\n\n  count() {\n    return this.chapters.length\n  }\n\n  render() {\n    const mounted = this.attr('mounted')\n    const hasAnchor = this.attr('hasAnchor')\n    const isAtStart = this.attr('isAtStart')\n    const showCode = this.attr('showCode')\n    const anchorURL = this.attr('anchorURL')\n    const $headings = this.$headings\n    const chapters = this.getChapters()\n\n    paintSvgSprites()\n\n    $headings.forEach(($heading, i) => {\n      const chapterCode = chapters[i].code\n      _updateHeading($heading, i, {\n        hasAnchor,\n        isAtStart,\n        showCode,\n        chapterCode,\n        anchorURL\n      })\n    })\n\n    if (isFunction(mounted)) {\n      mounted.call(this)\n    }\n\n    return this\n  }\n\n  scrollTo(top, after) {\n    const el = this.$scrollElement\n\n    scrollTo(el, top, after, 100)\n\n    return this\n  }\n\n  destroy() {\n    const hasAnchor = this.attr('hasAnchor')\n    const isAtStart = this.attr('isAtStart')\n    const beforeDestroy = this.attr('beforeDestroy')\n    const afterDestroy = this.attr('afterDestroy')\n    const $headings = this.$headings\n\n    if (isFunction(beforeDestroy)) {\n      beforeDestroy.call(this)\n    }\n\n    this.removeListeners()\n    $headings.forEach(($heading) => {\n      _resetHeading($heading, hasAnchor, isAtStart)\n    })\n\n    this.attr(Anchors.DEFAULTS)\n    this.$articleElement = null\n    this.$scrollElement = null\n    this.$headings = []\n    this.chapters = []\n\n    if (isFunction(afterDestroy)) {\n      afterDestroy.call(this)\n    }\n\n    return this\n  }\n\n  onAnchorTrigger(evt) {\n    const anchorURL = this.attr('anchorURL')\n    const afterScroll = this.attr('afterScroll')\n    const $anchor = evt.delegateTarget\n    const $heading = $anchor.parentNode\n    const top = $heading.offsetTop\n    const $scrollElement = this.$scrollElement\n    const min = 0\n    const max = $scrollElement.scrollHeight - $scrollElement.clientHeight\n    const after = () => {\n      if (isFunction(afterScroll)) {\n        afterScroll.call(this)\n      }\n\n      later(() => {\n        publish('update:toolbar', {\n          top,\n          min,\n          max\n        })\n      })\n    }\n\n    this.scrollTo(top, after)\n\n    if (!anchorURL) {\n      stop(evt)\n    }\n\n    return this\n  }\n\n  addListeners() {\n    const $articleElement = this.$articleElement\n\n    on(\n      $articleElement,\n      '.outline-heading__anchor',\n      'click',\n      this.onAnchorTrigger,\n      this,\n      true\n    )\n\n    return this\n  }\n\n  removeListeners() {\n    const $articleElement = this.$articleElement\n\n    off($articleElement, 'click', this.onAnchorTrigger)\n\n    return this\n  }\n}\n\nAnchors.DEFAULTS = {\n  scrollElement: 'html,body',\n  articleElement: '#article',\n  selector: 'h1,h2,h3,h4,h5,h6',\n  anchorURL: '',\n  hasAnchor: true,\n  isAtStart: true,\n  showCode: false,\n  created: null,\n  mounted: null,\n  afterScroll: null,\n  beforeDestroy: null,\n  afterDestroy: null\n}\n\nexport default Anchors\n","/**\n * 检测数据是否为 Number 类型\n * ========================================================================\n * @method isNumber\n * @param {*} o\n * @returns {boolean}\n */\nconst isNumber = (o) => {\n  return typeof o === 'number'\n}\n\nexport default isNumber\n","import isFunction from '../types/isFunction'\n\n/**\n * later - 延迟执行方法\n * ========================================================================\n * @method later\n * @param {Function} fn\n * @param {Number} [delay]\n * @returns {number|boolean}\n */\nconst later = (fn, delay = 300) => {\n  if (!isFunction(fn)) {\n    return false\n  }\n\n  return setTimeout(() => {\n    fn()\n  }, delay)\n}\n\nexport default later\n","/**\n * 停止事件（阻止默认行为和阻止事件的捕获或冒泡）\n * ========================================================================\n * @method stop\n * @param {Event} evt - 事件对象\n *\n * @example\n * <div id=\"nav\" class=\"nav\">\n *   <a id=\"service\" class=\"anchor\" href=\"https://www.yaohaixiao.com/serivce\">Service</a>\n *   <a id=\"help\" class=\"anchor\" href=\"https://www.yaohaixiao.com/help\">Help</a>\n * </div>\n *\n * const $nav = document.querySelector('#nav')\n * const $service = document.querySelector('.anchor')\n *\n * on($nav, 'click', function(evt) {\n *   console.log('你点击了导航栏')\n * })\n *\n * on($anchor, 'click', function(evt) {\n *   console.log('tagName', this.tagName)\n *\n *   // 工作台输出：'a'\n *   // 不会触发事件冒泡，输出：'你点击了导航栏'\n *   // 也不会切换到 href 属性的页面，阻止了点击链接的默认行为\n *   stopEvent(evt)\n * })\n */\nconst stop = function (evt) {\n  evt.stopPropagation()\n  evt.preventDefault()\n}\n\nexport default stop\n"],"names":["isString","str","hasOwn","obj","prop","hasOwnProperty","Object","prototype","call","toString","isFunction","val","apply","isObject","o","Base","constructor","options","this","attrs","initialize","attr","render","addListeners","value","origin","source","keys","forEach","arguments","length","destroy","removeListeners","reload","isElement","nodeName","tagName","nodeType","easeInQuad","x","_getScrollElement","scrollElement","$rootElements","$scrollElement","document","querySelector","querySelectorAll","scrollTop","timer","matches","el","selector","sel","replace","msMatchesSelector","getParentOrHost","host","parentNode","CAPTURE_EVENTS","_off","type","fn","capture","indexOf","_delegateListener","listeners","_listeners","index","listener","i","handler","splice","_delete","removeEventListener","purgeElement","recurse","$element","$children","childNodes","filter","getListeners","$child","off","on","data","context","once","evt","target","getTarget","delegateTarget","ctx","includeCTX","closest","overrideContext","push","addEventListener","_subscribers","_hasDirectSubscribersFor","topic","has","isDirect","found","position","lastIndexOf","substring","_hasSubscribers","emit","async","execute","subscriber","message","callback","deliver","setTimeout","isArray","Array","trim","isDOM","isHTMLCollection","fragment","isTextNode","setAttribute","toLowerCase","style","cssText","className","_updateHeading","$heading","CLS_HEADING","hasAnchor","isAtStart","showCode","chapterCode","anchorURL","headingId","id","text","innerHTML","$fragment","createDocumentFragment","$anchor","$icon","name","size","color","iconSet","binds","width","height","defaultRules","svg","createElement","createSvgIcon","children","$el","isValidChild","child","append","createTextNode","appendChild","every","href","removeClass","allClass","pattern","RegExp","classList","contains","match","hasClass","_resetHeading","removeAttribute","removeChild","groupBy","list","clone","groups","group","JSON","stringify","cb","map","getChapters","headings","chapters","previous","level","heading","headingLevel","current","parseInt","pid","differ","_getChapterParentIdByDiffer","rel","chapter","paragraph","code","String","_getChaptersWithCode","Anchors","super","DEFAULTS","$articleElement","$headings","created","articleElement","count","mounted","symbols","SYMBOLS","sprites","concat","$body","body","$icons","join","insertBefore","firstChild","paintSvgSprites","scrollTo","top","after","afterStop","speed","step","distance","MAX_HEIGHT","scrollHeight","MAX_TOP","stop","clearTimeout","play","beforeDestroy","afterDestroy","onAnchorTrigger","afterScroll","offsetTop","max","clientHeight","delay","later","publish","min","stopPropagation","preventDefault"],"mappings":"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"}