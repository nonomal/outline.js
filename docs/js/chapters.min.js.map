{"version":3,"file":"chapters.min.js","sources":["../../utils/types/isString.js","../../utils/lang/hasOwn.js","../../utils/lang/toString.js","../../utils/types/isFunction.js","../../utils/types/isObject.js","../../utils/observer/_subscribers.js","../../utils/observer/_hasDirectSubscribersFor.js","../../utils/observer/has.js","../../utils/observer/_hasSubscribers.js","../../utils/observer/emit.js","../../utils/types/isTypedArray.js","../../utils/lang/guid.js","../../utils/observer/_removeSubscriber.js","../../utils/observer/off.js","../../utils/observer/_removeSubscriberByToken.js","../../base.js","../../utils/lang/extend.js","../../utils/observer/on.js","../../utils/types/isElement.js","../../utils/lang/later.js","../../utils/event/enum.js","../../utils/event/_off.js","../../utils/event/_delete.js","../../utils/event/purgeElement.js","../../utils/event/getListeners.js","../../utils/event/off.js","../../utils/event/at.js","../../utils/dom/matches.js","../../utils/dom/getParentOrHost.js","../../utils/event/on.js","../../utils/event/getTarget.js","../../utils/dom/resolveTextNode.js","../../utils/dom/closest.js","../../utils/types/isArray.js","../../utils/types/isDOM.js","../../utils/types/isHTMLCollection.js","../../utils/types/isFragment.js","../../utils/types/isTextNode.js","../../utils/dom/createElement.js","../../utils/dom/setAttributes.js","../../utils/dom/setAttribute.js","../../utils/lang/easeInQuad.js","../../utils/dom/_getScrollElement.js","../../utils/dom/hasClass.js","../../utils/dom/addClass.js","../../utils/dom/removeClass.js","../../utils/lang/trim.js","../../utils/dom/offsetTop.js","../../utils/dom/getStyle.js","../../utils/dom/setProperty.js","../../utils/lang/cloneDeep.js","../../utils/lang/timeSlice.js","../../chapters.js","../../_paintChapters.js","../../utils/dom/scrollTo.js","../../utils/dom/intersection.js","../../utils/event/stop.js"],"sourcesContent":["/**\n * 检测数据是否为 String 类型\n * ========================================================================\n * @method isArray\n * @param {*} str\n * @returns {boolean}\n */\nconst isString = (str) => {\n  return typeof str === 'string'\n}\n\nexport default isString\n","/**\n * 检测对象自身属性中是否具有指定的属性。\n * ========================================================================\n * @method hasOwn\n * @param {Object} obj - （必须）检测的目标对象\n * @param {String} prop - （必须）属性名\n * @returns {Boolean}\n */\nconst hasOwn = (obj, prop) => {\n  const hasOwnProperty = Object.prototype.hasOwnProperty\n  return obj && hasOwnProperty.call(obj, prop)\n}\n\nexport default hasOwn\n","/**\n * Object 对象原型上的 toString 方法\n * ========================================================================\n * @method toString\n * @param {*} val\n * @returns {string}\n */\nconst toString = (val) => {\n  return Object.prototype.toString.apply(val)\n}\n\nexport default toString\n","import toString from '../lang/toString'\n\n/**\n * 检测测试数据是否为 Function 类型\n * ========================================================================\n * @method isFunction\n * @param {*} val - （必须）待检测的数据\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\n */\nconst isFunction = (val) => {\n  return typeof val === 'function' || toString(val) === '[object Function]'\n}\n\nexport default isFunction\n","import toString from '../lang/toString'\nimport isFunction from './isFunction'\n\n/**\n * 检测数据是否为 Object 类型\n * ========================================================================\n * @method isObject\n * @param {*} o\n * @returns {boolean}\n */\nconst isObject = (o) => {\n  return (\n    (toString(o) === '[object Object]' ||\n      typeof o === 'object' ||\n      isFunction(o)) &&\n    o !== null\n  )\n}\n\nexport default isObject\n","/**\n * 存储订阅者（主题和处理器的）私有对象\n * ========================================================================\n * @type {{}}\n * @private\n */\nconst _subscribers = {}\n\nexport default _subscribers\n","import _subscribers from './_subscribers'\nimport hasOwn from '../lang/hasOwn'\n\n/**\n * 判断是否存在与给定 topic 完全匹配的订阅者信息\n * ========================================================================\n * @method _hasDirectSubscribersFor\n * @param {String} topic - （必须）订阅主题字符串\n * @returns {Boolean}\n */\nconst _hasDirectSubscribersFor = (topic) => {\n  return hasOwn(_subscribers, topic) && _subscribers[topic].length > 0\n}\n\nexport default _hasDirectSubscribersFor\n","import _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\nimport _hasSubscribers from './_hasSubscribers'\n\n/**\n * 判断是否存在包含 topic 指定的订阅者信息\n * ========================================================================\n * @method has\n * @param {String} topic - （必须）主题名称\n * @param {Boolean} [isDirect] - （可选）是否为直接的主题，默认值：true\n * @returns {Boolean}\n */\nconst has = (topic, isDirect = true) => {\n  return isDirect ? _hasDirectSubscribersFor(topic) : _hasSubscribers(topic)\n}\n\nexport default has\n","import _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\n\n/**\n * 判断是否存在包含给定 topic 相关的订阅者信息\n * ========================================================================\n * @method _hasSubscribers\n * @param {String} topic - （必须）订阅主题字符串\n * @returns {Boolean}\n */\nconst _hasSubscribers = (topic) => {\n  let found = _hasDirectSubscribersFor(topic)\n  let position = topic.lastIndexOf('.')\n\n  while (!found && position !== -1) {\n    topic = topic.substring(0, position)\n    position = topic.lastIndexOf('.')\n    found = _hasDirectSubscribersFor(topic)\n  }\n\n  return found\n}\n\nexport default _hasSubscribers\n","import isTypedArray from '../types/isTypedArray'\nimport _subscribers from './_subscribers'\nimport has from './has'\nimport _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\n\n/**\n * （异步）发布订阅主题信息\n * ========================================================================\n * 主题默认是异步发布的。确保在消费者处理主题时，主题的发起者不会被阻止。\n * ========================================================================\n * @method emit\n * @param {String} topic - （必须）主题名称\n * @param {Object} [data] - （可选）数据对象\n * @param {Boolean} [async] - (可选) 是否异步发布\n */\nconst emit = (topic, data, async = true) => {\n  const execute = (topic) => {\n    if (!_hasDirectSubscribersFor(topic)) {\n      return false\n    }\n\n    _subscribers[topic].forEach((subscriber) => {\n      // 针对 mqtt 消息服务返回的 Uint8Array 类似的 typed arrays 格式的数据\n      // 采用 toString() 方法转化为普通（JSON）字符串\n      const message = isTypedArray(data) ? data.toString() : data\n\n      subscriber.callback.call(subscriber.context || subscriber, message)\n    })\n  }\n  const deliver = () => {\n    let subscriber = topic\n    let position = topic.lastIndexOf('.')\n\n    while (position !== -1) {\n      subscriber = subscriber.substring(0, position)\n      position = subscriber.lastIndexOf('.')\n\n      execute(subscriber)\n    }\n\n    // 执行 topic 对应的处理器\n    execute(topic)\n    // 执行特殊 topic：'*'（监听全部消息的发布）\n    execute('*')\n  }\n\n  if (!has(topic)) {\n    return false\n  }\n\n  if (async) {\n    setTimeout(deliver, 10)\n  } else {\n    deliver()\n  }\n}\n\nexport default emit\n","import toString from '../lang/toString'\n/**\n * 判断检测数据是否为 Typed Arrays 类型的数据\n * ========================================================================\n * @param {*} val\n * @returns {boolean}\n */\nconst isTypedArray = (val) => {\n  const TYPES = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]',\n    '[object BigInt64Array]',\n    '[object BigUint64Array]'\n  ]\n\n  return TYPES.indexOf(toString(val)) > -1\n}\n\nexport default isTypedArray\n","/**\n * 生成唯一 id 字符串的函数\n * ========================================================================\n * @method guid\n * @param {String} [prefix] - 生成 id 的前缀字符串\n * @return {String} 返回一个表示唯一 id 的字符串\n */\nconst guid = (() => {\n  let uuid = 0\n\n  return (prefix) => {\n    uuid += 1\n\n    return prefix ? prefix + '-' + uuid : 'guid-' + uuid\n  }\n})()\n\nexport default guid\n","import _subscribers from './_subscribers'\nimport hasOwn from '../lang/hasOwn'\n\n/**\n * 删除与给定 topic 相同的订阅者信息\n * ========================================================================\n * @method _removeSubscriber\n * @param {String} topic - （必须）订阅主题字符串\n * @returns {Boolean}\n */\nconst _removeSubscriber = (topic) => {\n  if (!hasOwn(_subscribers, topic)) {\n    return false\n  }\n\n  delete _subscribers[topic]\n}\n\nexport default _removeSubscriber\n","import has from './has'\nimport _removeSubscriber from './_removeSubscriber'\nimport _removeSubscriberByToken from './_removeSubscriberByToken'\n\n/**\n * 取消订阅主题\n * ========================================================================\n * @method off\n * @param {String} topic - （必须）订阅的主题\n * @param {Function|String} [token] - （可选）订阅主题的处理器函数或者唯一 Id 值\n */\nconst off = (topic, token) => {\n  if (!has(topic)) {\n    return false\n  }\n\n  if (token) {\n    _removeSubscriberByToken(token)\n  } else {\n    _removeSubscriber(topic)\n  }\n}\n\nexport default off\n","import _subscribers from './_subscribers'\nimport _removeSubscriber from './_removeSubscriber'\n\n/**\n * 通过订阅者 token 值删除订阅者信息\n * ========================================================================\n * @method _removeSubscriberByToken\n * @param {String} token - 订阅者 token 字符串\n * @returns {boolean}\n * @private\n */\nconst _removeSubscriberByToken = (token) => {\n  const keys = Object.keys(_subscribers)\n  let index = -1\n\n  if (!token || keys.length < 1) {\n    return false\n  }\n\n  keys.forEach((subject) => {\n    const subscriber = _subscribers[subject]\n    let topic\n\n    subscriber.forEach((execution, j) => {\n      if (execution.callback === token || execution.token === token) {\n        topic = execution.topic\n        subscriber.splice(index, j)\n      }\n    })\n\n    /* istanbul ignore else */\n    if (subscriber.length < 1) {\n      _removeSubscriber(topic)\n    }\n  })\n}\n\nexport default _removeSubscriberByToken\n","import isString from './utils/types/isString'\r\nimport hasOwn from './utils/lang/hasOwn'\r\nimport isObject from './utils/types/isObject'\r\nimport extend from './utils/lang/extend'\r\nimport publish from './utils/observer/emit'\r\nimport subscribe from './utils/observer/on'\r\nimport unsubscribe from './utils/observer/off'\r\n\r\nclass Base {\r\n  constructor(options) {\r\n    this.attrs = {}\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    this.attr(options).render().addListeners()\r\n    return this\r\n  }\r\n\r\n  attr(prop, value) {\r\n    const attrs = this.attrs\r\n\r\n    if (isString(prop)) {\r\n      // 只能扩展 attrs 中已有的属性\r\n      if (value && hasOwn(attrs, prop)) {\r\n        // 更新单个配置信息\r\n        attrs[prop] = value\r\n        return this\r\n      }\r\n\r\n      // 只传递 prop 参数，则返回对应的属性值\r\n      return attrs[prop]\r\n    } else if (isObject(prop)) {\r\n      // 批量更新配置信息\r\n      extend(attrs, prop)\r\n\r\n      return this\r\n    } else if (arguments.length === 0) {\r\n      // 不传递参数，直接返回整个\r\n      return attrs\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  render() {\r\n    return this\r\n  }\r\n\r\n  refresh() {\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    this.removeListeners()\r\n    return this\r\n  }\r\n\r\n  reload(options) {\r\n    this.destroy().initialize(options)\r\n    return this\r\n  }\r\n\r\n  $emit(event, data) {\r\n    publish(event, data)\r\n    return this\r\n  }\r\n\r\n  $on(event, callback) {\r\n    subscribe(event, callback, this)\r\n    return this\r\n  }\r\n\r\n  $off(event, callback) {\r\n    unsubscribe(event, callback)\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    return this\r\n  }\r\n}\r\n\r\nexport default Base\r\n","import hasOwn from './hasOwn'\n\n/**\n * 扩展对象\n * ========================================================================\n * @method extend\n * @param {Object} origin\n * @param {Object} source\n */\nconst extend = (origin, source) => {\n  const keys = Object.keys(source)\n\n  keys.forEach((prop) => {\n    if (hasOwn(source, prop)) {\n      origin[prop] = source[prop]\n    }\n  })\n}\n\nexport default extend\n","import _subscribers from './_subscribers'\nimport isFunction from '../types/isFunction'\nimport guid from '../lang/guid'\n\n/**\n * 订阅主题，并给出处理器函数\n * ========================================================================\n * @method on\n * @param {String} topic - （必须）主题名称\n * @param {Function} handler - （必须）主题的处理器函数\n * @param {Object} [context] - （可选）指定 this 执行上下文\n * @return {String} - 唯一的 token 字符串，例如：'guid-1'。\n */\nconst on = (topic, handler, context = null) => {\n  const token = guid()\n  let subject = typeof topic === 'symbol' ? topic.toString() : topic\n\n  if (!isFunction(handler)) {\n    return ''\n  }\n\n  /* istanbul ignore else */\n  if (!_subscribers[subject]) {\n    _subscribers[subject] = []\n  }\n\n  _subscribers[subject].push({\n    topic: subject,\n    callback: handler,\n    context,\n    token\n  })\n\n  return token\n}\n\nexport default on\n","import isObject from './isObject'\n\n/**\n * 检测数据是否为 HTMLElement DOM 节点\n * ========================================================================\n * @method isElement\n * @param {*} o\n * @returns {boolean}\n */\nconst isElement = (o) => {\n  return !!(isObject(o) && o.nodeName && o.tagName && o.nodeType === 1)\n}\n\nexport default isElement\n","import isFunction from '../types/isFunction'\n\n/**\n * later - 延迟执行方法\n * ========================================================================\n * @method later\n * @param {Function} fn\n * @param {Number} [delay]\n * @returns {number|boolean}\n */\nconst later = (fn, delay = 300) => {\n  if (!isFunction(fn)) {\n    return false\n  }\n\n  return setTimeout(() => {\n    fn()\n  }, delay)\n}\n\nexport default later\n","export const CAPTURE_EVENTS = [\n  'focusout',\n  'blur',\n  'focusin',\n  'focus',\n  'load',\n  'unload',\n  'mouseenter',\n  'mouseleave'\n]\n","import { CAPTURE_EVENTS } from './enum'\nimport _delete from './_delete'\n\n/**\n * （私有方法）取消 type 类型的代理事件绑定\n * ========================================================================\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\n * ========================================================================\n * @method _off\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\n * @param {String} type - （必须）事件类型\n * @param {Function} fn - （必须）事件处理器回调函数\n * @private\n */\nconst _off = (el, type, fn) => {\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\n\n  /* istanbul ignore else */\n  if (fn._delegateListener) {\n    fn = fn._delegateListener\n    delete fn._delegateListener\n  }\n\n  // 移除缓存的 _listeners 数据\n  _delete(el, type, fn)\n\n  el.removeEventListener(type, fn, capture)\n}\n\nexport default _off\n","/**\n * 删除 DOM 元素缓存的 _listeners 数据\n * ========================================================================\n * @method _delete\n * @param {HTMLElement} el - 要删除 listener 的 DOM 元素\n * @param {String} type - 事件类型（名称）\n * @param {Function} [fn] - 事件处理器回调函数\n */\nconst _delete = function (el, type, fn) {\n  const listeners = el._listeners\n  let index = -1\n\n  if (listeners.length < 1) {\n    return false\n  }\n\n  // 移除缓存的 _listeners 数据\n  listeners.forEach((listener, i) => {\n    const handler = listener.fn\n\n    if (type === listener.type) {\n      index = i\n\n      if (handler === fn) {\n        index = i\n      }\n    }\n  })\n\n  /* istanbul ignore else */\n  if (index > -1) {\n    listeners.splice(index, 1)\n  }\n}\n\nexport default _delete\n","import isString from '../types/isString'\nimport isElement from '../types/isElement'\nimport getListeners from './getListeners'\nimport _off from './_off'\n\n/**\n * 销毁（type 类型的）代理事件绑定\n * ========================================================================\n * 1. 设置了事件类型 type，则销毁指定类型的事件绑定，否则清除所有代理事件绑定\n * 2. recurse 设置为 true，递归销毁子节点全部事件绑定\n * ========================================================================\n * @method purgeElement\n * @param {HTMLElement|String} el - （必须）DOM 元素或者其选择器\n * @param {String|Boolean} type - （必须）事件类型\n * @param {Boolean} [recurse] - （可选）是否递归销毁子节点所有事件绑定\n */\nconst purgeElement = function (el, type, recurse = false) {\n  const $element = isString(el) ? document.querySelector(el) : el\n  const $children = $element.childNodes\n  const listeners = getListeners($element, type)\n\n  listeners.forEach((listener) => {\n    _off($element, listener.type, listener.fn)\n  })\n\n  if (\n    (recurse || type === true || arguments.length === 1) &&\n    $element &&\n    $children\n  ) {\n    $children.forEach(($child) => {\n      if (isElement($child)) {\n        purgeElement($child, type, recurse)\n      }\n    })\n  }\n}\n\nexport default purgeElement\n","import isString from '../types/isString'\n\n/**\n * 获取 DOM 元素（type 事件类型）事件绑定信息\n * ========================================================================\n * 如果设置了事件类型 type， 则返回指定类型的事件绑定信息，否则返回所有事件绑定信息\n * ========================================================================\n * @methods getListeners\n * @param {HTMLElement} el - （必须）要获取事件绑定信息的 DOM 元素\n * @param {String} [type] - （可选）事件类型\n * @returns {Array} - 已绑定的事件信息\n */\nconst getListeners = (el, type) => {\n  let listeners = el._listeners || []\n\n  if (isString(type) && type) {\n    listeners = listeners.filter((listener) => {\n      return listener.type === type\n    })\n  }\n\n  return listeners\n}\n\nexport default getListeners\n","import purgeElement from './purgeElement'\nimport isFunction from '../types/isFunction'\nimport _off from './_off'\n\n/**\n * 取消 type 类型的代理事件绑定\n * ========================================================================\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\n * ========================================================================\n * @method off\n * @param {HTMLElement|Object} el - （必须）取消事件绑定的 DOM 元素\n * @param {String} type - （必须）事件类型\n * @param {Function} [fn] - （可选）事件处理器回调函数\n */\nconst off = (el, type, fn) => {\n  // 如果不设置 fn 参数，默认清除 el 元素上绑定的所有事件处理器\n  if (!isFunction(fn)) {\n    return purgeElement(el, type)\n  }\n\n  _off(el, type, fn)\n}\n\nexport default off\n","import isFunction from '../types/isFunction'\nimport off from './off'\n\nimport { CAPTURE_EVENTS } from './enum'\n\n/**\n * 绑定事件\n * ========================================================================\n * @method at\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\n * @param {Function|Object} fn - （必须） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\n * @param {Boolean} once - （可选）是否仅触发一次\n */\nconst at = (el, type, fn, data, context, once = false) => {\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\n  const listener = function (evt) {\n    let overrideContext = context || el\n\n    // 当设置为 true 时，则事件处理器回调函数的\n    // this 上下文指向为 data 对象\n    if (context === true) {\n      overrideContext = data\n    }\n\n    // 仅触发一次\n    /* istanbul ignore else */\n    if (once === true) {\n      off(el, type, listener)\n    }\n\n    fn.call(overrideContext, evt, data)\n  }\n\n  if (!isFunction(fn)) {\n    return false\n  }\n\n  if (!el._listeners) {\n    el._listeners = []\n  }\n\n  // 缓存 options 元素绑定的事件处理器\n  el._listeners.push({\n    el,\n    type,\n    fn: listener,\n    data,\n    context,\n    capture\n  })\n\n  // 缓存包装后的事件处理器\n  fn._delegateListener = listener\n\n  el.addEventListener(type, listener, capture)\n}\n\nexport default at\n","/**\n * 获取 options 节点下匹配 selector 选择器的 DOM 节点\n * ========================================================================\n * Element.matches() 方法可以用来判断 DOM 元素是否与给定的选择器匹配，事件代理判断是\n * 否触发绑定的代理事件回调函数，关键就是使用 Element.matches() 辨别当前事件触发的目\n * 标 DOM 元素是否为事件代理所期望触发的目标。\n * ========================================================================\n * @method matches\n * @see https://developer.mozilla.org/en-US/docs/web/api/element/matches\n * @param {HTMLElement} el - （必须）DOM 元素\n * @param {String} selector - （必须）匹配 DOM 元素的选择器\n * @returns {Boolean}\n */\nconst matches = (el, selector = '') => {\n  const sel = selector.replace(/^>/i, '')\n\n  if (!selector || !sel || !el) {\n    return false\n  }\n\n  /* istanbul ignore else */\n  if (el.matches) {\n    return el.matches(sel)\n  } else if (el.msMatchesSelector) {\n    return el.msMatchesSelector(sel)\n  } else {\n    return false\n  }\n}\n\nexport default matches\n","/**\n * 获取 DOM 元素的父节点\n * ========================================================================\n * @method getParentOrHost\n * @param {*|HTMLElement} el - （必须）要获取父节点的 DOM 元素\n * @returns {*|HTMLElement}\n */\nconst getParentOrHost = (el) => {\n  return el.host && el !== document && el.host.nodeType\n    ? el.host\n    : el.parentNode\n}\n\nexport default getParentOrHost\n","import closest from '../dom/closest'\nimport off from './off'\nimport getTarget from './getTarget'\n\nimport { CAPTURE_EVENTS } from './enum'\n\n/**\n * 绑定代理事件\n * ========================================================================\n * @method on\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\n * @param {String} selector - （必须）事件代理目标 DOM 元素的选择器\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\n * @param {Function|Object} fn - （可选） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\n * @param {Boolean} once - （可选）是否仅触发一次\n */\nconst on = (el, selector, type, fn, data, context, once = false) => {\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\n\n  const listener = function (evt) {\n    const target = getTarget(evt)\n    // 通过 Element.matches 方法获得点击的目标元素\n    const delegateTarget = closest(target, selector, el)\n    let overrideContext = context || el\n\n    evt.delegateTarget = delegateTarget\n\n    // 当设置为 true 时，则事件处理器回调函数的\n    // this 上下文指向为 data 对象\n    if (context === true) {\n      overrideContext = data\n    }\n\n    /* istanbul ignore else */\n    if (delegateTarget) {\n      // 仅触发一次\n      /* istanbul ignore else */\n      if (once === true) {\n        off(el, type, listener)\n      }\n\n      fn.call(overrideContext, evt, data)\n    }\n  }\n\n  if (!el._listeners) {\n    el._listeners = []\n  }\n\n  // 缓存 options 元素绑定的事件处理器\n  el._listeners.push({\n    el,\n    selector,\n    type,\n    fn: listener,\n    data,\n    context,\n    capture\n  })\n\n  // 缓存包装后的事件处理器\n  fn._delegateListener = listener\n\n  el.addEventListener(type, listener, capture)\n}\n\nexport default on\n","import resolveTextNode from '../dom/resolveTextNode'\n\n/**\n * 返回触发事件的 target DOM 元素\n * ========================================================================\n * @method getTarget\n * @param {Event} evt - Event 对象\n * @return {HTMLElement} - Event 对象的 target DOM 元素\n */\nconst getTarget = function (evt) {\n  const target = evt.target\n\n  return resolveTextNode(target)\n}\n\nexport default getTarget\n","/**\n * 在某些情况下，某些浏览器（例如：Safari 浏览器）会返回实际的目标元素内部的文本节点。\n * resolveTextNode() 方法则会返回实际的目标节点。\n * ========================================================================\n * @method resolveTextNode\n * @param {HTMLElement|Text} el - 要解析的节点\n * @return {*|HTMLElement} - 实际的目标 DOM 节点\n */\nconst resolveTextNode = function (el) {\n  if (el && el.nodeType === 3) {\n    return el.parentNode\n  }\n\n  return el\n}\n\nexport default resolveTextNode\n","import matches from './matches'\nimport getParentOrHost from './getParentOrHost'\n\n/**\n * 获取 options 元素父元素最近的包含 selector 选择器的元素\n * ========================================================================\n * @method closest\n * @param {HTMLElement} el - （必须）DOM 元素\n * @param {String} selector - （必须）DOM 元素的选择其\n * @param {HTMLElement} [ctx] - （必须）比对的 DOM 元素\n * @param {Boolean} [includeCTX] - （必须）是否包含 context DOM 元素\n * @returns {null|HTMLElement} - 返回最接近的 DOM 元素\n */\nconst closest = (el, selector, ctx, includeCTX) => {\n  const context = ctx || document\n\n  if (!el) {\n    return null\n  }\n\n  do {\n    /* istanbul ignore else */\n    if (\n      (selector != null &&\n        (selector.startsWith('>')\n          ? el.parentNode === context && matches(el, selector)\n          : matches(el, selector))) ||\n      (includeCTX && el === context)\n    ) {\n      return el\n    }\n\n    /* istanbul ignore else */\n    if (el === context) {\n      break\n    }\n\n    /* jshint boss:true */\n  } while ((el = getParentOrHost(el)))\n}\n\nexport default closest\n","import toString from '../lang/toString'\n\n/**\n * 检测数据是否为 Array 类型\n * ========================================================================\n * @method isArray\n * @param {*} o\n * @returns {boolean}\n */\nconst isArray = (o) => {\n  if (Array.isArray) {\n    return Array.isArray(o)\n  } else {\n    return toString(o) === '[object Array]'\n  }\n}\n\nexport default isArray\n","import isObject from './isObject'\r\nimport isElement from './isElement'\r\nimport isHTMLCollection from './isHTMLCollection'\r\nimport isFragment from './isFragment'\r\nimport isTextNode from './isTextNode'\r\n\r\nconst isDOM = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (isElement(el) || isHTMLCollection(el) || isFragment(el) || isTextNode(el))\r\n  )\r\n}\r\n\r\nexport default isDOM\r\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isHTMLCollection = (el) => {\r\n  return !!(isObject(el) && toString(el) === '[object NodeList]')\r\n}\r\n\r\nexport default isHTMLCollection\r\n","import toString from '../lang/toString'\nimport isObject from './isObject'\n\nconst isFragment = (fragment) => {\n  return !!(\n    isObject(fragment) && toString(fragment) === '[object DocumentFragment]'\n  )\n}\n\nexport default isFragment\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isTextNode = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (toString(el) === '[object Text]' || (el.tagName && el.nodeType === 3))\r\n  )\r\n}\r\n\r\nexport default isTextNode\r\n","import isObject from '../types/isObject'\nimport isString from '../types/isString'\nimport isArray from '../types/isArray'\nimport isDOM from '../types/isDOM'\nimport setAttributes from './setAttributes'\n\n/**\n * 创建 DOM 节点，并添加属性和子节点\n * ========================================================================\n * @method createElement\n * @param {String} tagName - 标签名称\n * @param {Object|Array|HTMLElement|DocumentFragment|String} attrs - 属性对象或者子节点\n * @param {Array|HTMLElement|DocumentFragment|String} [children] - 子节点数组\n * @returns {HTMLElement}\n */\nconst createElement = (tagName, attrs, children) => {\n  const $fragment = document.createDocumentFragment()\n  const $el = document.createElement(tagName)\n  const isValidChild = (child) => {\n    return isDOM(child) || isString(child)\n  }\n  const append = (child) => {\n    let $child\n\n    if (!isValidChild(child)) {\n      return false\n    }\n\n    if (isDOM(child)) {\n      $child = child\n    } else if (isString(child)) {\n      $child = document.createTextNode(child)\n    }\n\n    $fragment.appendChild($child)\n  }\n\n  if (isObject(attrs)) {\n    setAttributes($el, attrs)\n  } else if (isArray(attrs) && attrs.every((attr) => isValidChild(attr))) {\n    attrs.forEach((child) => {\n      append(child)\n    })\n  } else if (isDOM(attrs)) {\n    append(attrs)\n  } else if (isString(attrs)) {\n    append(document.createTextNode(attrs))\n  }\n\n  if (isArray(children)) {\n    children.forEach((child) => {\n      append(child)\n    })\n  } else {\n    append(children)\n  }\n\n  $el.appendChild($fragment)\n\n  return $el\n}\n\nexport default createElement\n","import isObject from '../types/isObject'\nimport hasOwn from '../lang/hasOwn'\nimport setAttribute from './setAttribute'\n\nconst setAttributes = (el, attrs) => {\n  if (!el || !isObject(attrs)) {\n    return false\n  }\n\n  Object.keys(attrs).forEach((attr) => {\n    const value = attrs[attr]\n    if (hasOwn(attrs, attr)) {\n      setAttribute(el, attr, value)\n    }\n  })\n}\n\nexport default setAttributes\n","/**\n * 给 DOM 节点设置属性/值\n * ========================================================================\n * @method setAttribute\n * @param {HTMLElement} el - DOM 节点\n * @param {String} attr - 属性名称\n * @param {String|Number|Boolean} value - 属性值\n */\nconst setAttribute = (el, attr, value) => {\n  let tagName = el.tagName.toLowerCase()\n\n  switch (attr) {\n    case 'style':\n      el.style.cssText = value\n      break\n    case 'value':\n      if (tagName === 'input' || tagName === 'textarea') {\n        el.value = value\n      } else {\n        el.setAttribute(attr, value)\n      }\n      break\n    case 'htmlFor':\n      el.setAttribute('for', value)\n      break\n    case 'className':\n      el.className = value\n      break\n    case 'innerHTML':\n      el.innerHTML = value\n      break\n    case 'innerText':\n      el.innerText = value\n      break\n    default:\n      el.setAttribute(attr, value)\n      break\n  }\n}\n\nexport default setAttribute\n","/**\n * 返回给定值的平方值\n * ========================================================================\n * @method easeInQuad\n * @param {Number} x\n * @returns {number}\n */\nconst easeInQuad = (x) => {\n  return x * x\n}\n\nexport default easeInQuad\n","import isString from '../types/isString'\nimport isElement from '../types/isElement'\n\n/**\n * 通过给的 scrollElement 参数，获取滚动 DOM 元素\n * ========================================================================\n * @method _getScrollElement\n * @param {String|HTMLElement} scrollElement\n * @returns {Element}\n * @private\n */\nconst _getScrollElement = (scrollElement = null) => {\n  let $rootElements\n  let $scrollElement\n\n  if (!scrollElement) {\n    $rootElements = document.querySelectorAll('html,body')\n    $scrollElement =\n      $rootElements[0].scrollTop - $rootElements[1].scrollTop >= 0\n        ? $rootElements[0]\n        : $rootElements[1]\n  } else {\n    if (isString(scrollElement)) {\n      $scrollElement = document.querySelector(scrollElement)\n    } else if (isElement(scrollElement)) {\n      $scrollElement = scrollElement\n    }\n  }\n\n  return $scrollElement\n}\n\nexport default _getScrollElement\n","import isElement from '../types/isElement'\n/**\n * 检测 DOM 节点是否包含名为 className 的样式\n * ========================================================================\n * @method hasClass\n * @param {HTMLElement} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst hasClass = (el, className) => {\n  const pattern = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)')\n  let allClass\n  let classList\n\n  if (!isElement(el)) {\n    return false\n  }\n\n  allClass = el.className\n\n  if (!allClass) {\n    return false\n  }\n\n  classList = el.classList\n\n  if (classList && classList.contains) {\n    return el.classList.contains(className)\n  }\n\n  return !!pattern.exec(allClass)\n}\n\nexport default hasClass\n","import hasClass from './hasClass'\n\n/**\n * 给 DOM 节点添加名为 className 的样式\n * ========================================================================\n * @method addClass\n * @param {HTMLElement} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst addClass = (el, className) => {\n  let classList\n  let allClass\n\n  if (hasClass(el, className)) {\n    return false\n  }\n\n  classList = el.classList\n\n  if (classList?.add) {\n    classList.add(className)\n  } else {\n    allClass = el.className\n    allClass += allClass.length > 0 ? ' ' + className : className\n    el.className = allClass\n  }\n}\n\nexport default addClass\n","import trim from '../lang/trim'\nimport hasClass from './hasClass'\n\n/**\n * 移除 DOM 节点的 className 样式\n * ========================================================================\n * @method removeClass\n * @param {HTMLElement} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst removeClass = (el, className) => {\n  let allClass = el.className\n  let classList\n\n  if (!allClass || !hasClass(el, className)) {\n    return false\n  }\n\n  classList = el.classList\n\n  if (classList?.remove) {\n    classList.remove(className)\n  } else {\n    allClass = trim(allClass.replace(className, ''))\n    el.className = allClass\n  }\n}\n\nexport default removeClass\n","import isString from '../types/isString'\n\n/**\n * 清楚字符串起始位置所有的空格\n * ========================================================================\n * @method trim\n * @param {string} str\n * @returns {string|Boolean}\n */\nconst trim = (str) => {\n  if (!isString(str)) {\n    return false\n  }\n  return str.replace(/(^\\s+)|(\\s+$)/g, '')\n}\n\nexport default trim\n","/**\n * 获取 DOM 节点相对于窗口的 left （纵坐标）值\n * ========================================================================\n * @method offsetTop\n * @param {HTMLElement} el - DOM 节点\n * @returns {Number}\n */\nconst offsetTop = (el) => {\n  let top = el.offsetTop\n\n  if (el.offsetParent !== null) {\n    top += offsetTop(el.offsetParent)\n  }\n\n  return top\n}\n\nexport default offsetTop\n","/**\r\n * 获取HTML元素的某个CSS样式值\r\n * ====================================================\r\n * @param el\r\n * @param ruleName\r\n * @returns {*}\r\n */\r\nconst getStyle = (el, ruleName) => {\r\n  return getComputedStyle(el)[ruleName]\r\n}\r\n\r\nexport default getStyle\r\n","const setProperty = (prop, value) => {\r\n  const documentElement = document.documentElement\r\n  documentElement.style.setProperty(prop, value)\r\n}\r\n\r\nexport default setProperty\r\n","import isObject from '../types/isObject'\r\nimport isArray from '../types/isArray'\r\n\r\n/**\r\n * 深拷贝对象函数\r\n * ========================================================================\r\n * @methods cloneDeep\r\n * @param {Object} obj - 深拷贝的对象\r\n * @returns {Array|Object|*}\r\n *\r\n * @example\r\n * const arr = cloneDeep([2,3,4,6])\r\n * => [2,3,4,6]\r\n */\r\nconst cloneDeep = (obj) => {\r\n  let clone = {}\r\n\r\n  if (obj === null) {\r\n    return null\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    clone = Array.from(obj)\r\n  } else {\r\n    clone = Object.assign({}, obj)\r\n    Object.keys(clone).forEach((key) => {\r\n      return (clone[key] = isObject(obj[key]) ? cloneDeep(obj[key]) : obj[key])\r\n    })\r\n  }\r\n\r\n  return clone\r\n}\r\n\r\nexport default cloneDeep\r\n","/**\n * timeSlice.js 时间切片功能函数\n * ====================================================\n * Created By: Yaohaixiao\n * Update: 2023.09.04\n */\nimport isFunction from '../types/isFunction'\nimport later from './later'\n\nconst queue = []\nlet isHandling\nlet done\n\n// Shim from https://developers.google.com/web/updates/2015/08/using-requestidlecallback\nif (typeof window.requestIdleCallback === 'undefined') {\n  window.requestIdleCallback = function (cb) {\n    const start = Date.now()\n    return later(function () {\n      cb({\n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start))\n        }\n      })\n    }, 10)\n  }\n\n  window.cancelIdleCallback = function (id) {\n    clearTimeout(id)\n  }\n}\n\nfunction runIdle(idleDeadline) {\n  while (idleDeadline.timeRemaining() > 0 && queue.length) {\n    const fn = queue.shift()\n\n    if (!isFunction(fn)) {\n      return false\n    }\n\n    fn()\n  }\n\n  if (queue.length) {\n    isHandling = requestIdleCallback(runIdle)\n  } else {\n    isHandling = 0\n\n    if (isFunction(done)) {\n      done()\n      done = null\n    }\n  }\n}\n\n/**\n * 时间切片功能函数：主要用于优化长时任务的性能，将长时任务分解成\n * 多个短时间任务\n * ====================================================\n * @param {Function} fn - 需要在空闲时执行的回调函数\n * @param {Function} afterComplete - queen 的\n * @return {(function(): (boolean|undefined))|*|boolean}\n */\nconst timeSlice = (fn, afterComplete = null) => {\n  queue.push(fn)\n\n  if (isFunction(afterComplete)) {\n    done = afterComplete\n  }\n\n  if (!isHandling) {\n    requestIdleCallback(runIdle)\n  }\n}\n\nexport default timeSlice\n","import Base from './base'\n\nimport isString from './utils/types/isString'\nimport isFunction from './utils/types/isFunction'\nimport isElement from './utils/types/isElement'\nimport later from './utils/lang/later'\nimport at from './utils/event/at'\nimport on from './utils/event/on'\nimport off from './utils/event/off'\nimport stop from './utils/event/stop'\nimport createElement from './utils/dom/createElement'\nimport scrollTo from './utils/dom/scrollTo'\nimport addClass from './utils/dom/addClass'\nimport intersection from './utils/dom/intersection'\nimport removeClass from './utils/dom/removeClass'\nimport offsetTop from './utils/dom/offsetTop'\nimport getStyle from './utils/dom/getStyle'\nimport setProperty from './utils/dom/setProperty'\nimport _getScrollElement from './utils/dom/_getScrollElement'\nimport cloneDeep from './utils/lang/cloneDeep'\n\nimport _paintChapters from './_paintChapters'\n\nclass Chapters extends Base {\n  constructor(options) {\n    super()\n\n    this._default()\n\n    this.scrollTimer = null\n    this.resizeTimer = null\n    this.observerTimer = null\n    this.Observer = null\n\n    if (options) {\n      this.initialize(options)\n    }\n  }\n\n  _default() {\n    this.attrs = cloneDeep(Chapters.DEFAULTS)\n\n    this.$el = null\n    this.$title = null\n    this.$main = null\n    this.$list = null\n    this.$placeholder = null\n    this.$parentElement = null\n    this.$scrollElement = null\n    this.$active = null\n\n    this.chapters = []\n    this.active = 0\n    this.offsetWidth = 0\n    this.offsetTop = 0\n    this.playing = false\n    this.closed = false\n\n    return this\n  }\n\n  initialize(options) {\n    let created\n    let parentElement\n    let scrollElement\n    let $parent\n\n    this.attr(options)\n    created = this.attr('created')\n    parentElement = this.attr('parentElement')\n    scrollElement = this.attr('scrollElement')\n\n    if (isString(parentElement)) {\n      $parent = document.querySelector(parentElement)\n    } else if (isElement(parentElement)) {\n      $parent = parentElement\n    }\n    this.$parentElement = $parent\n    this.$scrollElement = _getScrollElement(scrollElement)\n\n    this.chapters = this.attr('chapters')\n    this.closed = this.attr('closed')\n    this.active = this.attr('active')\n\n    if (isFunction(created)) {\n      created.call(this)\n    }\n\n    if (this.chapters.length < 1) {\n      return this\n    }\n\n    this.render().addListeners()\n\n    this.$active = document.querySelector(`#chapter-${this.active}`)\n\n    return this\n  }\n\n  isClosed() {\n    return this.closed\n  }\n\n  isSticky() {\n    const position = this.attr('position')\n    return position === 'sticky'\n  }\n\n  isFixed() {\n    const position = this.attr('position')\n    return position === 'fixed'\n  }\n\n  isInside() {\n    return this.isFixed() || this.isSticky()\n  }\n\n  isOutside() {\n    return !this.isInside()\n  }\n\n  count() {\n    return this.chapters.length\n  }\n\n  _paintEdge() {\n    const $fragment = document.createDocumentFragment()\n    const STICKY = 'outline-chapters_sticky'\n    const HIDDEN = 'outline-chapters_hidden'\n    const title = this.attr('title')\n    const animationCurrent = this.attr('animationCurrent')\n    const customClass = this.attr('customClass')\n    const $parentElement = this.$parentElement\n    const children = []\n    const contents = []\n    let $title = null\n    let $el\n    let $main\n    let $list\n    let $placeholder\n\n    if (!$parentElement) {\n      return this\n    }\n\n    if (this.isInside() && title) {\n      $title = createElement(\n        'h2',\n        {\n          className: 'outline-chapters__title'\n        },\n        title\n      )\n      this.$title = $title\n      contents.push($title)\n    }\n\n    $list = createElement('ul', {\n      // 为优化性能，添加了 _fixed 和 _hidden\n      // fixed 为了让 $list 脱离流布局\n      // hidden 让 $list 不可见\n      className: `outline-chapters__list`\n    })\n    this.$list = $list\n    children.push($list)\n\n    if (animationCurrent) {\n      $placeholder = createElement('div', {\n        className: 'outline-chapters__placeholder'\n      })\n      this.$placeholder = $placeholder\n      children.push($placeholder)\n    }\n\n    $main = createElement(\n      'div',\n      {\n        className: 'outline-chapters__main'\n      },\n      children\n    )\n    this.$main = $main\n    contents.push($main)\n\n    $el = createElement(\n      'nav',\n      {\n        id: 'outline-chapters',\n        className: `outline-chapters ${HIDDEN}`\n      },\n      contents\n    )\n    this.$el = $el\n\n    if (this.isSticky()) {\n      this.calculateStickyHeight()\n      addClass($el, STICKY)\n    }\n\n    if (customClass) {\n      addClass($el, customClass)\n    }\n    $fragment.appendChild($el)\n    $parentElement.appendChild($fragment)\n\n    return this\n  }\n\n  render() {\n    const mounted = this.attr('mounted')\n    const $parentElement = this.$parentElement\n    const chapters = this.chapters\n    const count = this.count()\n    let $el\n\n    if (!$parentElement || chapters.length < 1) {\n      return this\n    }\n\n    if (this.isInside()) {\n      addClass($parentElement, 'outline-chapters-parent')\n    }\n\n    this._paintEdge()\n    $el = this.$el\n\n    this._paint(chapters)\n\n    later(() => {\n      this.highlight(this.active)\n    }, 60)\n\n    this.offsetTop = offsetTop($el)\n    this.offsetWidth = $el.offsetWidth\n\n    if (this.isFixed()) {\n      this.sticky()\n      setProperty('--outline-chapters-width', `${this.offsetWidth}px`)\n    }\n\n    if (isFunction(mounted)) {\n      mounted.call(this)\n    }\n\n    if (count < 400) {\n      this.onObserver()\n    }\n\n    return this\n  }\n\n  erase() {\n    this.$list.innerHTML = ''\n\n    return this\n  }\n\n  _paint(chapters) {\n    const HIDDEN = 'outline-chapters_hidden'\n    const showCode = this.attr('showCode')\n    const $el = this.$el\n    const $list = this.$list\n\n    _paintChapters($list, chapters, showCode)\n    removeClass($el, HIDDEN)\n\n    return this\n  }\n\n  _remove() {\n    this.$parentElement.removeChild(this.$el)\n    return this\n  }\n\n  refresh(chapters) {\n    const HIDDEN = 'outline-chapters_hidden'\n    const $el = this.$el\n\n    removeClass($el, HIDDEN)\n    this.erase()._paint(chapters)\n\n    return this\n  }\n\n  positionPlaceholder(index) {\n    const $main = this.$main\n    const $list = this.$list\n    const $placeholder = this.$placeholder\n    const $anchor = $list.querySelector('.outline-chapters__anchor')\n    const animationCurrent = this.attr('animationCurrent')\n    const mainPaddingTop = parseInt(getStyle($main, 'padding-top'), 10)\n    const mainBorderTop = parseInt(getStyle($main, 'border-top-width'), 10)\n    const placeholderPaddingTop = parseInt(getStyle($list, 'padding-top'), 10)\n    const placeholderMarginTop = parseInt(getStyle($list, 'margin-top'), 10)\n    const placeholderBorderTop = parseInt(\n      getStyle($list, 'border-top-width'),\n      10\n    )\n    let height = $anchor.offsetHeight\n    let offsetTop = 0\n    let top\n\n    if (!animationCurrent) {\n      return this\n    }\n\n    if (mainPaddingTop) {\n      offsetTop += mainPaddingTop\n    }\n\n    if (placeholderPaddingTop) {\n      offsetTop += placeholderPaddingTop\n    }\n\n    if (placeholderMarginTop) {\n      offsetTop += placeholderMarginTop\n    }\n\n    if (mainBorderTop) {\n      offsetTop += mainBorderTop\n    }\n\n    if (placeholderBorderTop) {\n      offsetTop += placeholderBorderTop\n    }\n\n    top = height * index\n    $placeholder.style.cssText = `transform: translateY(${\n      offsetTop + top\n    }px);height:${height}px;`\n\n    return this\n  }\n\n  highlight(id) {\n    const $el = this.$el\n    const animationCurrent = this.attr('animationCurrent')\n    const ACTIVE = 'outline-chapters_active'\n    const HIGHLIGHT = 'outline-chapters_highlight'\n    let $anchor = null\n\n    if (!$el) {\n      return this\n    }\n\n    $anchor = $el.querySelector(`#chapter__anchor-${id}`)\n\n    if (!$anchor) {\n      return this\n    }\n\n    this.active = parseInt($anchor.getAttribute('data-id'), 10)\n\n    if (this.$active) {\n      removeClass(this.$active, HIGHLIGHT)\n      removeClass(this.$active, ACTIVE)\n    }\n\n    this.$active = $anchor\n    addClass(this.$active, ACTIVE)\n\n    if (animationCurrent) {\n      this.positionPlaceholder(this.active)\n    } else {\n      addClass(this.$active, HIGHLIGHT)\n    }\n\n    return this\n  }\n\n  sticky() {\n    const afterSticky = this.attr('afterSticky')\n    const FIXED = 'outline-chapters_fixed'\n    const $el = this.$el\n    const top = this.offsetTop\n    const scrollTop = this.$scrollElement.scrollTop\n    let isStickying\n\n    if (!this.isFixed()) {\n      return this\n    }\n\n    isStickying = scrollTop >= top\n\n    if (isStickying) {\n      addClass($el, FIXED)\n    } else {\n      removeClass($el, FIXED)\n    }\n\n    if (isFunction(afterSticky)) {\n      afterSticky.call(this, this.isClosed(), isStickying)\n    }\n\n    return this\n  }\n\n  calculateStickyHeight() {\n    const documentElement = document.documentElement\n    const height = Math.max(\n      documentElement.clientHeight || 0,\n      window.innerHeight || 0\n    )\n    setProperty('--outline-sticky-height', `${height}px`)\n    return this\n  }\n\n  scrollTo(top, after) {\n    const el = this.$scrollElement\n\n    scrollTo(el, top, after)\n\n    return this\n  }\n\n  show() {\n    const FOLDED = 'outline-chapters_folded'\n    const HIDDEN = 'outline-chapters_hidden'\n    const opened = this.attr('afterOpened')\n    const count = this.count()\n    const $el = this.$el\n    const $parent = this.$parentElement\n\n    if (this.isInside()) {\n      if (count > 800) {\n        removeClass($parent, HIDDEN)\n      } else {\n        removeClass($parent, HIDDEN)\n        later(() => {\n          removeClass($parent, FOLDED)\n        }, 30)\n      }\n    } else {\n      removeClass($el, HIDDEN)\n    }\n    this.closed = false\n\n    if (isFunction(opened)) {\n      opened.call(this)\n    }\n\n    return this\n  }\n\n  hide() {\n    const FOLDED = 'outline-chapters_folded'\n    const HIDDEN = 'outline-chapters_hidden'\n    const closed = this.attr('afterClosed')\n    const count = this.count()\n    const $el = this.$el\n    const $parent = this.$parentElement\n\n    if (this.isInside()) {\n      if (count > 800) {\n        addClass($parent, HIDDEN)\n      } else {\n        addClass($parent, FOLDED)\n        later(() => {\n          addClass($parent, HIDDEN)\n        })\n      }\n    } else {\n      addClass($el, HIDDEN)\n    }\n    this.closed = true\n\n    if (isFunction(closed)) {\n      closed.call(this)\n    }\n\n    return this\n  }\n\n  toggle() {\n    const afterToggle = this.attr('afterToggle')\n    const top = this.offsetTop\n    const scrollTop = this.$scrollElement.scrollTop\n    let isStickying\n\n    if (this.isClosed()) {\n      this.show()\n    } else {\n      this.hide()\n    }\n\n    if (isFunction(afterToggle)) {\n      later(() => {\n        isStickying = scrollTop >= top\n        afterToggle.call(this, this.isClosed(), isStickying)\n      })\n    }\n\n    return this\n  }\n\n  destroy() {\n    const beforeDestroy = this.attr('beforeDestroy')\n    const afterDestroy = this.attr('afterDestroy')\n\n    if (isFunction(beforeDestroy)) {\n      beforeDestroy.call(this)\n    }\n\n    this.removeListeners()._remove()._default()\n\n    if (this.scrollTimer) {\n      clearTimeout(this.scrollTimer)\n      this.scrollTimer = null\n    }\n\n    if (this.resizeTimer) {\n      clearTimeout(this.resizeTimer)\n      this.resizeTimer = null\n    }\n\n    if (this.observerTimer) {\n      clearTimeout(this.observerTimer)\n      this.observerTimer = null\n    }\n\n    if (this.Observer) {\n      this.Observer = null\n    }\n\n    if (isFunction(afterDestroy)) {\n      afterDestroy.call(this)\n    }\n\n    return this\n  }\n\n  onObserver() {\n    const selector = this.attr('selector')\n\n    this.Observer = intersection(\n      ($heading) => {\n        const id = $heading.getAttribute('data-id')\n\n        if (this.playing) {\n          return false\n        }\n\n        if (this.observerTimer) {\n          clearTimeout(this.observerTimer)\n        }\n\n        this.observerTimer = later(() => {\n          this.highlight(id)\n        }, 100)\n      },\n      {\n        selector,\n        context: this\n      }\n    )\n\n    return this\n  }\n\n  onSelect(evt) {\n    const stickyHeight = this.attr('stickyHeight')\n    const $anchor = evt.delegateTarget\n    const id = $anchor.getAttribute('data-id')\n    const headingId = $anchor.href.split('#')[1]\n    const $heading = document.querySelector(`#${headingId}`)\n    const top = offsetTop($heading) - (stickyHeight + 10)\n    const min = 0\n    const max = this.$scrollElement.scrollHeight\n    const afterScroll = this.attr('afterScroll')\n    const after = () => {\n      if (isFunction(afterScroll)) {\n        afterScroll.call(this, 'chapter')\n      }\n\n      later(() => {\n        this.playing = false\n        this.$emit('toolbar:update', {\n          top,\n          min,\n          max\n        })\n      })\n    }\n\n    this.playing = true\n    if (this.isFixed()) {\n      this.sticky()\n      later(() => {\n        this.scrollTo(top, after)\n        this.highlight(id)\n      }, 10)\n    } else {\n      this.scrollTo(top, after)\n      this.highlight(id)\n    }\n\n    stop(evt)\n\n    return this\n  }\n\n  onScroll() {\n    const $scrollElement = this.$scrollElement\n\n    if (this.scrollTimer) {\n      clearTimeout(this.scrollTimer)\n    }\n\n    this.scrollTimer = later(() => {\n      const top = $scrollElement.scrollTop\n      const min = 0\n      const max = $scrollElement.scrollHeight - $scrollElement.clientHeight\n\n      if (this.isFixed()) {\n        this.sticky()\n      }\n\n      this.$emit('toolbar:update', {\n        top,\n        min,\n        max\n      })\n    }, 100)\n\n    return this\n  }\n\n  onResize() {\n    if (this.resizeTimer) {\n      clearTimeout(this.resizeTimer)\n    }\n\n    this.resizeTimer = later(() => {\n      this.calculateStickyHeight()\n    })\n\n    return this\n  }\n\n  addListeners() {\n    const $el = this.$el\n    const $scrollElement = this.$scrollElement\n    const tagName = $scrollElement.tagName.toLowerCase()\n    let $element = $scrollElement\n\n    if (this.count() < 1) {\n      return this\n    }\n\n    if (tagName === 'html' || tagName === 'body') {\n      $element = window\n    }\n\n    on($el, '.outline-chapters__anchor', 'click', this.onSelect, this, true)\n    at($element, 'scroll', this.onScroll, this, true)\n    if (this.isSticky()) {\n      at(window, 'resize', this.onResize, this, true)\n    }\n    this.$on('anchors:all:paint', this.onObserver, this)\n\n    return this\n  }\n\n  removeListeners() {\n    const selector = this.attr('selector')\n    const $el = this.$el\n    const $scrollElement = this.$scrollElement\n    const tagName = $scrollElement.tagName.toLowerCase()\n    let $element = $scrollElement\n\n    if (this.count() < 1) {\n      return this\n    }\n\n    if (tagName === 'html' || tagName === 'body') {\n      $element = window\n    }\n\n    off($el, 'click', this.onSelect)\n    off($element, 'scroll', this.onScroll)\n\n    if (this.isSticky()) {\n      at(window, 'resize', this.onResize)\n    }\n\n    this.$off('anchors:all:paint')\n\n    if (this.Observer) {\n      document.querySelectorAll(selector).forEach((section) => {\n        this.Observer.unobserve(section)\n      })\n    }\n\n    return this\n  }\n}\n\nChapters.DEFAULTS = {\n  parentElement: '',\n  scrollElement: '',\n  selector: '.outline-heading',\n  active: 0,\n  closed: false,\n  showCode: true,\n  animationCurrent: true,\n  position: 'relative',\n  stickyHeight: 0,\n  chapters: [],\n  created: null,\n  mounted: null,\n  afterClosed: null,\n  afterOpened: null,\n  afterScroll: null,\n  beforeDestroy: null,\n  afterDestroy: null,\n  afterSticky: null\n}\n\nexport default Chapters\n","import createElement from './utils/dom/createElement'\nimport timeSlice from './utils/lang/timeSlice'\n\nconst _paintChapters = ($list, chapters, showCode = false) => {\n  const LIMIT = 400\n  const count = chapters.length\n  const clones = [...chapters]\n  const paint = (parts) => {\n    const byId = (id) => $list.querySelector(`#${id}`)\n    parts.forEach((chapter) => {\n      const pid = chapter.pid\n      const id = chapter.id\n      const rel = chapter.rel\n      const children = []\n      const $text = createElement(\n        'span',\n        {\n          className: 'outline-chapters__text'\n        },\n        chapter.text\n      )\n      let $link\n      let $code\n      let $li\n      let $subject\n      let $chapter\n\n      if (showCode) {\n        $code = createElement(\n          'span',\n          {\n            className: 'outline-chapters__code',\n            'data-id': id\n          },\n          chapter.code\n        )\n\n        children.push($code)\n      }\n\n      children.push($text)\n\n      $link = createElement(\n        'a',\n        {\n          id: `chapter__anchor-${id}`,\n          className: 'outline-chapters__anchor',\n          href: '#' + rel,\n          rel: rel,\n          'data-id': id\n        },\n        children\n      )\n\n      $li = createElement(\n        'li',\n        {\n          id: `chapter-${id}`,\n          className: 'outline-chapters__item',\n          'data-id': id\n        },\n        $link\n      )\n\n      if (pid === -1) {\n        $list.appendChild($li)\n      } else {\n        $chapter = byId(`chapter-${pid}`)\n        $subject = byId(`subject-${pid}`)\n\n        if (!$subject) {\n          $subject = createElement(\n            'ul',\n            {\n              id: 'subject-' + pid,\n              className: 'outline-chapters__subject'\n            },\n            $li\n          )\n\n          $chapter.appendChild($subject)\n        } else {\n          $subject.appendChild($li)\n        }\n      }\n    })\n  }\n\n  if (count > LIMIT) {\n    // 同步绘制\n    paint(clones.splice(0, LIMIT))\n    // 剩余的采用 timeSlice 机制绘制\n    while (clones.length > 0) {\n      const once = clones.splice(0, LIMIT)\n      timeSlice(() => {\n        paint(once)\n      })\n    }\n  } else {\n    paint(clones)\n  }\n}\n\nexport default _paintChapters\n","import easeInQuad from '../lang/easeInQuad'\nimport isFunction from '../types/isFunction'\nimport _getScrollElement from './_getScrollElement'\n\n/**\n * 指定 rootElement DOM 节点滚动到指定 top 位置\n * ========================================================================\n * @method scrollTo\n * @param {HTMLElement|Object} [scrollElement] - （必须）要滚动的 DOM 节点\n * @param {Number} top - （必须）滚动的 scrollTop 数值\n * @param {Function} [afterStop] - （可选）滚动完成的回调函数\n */\nconst scrollTo = (scrollElement, top, afterStop) => {\n  const $scrollElement = _getScrollElement(scrollElement)\n  let scrollTop = $scrollElement.scrollTop\n  let step = 0\n  const distance = top - scrollTop\n  const MAX_HEIGHT = $scrollElement.scrollHeight\n  const MAX_TOP = top - MAX_HEIGHT <= 0 ? top : MAX_HEIGHT\n  const stop = (top) => {\n    if (isFunction(afterStop)) {\n      afterStop(top)\n    }\n\n    return false\n  }\n  const play = () => {\n    step += 1\n\n    // 向上滚动\n    if (distance < 0) {\n      scrollTop -= easeInQuad(step)\n      $scrollElement.scrollTop = scrollTop\n\n      if (scrollTop <= top) {\n        $scrollElement.scrollTop = top\n        return stop(top)\n      }\n    } else {\n      scrollTop += easeInQuad(step)\n      $scrollElement.scrollTop = scrollTop\n\n      if (scrollTop >= MAX_TOP) {\n        $scrollElement.scrollTop = MAX_TOP\n        return stop(MAX_TOP)\n      }\n    }\n\n    requestAnimationFrame(play)\n  }\n\n  requestAnimationFrame(play)\n}\n\nexport default scrollTo\n","import isFunction from '../types/isFunction'\nimport isElement from '../types/isElement'\n\n/**\n * 通用的 IntersectionObserver 观察者处理器\n * ========================================================================\n * @method intersection\n * @param {Function} fn\n * @param {Object} [props]\n * @param {Object|HTMLElement} [props.root]\n * @param {String} [props.selector]\n * @param {Object} [props.context]\n * @param {String} [props.attr]\n * @param {String} [props.rootMargin]\n */\nconst intersection = (fn, props = {}) => {\n  const root = props.root || null\n  const selector = props.selector || '.outline-heading'\n  const context = props.context || null\n  const rootMargin = props.rootMargin || '0px 0px -90% 0px'\n  const options = {\n    rootMargin: rootMargin\n  }\n  const Observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      if (entry.intersectionRatio > 0) {\n        if (isFunction(fn)) {\n          fn.call(context || entry.target, entry.target)\n        }\n      }\n    })\n  }, options)\n  const $root = isElement(root) ? root : document\n\n  if (root) {\n    options.root = root\n  }\n\n  $root.querySelectorAll(selector).forEach((section) => {\n    Observer.observe(section)\n  })\n\n  return Observer\n}\n\nexport default intersection\n","/**\n * 停止事件（阻止默认行为和阻止事件的捕获或冒泡）\n * ========================================================================\n * @method stop\n * @param {Event} evt - 事件对象\n *\n * @example\n * <div id=\"nav\" class=\"nav\">\n *   <a id=\"service\" class=\"anchor\" href=\"https://www.yaohaixiao.com/serivce\">Service</a>\n *   <a id=\"help\" class=\"anchor\" href=\"https://www.yaohaixiao.com/help\">Help</a>\n * </div>\n *\n * const $nav = document.querySelector('#nav')\n * const $service = document.querySelector('.anchor')\n *\n * on($nav, 'click', function(evt) {\n *   console.log('你点击了导航栏')\n * })\n *\n * on($anchor, 'click', function(evt) {\n *   console.log('tagName', this.tagName)\n *\n *   // 工作台输出：'a'\n *   // 不会触发事件冒泡，输出：'你点击了导航栏'\n *   // 也不会切换到 href 属性的页面，阻止了点击链接的默认行为\n *   stopEvent(evt)\n * })\n */\nconst stop = function (evt) {\n  evt.stopPropagation()\n  evt.preventDefault()\n}\n\nexport default stop\n"],"names":["isString","str","hasOwn","obj","prop","hasOwnProperty","Object","prototype","call","toString","val","apply","isFunction","isObject","o","_subscribers","_hasDirectSubscribersFor","topic","length","has","arguments","undefined","found","position","lastIndexOf","substring","_hasSubscribers","emit","data","async","execute","forEach","subscriber","message","indexOf","callback","context","deliver","setTimeout","guid","uuid","prefix","_removeSubscriber","off","token","keys","subject","execution","j","splice","_removeSubscriberByToken","Base","constructor","options","this","attrs","initialize","attr","render","addListeners","value","origin","source","extend","refresh","destroy","removeListeners","reload","$emit","event","publish","$on","handler","push","subscribe","$off","unsubscribe","isElement","nodeName","tagName","nodeType","later","fn","delay","CAPTURE_EVENTS","_off","el","type","capture","_delegateListener","listeners","_listeners","index","listener","i","_delete","removeEventListener","purgeElement","recurse","$element","document","querySelector","$children","childNodes","getListeners","filter","$child","at","once","evt","overrideContext","addEventListener","matches","selector","sel","replace","msMatchesSelector","getParentOrHost","host","parentNode","on","target","getTarget","delegateTarget","closest","ctx","includeCTX","startsWith","isArray","Array","isDOM","isHTMLCollection","fragment","isTextNode","createElement","children","$fragment","createDocumentFragment","$el","isValidChild","child","append","createTextNode","appendChild","setAttributes","setAttribute","toLowerCase","style","cssText","className","innerHTML","innerText","every","easeInQuad","x","_getScrollElement","$rootElements","$scrollElement","scrollElement","querySelectorAll","scrollTop","hasClass","pattern","RegExp","allClass","classList","contains","exec","addClass","_classList","add","removeClass","remove","offsetTop","top","offsetParent","getStyle","ruleName","getComputedStyle","setProperty","documentElement","cloneDeep","clone","from","assign","key","queue","isHandling","done","runIdle","idleDeadline","timeRemaining","shift","requestIdleCallback","window","cb","start","Date","now","didTimeout","Math","max","cancelIdleCallback","id","clearTimeout","timeSlice","afterComplete","Chapters","super","_default","scrollTimer","resizeTimer","observerTimer","Observer","DEFAULTS","$title","$main","$list","$placeholder","$parentElement","$active","chapters","active","offsetWidth","playing","closed","created","parentElement","$parent","isClosed","isSticky","isFixed","isInside","isOutside","count","_paintEdge","title","animationCurrent","customClass","contents","calculateStickyHeight","mounted","_paint","highlight","sticky","onObserver","erase","showCode","clones","paint","parts","byId","chapter","pid","rel","$text","text","$link","$code","$li","$subject","$chapter","code","href","_paintChapters","_remove","removeChild","positionPlaceholder","$anchor","mainPaddingTop","parseInt","mainBorderTop","placeholderPaddingTop","placeholderMarginTop","placeholderBorderTop","height","offsetHeight","ACTIVE","HIGHLIGHT","getAttribute","afterSticky","FIXED","isStickying","clientHeight","innerHeight","scrollTo","after","afterStop","step","distance","MAX_HEIGHT","scrollHeight","MAX_TOP","stop","play","requestAnimationFrame","show","HIDDEN","opened","hide","toggle","afterToggle","beforeDestroy","afterDestroy","props","root","rootMargin","IntersectionObserver","entries","entry","intersectionRatio","$root","section","observe","intersection","$heading","onSelect","stickyHeight","headingId","split","afterScroll","min","stopPropagation","preventDefault","onScroll","onResize","unobserve","afterClosed","afterOpened"],"mappings":"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"}