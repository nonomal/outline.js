{"version":3,"file":"anchors.min.js","sources":["../../utils/types/isString.js","../../utils/lang/toString.js","../../utils/types/isFunction.js","../../utils/types/isObject.js","../../utils/types/isElement.js","../../utils/types/isArray.js","../../utils/lang/cloneDeep.js","../../utils/lang/later.js","../../utils/lang/timeSlice.js","../../utils/lang/easeInQuad.js","../../utils/dom/_getScrollElement.js","../../utils/dom/offsetTop.js","../../utils/dom/matches.js","../../utils/dom/getParentOrHost.js","../../utils/event/enum.js","../../utils/event/_off.js","../../utils/event/_delete.js","../../utils/event/purgeElement.js","../../utils/event/getListeners.js","../../utils/event/off.js","../../utils/event/on.js","../../utils/event/getTarget.js","../../utils/dom/resolveTextNode.js","../../utils/dom/closest.js","../../utils/icons/symbols.js","../../utils/icons/defaults.js","../../utils/icons/getSymbols.js","../../utils/icons/getSymbol.js","../../utils/icons/paint.js","../../utils/icons/add.js","../../utils/lang/trim.js","../../utils/types/isDOM.js","../../utils/types/isHTMLCollection.js","../../utils/types/isFragment.js","../../utils/types/isTextNode.js","../../utils/lang/hasOwn.js","../../utils/dom/setAttributes.js","../../utils/dom/setAttribute.js","../../utils/icons/createElement.js","../../utils/types/isSVG.js","../../_updateHeading.js","../../utils/icons/icon.js","../../utils/dom/createElement.js","../../utils/dom/removeClass.js","../../utils/dom/hasClass.js","../../_removeHeading.js","../../utils/types/isEmpty.js","../../getChaptersByHeadings.js","../../utils/lang/stripTags.js","../../_getChapterParentIdByDiffer.js","../../_getChaptersWithCode.js","../../getChapters.js","../../utils/lang/toTree.js","../../utils/observer/_subscribers.js","../../utils/observer/_hasDirectSubscribersFor.js","../../utils/observer/has.js","../../utils/observer/_hasSubscribers.js","../../utils/observer/emit.js","../../utils/types/isTypedArray.js","../../utils/lang/guid.js","../../utils/observer/_removeSubscriber.js","../../utils/observer/off.js","../../utils/observer/_removeSubscriberByToken.js","../../base.js","../../utils/lang/extend.js","../../utils/observer/on.js","../../anchors.js","../../utils/dom/scrollTo.js","../../utils/event/stop.js"],"sourcesContent":["/**\r\n * 检测数据是否为 String 类型\r\n * ========================================================================\r\n * @method isArray\r\n * @param {*} str\r\n * @returns {boolean}\r\n */\r\nconst isString = (str) => {\r\n  return typeof str === 'string'\r\n}\r\n\r\nexport default isString\r\n","/**\r\n * Object 对象原型上的 toString 方法\r\n * ========================================================================\r\n * @method toString\r\n * @param {*} val\r\n * @returns {string}\r\n */\r\nconst toString = (val) => {\r\n  return Object.prototype.toString.apply(val)\r\n}\r\n\r\nexport default toString\r\n","import toString from '../lang/toString'\r\n\r\n/**\r\n * 检测测试数据是否为 Function 类型\r\n * ========================================================================\r\n * @method isFunction\r\n * @param {*} val - （必须）待检测的数据\r\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\r\n */\r\nconst isFunction = (val) => {\r\n  return typeof val === 'function' || toString(val) === '[object Function]'\r\n}\r\n\r\nexport default isFunction\r\n","import toString from '../lang/toString'\r\nimport isFunction from './isFunction'\r\n\r\n/**\r\n * 检测数据是否为 Object 类型\r\n * ========================================================================\r\n * @method isObject\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isObject = (o) => {\r\n  return (\r\n    (toString(o) === '[object Object]' ||\r\n      typeof o === 'object' ||\r\n      isFunction(o)) &&\r\n    o !== null\r\n  )\r\n}\r\n\r\nexport default isObject\r\n","import isObject from './isObject'\r\n\r\n/**\r\n * 检测数据是否为 HTMLElement DOM 节点\r\n * ========================================================================\r\n * @method isElement\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isElement = (o) => {\r\n  return !!(isObject(o) && o.nodeName && o.tagName && o.nodeType === 1)\r\n}\r\n\r\nexport default isElement\r\n","import toString from '../lang/toString'\r\n\r\n/**\r\n * 检测数据是否为 Array 类型\r\n * ========================================================================\r\n * @method isArray\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isArray = (o) => {\r\n  if (Array.isArray) {\r\n    return Array.isArray(o)\r\n  } else {\r\n    return toString(o) === '[object Array]'\r\n  }\r\n}\r\n\r\nexport default isArray\r\n","import isObject from '../types/isObject'\r\nimport isArray from '../types/isArray'\r\n\r\n/**\r\n * 深拷贝对象函数\r\n * ========================================================================\r\n * @methods cloneDeep\r\n * @param {Object} obj - 深拷贝的对象\r\n * @returns {Array|Object|*}\r\n *\r\n * @example\r\n * const arr = cloneDeep([2,3,4,6])\r\n * => [2,3,4,6]\r\n */\r\nconst cloneDeep = (obj) => {\r\n  let clone = {}\r\n\r\n  if (obj === null) {\r\n    return null\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    clone = Array.from(obj)\r\n  } else {\r\n    clone = Object.assign({}, obj)\r\n    Object.keys(clone).forEach((key) => {\r\n      return (clone[key] = isObject(obj[key]) ? cloneDeep(obj[key]) : obj[key])\r\n    })\r\n  }\r\n\r\n  return clone\r\n}\r\n\r\nexport default cloneDeep\r\n","import isFunction from '../types/isFunction'\r\n\r\n/**\r\n * later - 延迟执行方法\r\n * ========================================================================\r\n * @method later\r\n * @param {Function} fn\r\n * @param {Number} [delay]\r\n * @returns {number|boolean}\r\n */\r\nconst later = (fn, delay = 300) => {\r\n  if (!isFunction(fn)) {\r\n    return false\r\n  }\r\n\r\n  return setTimeout(() => {\r\n    fn()\r\n  }, delay)\r\n}\r\n\r\nexport default later\r\n","/**\r\n * timeSlice.js 时间切片功能函数\r\n * ====================================================\r\n * Created By: Yaohaixiao\r\n * Update: 2023.09.04\r\n */\r\nimport isFunction from '../types/isFunction'\r\nimport later from './later'\r\n\r\nconst queue = []\r\nlet isHandling\r\nlet done\r\n\r\n// Shim from https://developers.google.com/web/updates/2015/08/using-requestidlecallback\r\nif (typeof window.requestIdleCallback === 'undefined') {\r\n  window.requestIdleCallback = function (cb) {\r\n    const start = Date.now()\r\n    return later(function () {\r\n      cb({\r\n        didTimeout: false,\r\n        timeRemaining: function () {\r\n          return Math.max(0, 50 - (Date.now() - start))\r\n        }\r\n      })\r\n    }, 10)\r\n  }\r\n\r\n  window.cancelIdleCallback = function (id) {\r\n    clearTimeout(id)\r\n  }\r\n}\r\n\r\nfunction runIdle(idleDeadline) {\r\n  while (idleDeadline.timeRemaining() > 0 && queue.length) {\r\n    const fn = queue.shift()\r\n\r\n    if (!isFunction(fn)) {\r\n      return false\r\n    }\r\n\r\n    fn()\r\n  }\r\n\r\n  if (queue.length) {\r\n    isHandling = requestIdleCallback(runIdle)\r\n  } else {\r\n    isHandling = 0\r\n\r\n    if (isFunction(done)) {\r\n      done()\r\n      done = null\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 时间切片功能函数：主要用于优化长时任务的性能，将长时任务分解成\r\n * 多个短时间任务\r\n * ====================================================\r\n * @param {Function} fn - 需要在空闲时执行的回调函数\r\n * @param {Function} afterComplete - queen 的\r\n * @return {(function(): (boolean|undefined))|*|boolean}\r\n */\r\nconst timeSlice = (fn, afterComplete = null) => {\r\n  queue.push(fn)\r\n\r\n  if (isFunction(afterComplete)) {\r\n    done = afterComplete\r\n  }\r\n\r\n  if (!isHandling) {\r\n    requestIdleCallback(runIdle)\r\n  }\r\n}\r\n\r\nexport default timeSlice\r\n","/**\r\n * 返回给定值的平方值\r\n * ========================================================================\r\n * @method easeInQuad\r\n * @param {Number} x\r\n * @returns {number}\r\n */\r\nconst easeInQuad = (x) => {\r\n  return x * x\r\n}\r\n\r\nexport default easeInQuad\r\n","import isString from '../types/isString'\r\nimport isElement from '../types/isElement'\r\n\r\n/**\r\n * 通过给的 scrollElement 参数，获取滚动 DOM 元素\r\n * ========================================================================\r\n * @method _getScrollElement\r\n * @param {String|HTMLElement} scrollElement\r\n * @returns {Element}\r\n * @private\r\n */\r\nconst _getScrollElement = (scrollElement = null) => {\r\n  let $rootElements\r\n  let $scrollElement\r\n\r\n  if (!scrollElement) {\r\n    $rootElements = document.querySelectorAll('html,body')\r\n    $scrollElement =\r\n      $rootElements[0].scrollTop - $rootElements[1].scrollTop >= 0\r\n        ? $rootElements[0]\r\n        : $rootElements[1]\r\n  } else {\r\n    if (isString(scrollElement)) {\r\n      $scrollElement = document.querySelector(scrollElement)\r\n    } else if (isElement(scrollElement)) {\r\n      $scrollElement = scrollElement\r\n    }\r\n  }\r\n\r\n  return $scrollElement\r\n}\r\n\r\nexport default _getScrollElement\r\n","/**\r\n * 获取 DOM 节点相对于窗口的 left （纵坐标）值\r\n * ========================================================================\r\n * @method offsetTop\r\n * @param {HTMLElement} el - DOM 节点\r\n * @returns {Number}\r\n */\r\nconst offsetTop = (el) => {\r\n  let top = el.offsetTop\r\n\r\n  if (el.offsetParent !== null) {\r\n    top += offsetTop(el.offsetParent)\r\n  }\r\n\r\n  return top\r\n}\r\n\r\nexport default offsetTop\r\n","/**\r\n * 获取 options 节点下匹配 selector 选择器的 DOM 节点\r\n * ========================================================================\r\n * Element.matches() 方法可以用来判断 DOM 元素是否与给定的选择器匹配，事件代理判断是\r\n * 否触发绑定的代理事件回调函数，关键就是使用 Element.matches() 辨别当前事件触发的目\r\n * 标 DOM 元素是否为事件代理所期望触发的目标。\r\n * ========================================================================\r\n * @method matches\r\n * @see https://developer.mozilla.org/en-US/docs/web/api/element/matches\r\n * @param {HTMLElement} el - （必须）DOM 元素\r\n * @param {String} selector - （必须）匹配 DOM 元素的选择器\r\n * @returns {Boolean}\r\n */\r\nconst matches = (el, selector = '') => {\r\n  const sel = selector.replace(/^>/i, '')\r\n\r\n  if (!selector || !sel || !el) {\r\n    return false\r\n  }\r\n\r\n  /* istanbul ignore else */\r\n  if (el.matches) {\r\n    return el.matches(sel)\r\n  } else if (el.msMatchesSelector) {\r\n    return el.msMatchesSelector(sel)\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport default matches\r\n","/**\r\n * 获取 DOM 元素的父节点\r\n * ========================================================================\r\n * @method getParentOrHost\r\n * @param {*|HTMLElement} el - （必须）要获取父节点的 DOM 元素\r\n * @returns {*|HTMLElement}\r\n */\r\nconst getParentOrHost = (el) => {\r\n  return el.host && el !== document && el.host.nodeType\r\n    ? el.host\r\n    : el.parentNode\r\n}\r\n\r\nexport default getParentOrHost\r\n","export const CAPTURE_EVENTS = [\r\n  'focusout',\r\n  'blur',\r\n  'focusin',\r\n  'focus',\r\n  'load',\r\n  'unload',\r\n  'mouseenter',\r\n  'mouseleave'\r\n]\r\n","import { CAPTURE_EVENTS } from './enum'\r\nimport _delete from './_delete'\r\n\r\n/**\r\n * （私有方法）取消 type 类型的代理事件绑定\r\n * ========================================================================\r\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\r\n * ========================================================================\r\n * @method _off\r\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\r\n * @param {String} type - （必须）事件类型\r\n * @param {Function} fn - （必须）事件处理器回调函数\r\n * @private\r\n */\r\nconst _off = (el, type, fn) => {\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n\r\n  /* istanbul ignore else */\r\n  if (fn._delegateListener) {\r\n    fn = fn._delegateListener\r\n    delete fn._delegateListener\r\n  }\r\n\r\n  // 移除缓存的 _listeners 数据\r\n  _delete(el, type, fn)\r\n\r\n  el.removeEventListener(type, fn, capture)\r\n}\r\n\r\nexport default _off\r\n","/**\r\n * 删除 DOM 元素缓存的 _listeners 数据\r\n * ========================================================================\r\n * @method _delete\r\n * @param {HTMLElement} el - 要删除 listener 的 DOM 元素\r\n * @param {String} type - 事件类型（名称）\r\n * @param {Function} [fn] - 事件处理器回调函数\r\n */\r\nconst _delete = function (el, type, fn) {\r\n  const listeners = el._listeners\r\n  let index = -1\r\n\r\n  if (listeners.length < 1) {\r\n    return false\r\n  }\r\n\r\n  // 移除缓存的 _listeners 数据\r\n  listeners.forEach((listener, i) => {\r\n    const handler = listener.fn\r\n\r\n    if (type === listener.type) {\r\n      index = i\r\n\r\n      if (handler === fn) {\r\n        index = i\r\n      }\r\n    }\r\n  })\r\n\r\n  /* istanbul ignore else */\r\n  if (index > -1) {\r\n    listeners.splice(index, 1)\r\n  }\r\n}\r\n\r\nexport default _delete\r\n","import isString from '../types/isString'\r\nimport isElement from '../types/isElement'\r\nimport getListeners from './getListeners'\r\nimport _off from './_off'\r\n\r\n/**\r\n * 销毁（type 类型的）代理事件绑定\r\n * ========================================================================\r\n * 1. 设置了事件类型 type，则销毁指定类型的事件绑定，否则清除所有代理事件绑定\r\n * 2. recurse 设置为 true，递归销毁子节点全部事件绑定\r\n * ========================================================================\r\n * @method purgeElement\r\n * @param {HTMLElement|String} el - （必须）DOM 元素或者其选择器\r\n * @param {String|Boolean} type - （必须）事件类型\r\n * @param {Boolean} [recurse] - （可选）是否递归销毁子节点所有事件绑定\r\n */\r\nconst purgeElement = function (el, type, recurse = false) {\r\n  const $element = isString(el) ? document.querySelector(el) : el\r\n  const $children = $element.childNodes\r\n  const listeners = getListeners($element, type)\r\n\r\n  listeners.forEach((listener) => {\r\n    _off($element, listener.type, listener.fn)\r\n  })\r\n\r\n  if (\r\n    (recurse || type === true || arguments.length === 1) &&\r\n    $element &&\r\n    $children\r\n  ) {\r\n    $children.forEach(($child) => {\r\n      if (isElement($child)) {\r\n        purgeElement($child, type, recurse)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default purgeElement\r\n","import isString from '../types/isString'\r\n\r\n/**\r\n * 获取 DOM 元素（type 事件类型）事件绑定信息\r\n * ========================================================================\r\n * 如果设置了事件类型 type， 则返回指定类型的事件绑定信息，否则返回所有事件绑定信息\r\n * ========================================================================\r\n * @methods getListeners\r\n * @param {HTMLElement} el - （必须）要获取事件绑定信息的 DOM 元素\r\n * @param {String} [type] - （可选）事件类型\r\n * @returns {Array} - 已绑定的事件信息\r\n */\r\nconst getListeners = (el, type) => {\r\n  let listeners = el._listeners || []\r\n\r\n  if (isString(type) && type) {\r\n    listeners = listeners.filter((listener) => {\r\n      return listener.type === type\r\n    })\r\n  }\r\n\r\n  return listeners\r\n}\r\n\r\nexport default getListeners\r\n","import purgeElement from './purgeElement'\r\nimport isFunction from '../types/isFunction'\r\nimport _off from './_off'\r\n\r\n/**\r\n * 取消 type 类型的代理事件绑定\r\n * ========================================================================\r\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\r\n * ========================================================================\r\n * @method off\r\n * @param {HTMLElement|Object} el - （必须）取消事件绑定的 DOM 元素\r\n * @param {String} type - （必须）事件类型\r\n * @param {Function} [fn] - （可选）事件处理器回调函数\r\n */\r\nconst off = (el, type, fn) => {\r\n  // 如果不设置 fn 参数，默认清除 el 元素上绑定的所有事件处理器\r\n  if (!isFunction(fn)) {\r\n    purgeElement(el, type)\r\n    return false\r\n  }\r\n\r\n  _off(el, type, fn)\r\n}\r\n\r\nexport default off\r\n","import closest from '../dom/closest'\r\nimport off from './off'\r\nimport getTarget from './getTarget'\r\n\r\nimport { CAPTURE_EVENTS } from './enum'\r\n\r\n/**\r\n * 绑定代理事件\r\n * ========================================================================\r\n * @method on\r\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\r\n * @param {String} selector - （必须）事件代理目标 DOM 元素的选择器\r\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\r\n * @param {Function|Object} fn - （可选） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\r\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\r\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\r\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\r\n * @param {Boolean} once - （可选）是否仅触发一次\r\n */\r\nconst on = (el, selector, type, fn, data, context, once = false) => {\r\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n\r\n  const listener = function (evt) {\r\n    const target = getTarget(evt)\r\n    // 通过 Element.matches 方法获得点击的目标元素\r\n    const delegateTarget = closest(target, selector, el)\r\n    let overrideContext = context || el\r\n\r\n    evt.delegateTarget = delegateTarget\r\n\r\n    // 当设置为 true 时，则事件处理器回调函数的\r\n    // this 上下文指向为 data 对象\r\n    if (context === true) {\r\n      overrideContext = data\r\n    }\r\n\r\n    /* istanbul ignore else */\r\n    if (delegateTarget) {\r\n      // 仅触发一次\r\n      /* istanbul ignore else */\r\n      if (once === true) {\r\n        off(el, type, listener)\r\n      }\r\n\r\n      fn.call(overrideContext, evt, data)\r\n    }\r\n  }\r\n\r\n  if (!el) {\r\n    return false\r\n  }\r\n\r\n  if (!el._listeners) {\r\n    el._listeners = []\r\n  }\r\n\r\n  // 缓存 options 元素绑定的事件处理器\r\n  el._listeners.push({\r\n    el,\r\n    selector,\r\n    type,\r\n    fn: listener,\r\n    data,\r\n    context,\r\n    capture\r\n  })\r\n\r\n  // 缓存包装后的事件处理器\r\n  fn._delegateListener = listener\r\n\r\n  el.addEventListener(type, listener, capture)\r\n}\r\n\r\nexport default on\r\n","import resolveTextNode from '../dom/resolveTextNode'\r\n\r\n/**\r\n * 返回触发事件的 target DOM 元素\r\n * ========================================================================\r\n * @method getTarget\r\n * @param {Event} evt - Event 对象\r\n * @return {HTMLElement} - Event 对象的 target DOM 元素\r\n */\r\nconst getTarget = function (evt) {\r\n  const target = evt.target\r\n\r\n  return resolveTextNode(target)\r\n}\r\n\r\nexport default getTarget\r\n","/**\r\n * 在某些情况下，某些浏览器（例如：Safari 浏览器）会返回实际的目标元素内部的文本节点。\r\n * resolveTextNode() 方法则会返回实际的目标节点。\r\n * ========================================================================\r\n * @method resolveTextNode\r\n * @param {HTMLElement|Text} el - 要解析的节点\r\n * @return {*|HTMLElement} - 实际的目标 DOM 节点\r\n */\r\nconst resolveTextNode = function (el) {\r\n  if (el && el.nodeType === 3) {\r\n    return el.parentNode\r\n  }\r\n\r\n  return el\r\n}\r\n\r\nexport default resolveTextNode\r\n","import matches from './matches'\r\nimport getParentOrHost from './getParentOrHost'\r\n\r\n/**\r\n * 获取 options 元素父元素最近的包含 selector 选择器的元素\r\n * ========================================================================\r\n * @method closest\r\n * @param {HTMLElement} el - （必须）DOM 元素\r\n * @param {String} selector - （必须）DOM 元素的选择其\r\n * @param {HTMLElement} [ctx] - （必须）比对的 DOM 元素\r\n * @param {Boolean} [includeCTX] - （必须）是否包含 context DOM 元素\r\n * @returns {null|HTMLElement} - 返回最接近的 DOM 元素\r\n */\r\nconst closest = (el, selector, ctx, includeCTX) => {\r\n  const context = ctx || document\r\n\r\n  if (!el) {\r\n    return null\r\n  }\r\n\r\n  do {\r\n    /* istanbul ignore else */\r\n    if (\r\n      (selector != null &&\r\n        (selector.startsWith('>')\r\n          ? el.parentNode === context && matches(el, selector)\r\n          : matches(el, selector))) ||\r\n      (includeCTX && el === context)\r\n    ) {\r\n      return el\r\n    }\r\n\r\n    /* istanbul ignore else */\r\n    if (el === context) {\r\n      break\r\n    }\r\n\r\n    /* jshint boss:true */\r\n  } while ((el = getParentOrHost(el)))\r\n}\r\n\r\nexport default closest\r\n","import DEFAULTS from './defaults'\r\n\r\nconst SYMBOLS = [...DEFAULTS]\r\n\r\nexport default SYMBOLS\r\n","const DEFAULTS = [\r\n  '<symbol id=\"outline-icon-up\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 261.696c0.832-0.448 1.536-1.216 2.368-1.536a38.72 38.72 0 0 1 46.08 8.256l277.824 302.272a41.92 41.92 0 0 1-1.536 58.048 39.104 39.104 0 0 1-56.448-1.6L513.728 355.904 260.736 626.048a39.104 39.104 0 0 1-56.448 1.088 41.6 41.6 0 0 1-1.088-57.984L483.84 269.696c0.512-0.512 1.344-0.768 1.92-1.408l1.088-1.344c2.368-2.496 5.312-3.648 8-5.248z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-down\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 762.304c0.832 0.448 1.536 1.216 2.368 1.536 15.232 7.488 33.92 4.992 46.08-8.256l277.824-302.272a41.92 41.92 0 0 0-1.536-58.048 39.104 39.104 0 0 0-56.448 1.6l-249.344 271.232-252.992-270.144a39.104 39.104 0 0 0-56.448-1.088 41.6 41.6 0 0 0-1.088 57.984l280.576 299.456c0.512 0.512 1.344 0.768 1.92 1.408l1.088 1.344c2.368 2.496 5.312 3.648 8 5.248z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-menu\" viewBox=\"0 0 1024 1024\"><path d=\"M320 256h640V128H320zM320 576h640V448H320zM320 896h640v-128H320zM64 256h128V128H64zM64 576h128V448H64zM64 896h128v-128H64z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-file\" viewBox=\"0 0 1024 1024\"><path d=\"M320 640h256v128H320z\"></path><path d=\"M320 448h384v128H320z\"></path><path d=\"M640 0l320 320v557.696C960 958.528 909.824 1024 848 1024H176C114.176 1024 64 958.528 64 877.696V146.304C64 65.472 114.176 0 176 0H640z m0 128H192v768h640V320h-192V128z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-hash\" viewBox=\"0 0 24 24\"><path d=\"M14.216 10l-0.444 4h-3.988l0.444-4zM15.006 2.89l-0.568 5.11h-3.988l0.543-4.89c0.061-0.549-0.335-1.043-0.883-1.104s-1.043 0.335-1.104 0.884l-0.568 5.11h-4.438c-0.552 0-1 0.448-1 1s0.448 1 1 1h4.216l-0.444 4h-3.772c-0.552 0-1 0.448-1 1s0.448 1 1 1h3.549l-0.543 4.89c-0.061 0.549 0.335 1.043 0.883 1.104s1.043-0.335 1.104-0.883l0.569-5.111h3.988l-0.543 4.89c-0.061 0.549 0.335 1.043 0.883 1.104s1.043-0.335 1.104-0.883l0.568-5.111h4.438c0.552 0 1-0.448 1-1s-0.448-1-1-1h-4.216l0.444-4h3.772c0.552 0 1-0.448 1-1s-0.448-1-1-1h-3.549l0.543-4.89c0.061-0.549-0.335-1.043-0.883-1.104s-1.043 0.335-1.104 0.883z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-close\" viewBox=\"0 0 1024 1024\"><path d=\"M536.96 491.648L310.592 265.344a32 32 0 1 0-45.248 45.248L491.584 536.96l-226.304 226.304a32 32 0 0 0 45.312 45.248l226.24-226.304 226.304 226.304a32 32 0 0 0 45.248-45.248L582.144 536.896l226.304-226.24a32 32 0 0 0-45.248-45.248L536.896 491.584z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-homepage\" viewBox=\"0 0 26 28\"><path d=\"M22 15.5v7.5c0 0.547-0.453 1-1 1h-6v-6h-4v6h-6c-0.547 0-1-0.453-1-1v-7.5c0-0.031 0.016-0.063 0.016-0.094l8.984-7.406 8.984 7.406c0.016 0.031 0.016 0.063 0.016 0.094zM25.484 14.422l-0.969 1.156c-0.078 0.094-0.203 0.156-0.328 0.172h-0.047c-0.125 0-0.234-0.031-0.328-0.109l-10.813-9.016-10.813 9.016c-0.109 0.078-0.234 0.125-0.375 0.109-0.125-0.016-0.25-0.078-0.328-0.172l-0.969-1.156c-0.172-0.203-0.141-0.531 0.063-0.703l11.234-9.359c0.656-0.547 1.719-0.547 2.375 0l3.813 3.187v-3.047c0-0.281 0.219-0.5 0.5-0.5h3c0.281 0 0.5 0.219 0.5 0.5v6.375l3.422 2.844c0.203 0.172 0.234 0.5 0.063 0.703z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-github\" viewBox=\"0 0 24 28\"><path d=\"M12 2c6.625 0 12 5.375 12 12 0 5.297-3.437 9.797-8.203 11.391-0.609 0.109-0.828-0.266-0.828-0.578 0-0.391 0.016-1.687 0.016-3.297 0-1.125-0.375-1.844-0.812-2.219 2.672-0.297 5.484-1.313 5.484-5.922 0-1.313-0.469-2.375-1.234-3.219 0.125-0.313 0.531-1.531-0.125-3.187-1-0.313-3.297 1.234-3.297 1.234-0.953-0.266-1.984-0.406-3-0.406s-2.047 0.141-3 0.406c0 0-2.297-1.547-3.297-1.234-0.656 1.656-0.25 2.875-0.125 3.187-0.766 0.844-1.234 1.906-1.234 3.219 0 4.594 2.797 5.625 5.469 5.922-0.344 0.313-0.656 0.844-0.766 1.609-0.688 0.313-2.438 0.844-3.484-1-0.656-1.141-1.844-1.234-1.844-1.234-1.172-0.016-0.078 0.734-0.078 0.734 0.781 0.359 1.328 1.75 1.328 1.75 0.703 2.141 4.047 1.422 4.047 1.422 0 1 0.016 1.937 0.016 2.234 0 0.313-0.219 0.688-0.828 0.578-4.766-1.594-8.203-6.094-8.203-11.391 0-6.625 5.375-12 12-12zM4.547 19.234c0.031-0.063-0.016-0.141-0.109-0.187-0.094-0.031-0.172-0.016-0.203 0.031-0.031 0.063 0.016 0.141 0.109 0.187 0.078 0.047 0.172 0.031 0.203-0.031zM5.031 19.766c0.063-0.047 0.047-0.156-0.031-0.25-0.078-0.078-0.187-0.109-0.25-0.047-0.063 0.047-0.047 0.156 0.031 0.25 0.078 0.078 0.187 0.109 0.25 0.047zM5.5 20.469c0.078-0.063 0.078-0.187 0-0.297-0.063-0.109-0.187-0.156-0.266-0.094-0.078 0.047-0.078 0.172 0 0.281s0.203 0.156 0.266 0.109zM6.156 21.125c0.063-0.063 0.031-0.203-0.063-0.297-0.109-0.109-0.25-0.125-0.313-0.047-0.078 0.063-0.047 0.203 0.063 0.297 0.109 0.109 0.25 0.125 0.313 0.047zM7.047 21.516c0.031-0.094-0.063-0.203-0.203-0.25-0.125-0.031-0.266 0.016-0.297 0.109s0.063 0.203 0.203 0.234c0.125 0.047 0.266 0 0.297-0.094zM8.031 21.594c0-0.109-0.125-0.187-0.266-0.172-0.141 0-0.25 0.078-0.25 0.172 0 0.109 0.109 0.187 0.266 0.172 0.141 0 0.25-0.078 0.25-0.172zM8.937 21.438c-0.016-0.094-0.141-0.156-0.281-0.141-0.141 0.031-0.234 0.125-0.219 0.234 0.016 0.094 0.141 0.156 0.281 0.125s0.234-0.125 0.219-0.219z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-issues\" viewBox=\"0 0 24 28\"><path d=\"M25.5 15c0 0.547-0.453 1-1 1h-3.5c0 1.953-0.422 3.422-1.047 4.531l3.25 3.266c0.391 0.391 0.391 1.016 0 1.406-0.187 0.203-0.453 0.297-0.703 0.297s-0.516-0.094-0.703-0.297l-3.094-3.078s-2.047 1.875-4.703 1.875v-14h-2v14c-2.828 0-4.891-2.063-4.891-2.063l-2.859 3.234c-0.203 0.219-0.469 0.328-0.75 0.328-0.234 0-0.469-0.078-0.672-0.25-0.406-0.375-0.438-1-0.078-1.422l3.156-3.547c-0.547-1.078-0.906-2.469-0.906-4.281h-3.5c-0.547 0-1-0.453-1-1s0.453-1 1-1h3.5v-4.594l-2.703-2.703c-0.391-0.391-0.391-1.016 0-1.406s1.016-0.391 1.406 0l2.703 2.703h13.188l2.703-2.703c0.391-0.391 1.016-0.391 1.406 0s0.391 1.016 0 1.406l-2.703 2.703v4.594h3.5c0.547 0 1 0.453 1 1zM18 6h-10c0-2.766 2.234-5 5-5s5 2.234 5 5z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-tags\" viewBox=\"0 0 26 28\"><path d=\"M7 7c0-1.109-0.891-2-2-2s-2 0.891-2 2 0.891 2 2 2 2-0.891 2-2zM23.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578s-1.047-0.219-1.406-0.578l-11.172-11.188c-0.797-0.781-1.422-2.297-1.422-3.406v-6.5c0-1.094 0.906-2 2-2h6.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422zM29.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578-0.812 0-1.219-0.375-1.75-0.922l7.344-7.344c0.359-0.359 0.578-0.875 0.578-1.406s-0.219-1.047-0.578-1.422l-11.172-11.156c-0.797-0.797-2.312-1.422-3.422-1.422h3.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-print\" viewBox=\"0 0 24 24\"><path d=\"M18 3v3.984h-12v-3.984h12zM18.984 12q0.422 0 0.727-0.281t0.305-0.703-0.305-0.727-0.727-0.305-0.703 0.305-0.281 0.727 0.281 0.703 0.703 0.281zM15.984 18.984v-4.969h-7.969v4.969h7.969zM18.984 8.016q1.219 0 2.109 0.891t0.891 2.109v6h-3.984v3.984h-12v-3.984h-3.984v-6q0-1.219 0.891-2.109t2.109-0.891h13.969z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-info\" viewBox=\"0 0 1024 1024\"><path d=\"M512 384.295982a95.994 95.994 0 0 1 95.994 95.994V928.006a95.994 95.994 0 0 1-191.988 0V480.289982a95.994 95.994 0 0 1 95.994-95.994z m0-128.375977A127.992 127.992 0 1 1 512 0.063996a127.992 127.992 0 0 1 0 255.984001z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-warning\" viewBox=\"0 0 1024 1024\"><path d=\"M512 639.704018a95.994 95.994 0 0 1-95.994-95.994V95.994a95.994 95.994 0 0 1 191.988 0v447.716018a95.994 95.994 0 0 1-95.994 95.994z m0 128.375977A127.992 127.992 0 1 1 512 1023.936004a127.992 127.992 0 0 1 0-255.984001z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-error\" viewBox=\"0 0 1024 1024\"><path d=\"M512.64 376.96L263.744 128 128 263.744l248.96 248.96L128 761.472l135.744 135.808 248.96-248.96 248.832 248.96 135.808-135.808-248.96-248.896 248.96-248.896L761.536 128 512.64 376.96z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-success\" viewBox=\"0 0 1024 1024\"><path d=\"M426.368 580.864l-226.56-226.56L64 489.984l362.048 362.112 0.32-0.32 0.32 0.32 588.288-588.352L879.36 128 426.304 580.864z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-circle-info\" viewBox=\"0 0 1024 1024\"><path d=\"M512 810.666667s-42.666667 4.266667-42.666667-42.666667v-341.333333c0-46.933333 42.666667-42.666667 42.666667-42.666667s42.666667-4.266667 42.666667 42.666667v341.333333c0 46.933333-42.666667 42.666667-42.666667 42.666667z m0 213.333333C228.949333 1024 0 795.050667 0 512S228.949333 0 512 0s512 228.949333 512 512-229.674667 512-512 512z m0-938.666667C276.608 85.333333 85.333333 276.608 85.333333 512s191.274667 426.666667 426.666667 426.666667 426.666667-191.274667 426.666667-426.666667S747.392 85.333333 512 85.333333z m0 213.333334c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666667 42.666667 19.2 42.666667 42.666667-19.2 42.666667-42.666667 42.666667z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-circle-warning\" viewBox=\"0 0 1024 1024\"><path d=\"M512 213.333333s-42.666667-4.266667-42.666667 42.666667v341.333333c0 46.933333 42.666667 42.666667 42.666667 42.666667s42.666667 4.266667 42.666667-42.666667V256c0-46.933333-42.666667-42.666667-42.666667-42.666667z m0-213.333333C228.949333 0 0 228.949333 0 512s228.949333 512 512 512 512-228.949333 512-512S794.325333 0 512 0z m0 938.666667C276.608 938.666667 85.333333 747.392 85.333333 512S276.608 85.333333 512 85.333333s426.666667 191.274667 426.666667 426.666667-191.274667 426.666667-426.666667 426.666667z m0-213.333334c-23.466667 0-42.666667 19.2-42.666667 42.666667s19.2 42.666667 42.666667 42.666667 42.666667-19.2 42.666667-42.666667-19.2-42.666667-42.666667-42.666667z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-circle-error\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0a512 512 0 1 0 512 512 512 512 0 0 0-512-512z m0 955.776A443.84 443.84 0 0 1 512 68.224a443.904 443.904 0 0 1 0 887.552z\"></path><path d=\"M641.664 326.144a32 32 0 0 1 50.304 39.168l-3.52 4.48-306.112 328.064a32 32 0 0 1-50.304-39.168l3.52-4.48 306.112-328.064z\"></path><path d=\"M324.608 337.088a32 32 0 0 1 40.704-5.12l4.48 3.584 328.064 306.112a32 32 0 0 1-39.168 50.304l-4.48-3.52-328.064-306.112a32 32 0 0 1-1.536-45.248z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-circle-success\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0C228.949333 0 0 228.949333 0 512s228.949333 512 512 512 512-228.949333 512-512S794.325333 0 512 0z m0 950.869333C269.909333 950.869333 73.130667 754.090667 73.130667 512 73.130667 269.909333 269.909333 73.130667 512 73.130667c242.090667 0 438.869333 196.778667 438.869333 438.869333 0 242.090667-196.778667 438.869333-438.869333 438.869333z\"></path><path d=\"M737.834667 353.834667a42.666667 42.666667 0 0 1 63.872 56.32l-3.541334 4.010666L486.997333 725.333333a85.333333 85.333333 0 0 1-115.242666 4.992L366.336 725.333333l-140.501333-140.501333a42.666667 42.666667 0 0 1 56.32-63.872l4.010666 3.541333L426.666667 665.002667l311.168-311.168z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-sound\" viewBox=\"0 0 16 16\"><path d=\"M12.757 4.708c-0.406 0.405-1.062 0.405-1.468 0s-0.405-1.062 0-1.468l2.935-2.935c0.406-0.405 1.062-0.405 1.468 0 0.405 0.405 0.405 1.062 0 1.468l-2.935 2.935zM7.996 15.991l-3.996-3.996h-2.997c-0.552 0-0.999-0.447-0.999-0.999v-5.994c0-0.552 0.447-0.999 0.999-0.999h2.997l3.996-3.996c0 0 0.999-0.125 0.999 0.999 0 5.976 0 14.966 0 13.985 0 1.124-0.999 0.999-0.999 0.999zM6.997 4.004l-1.998 1.998h-2.997v3.996h2.997l1.998 1.998v-7.992zM11.992 8.999c-0.552 0-0.999-0.447-0.999-0.999s0.447-0.999 0.999-0.999h2.997c0.552 0 0.999 0.447 0.999 0.999s-0.447 0.999-0.999 0.999h-2.997zM12.757 11.292l2.935 2.935c0.405 0.406 0.405 1.063 0 1.468s-1.062 0.405-1.468 0l-2.935-2.935c-0.405-0.406-0.405-1.063 0-1.468s1.062-0.405 1.468 0z\"></path></symbol>'\r\n]\r\n\r\nexport default DEFAULTS\r\n","import isString from '../types/isString'\r\nimport getSymbol from './getSymbol'\r\nimport SYMBOLS from './symbols'\r\n\r\n/**\r\n *\r\n * @method getSymbols\r\n * @param {String} [name]\r\n * @param {String} [iconSet]\r\n * @returns {string[]|*}\r\n */\r\nconst getSymbols = (name, iconSet = 'icon') => {\r\n  if (isString(name)) {\r\n    return getSymbol(name, iconSet)\r\n  }\r\n\r\n  return [...SYMBOLS]\r\n}\r\n\r\nexport default getSymbols\r\n","import SYMBOLS from './symbols'\r\n\r\n/**\r\n * @method getSymbol\r\n * @param {String} name\r\n * @param {String} [iconSet]\r\n * @returns {String}\r\n */\r\nconst getSymbol = (name, iconSet = 'icon') => {\r\n  const patternName = /id=\"(.*?)\"/\r\n  const patternSet = /^(\\w+)-/\r\n  const symbols = SYMBOLS\r\n\r\n  return symbols.find((symbol) => {\r\n    const names = patternName.exec(symbol)\r\n    const fullName = names[1]\r\n    const sets = patternSet.exec(fullName)\r\n    const setName = sets[1]\r\n    const iconName =\r\n      iconSet === 'icon' ? `${iconSet}-${name}` : `${iconSet}-icon-${name}`\r\n\r\n    return setName === iconSet && fullName === iconName\r\n  })\r\n}\r\n\r\nexport default getSymbol\r\n","import add from './add'\r\nimport getSymbols from './getSymbols'\r\n\r\n/**\r\n * 绘制 SVG 图标集\r\n * ========================================================================\r\n * @method paint\r\n * @param {String|Array} symbol\r\n */\r\nconst paint = (symbol = '') => {\r\n  const $body = document.body\r\n  let $icons = document.querySelector('#outline-icons')\r\n  let symbols = []\r\n\r\n  add(symbol)\r\n  symbols = getSymbols()\r\n\r\n  if ($icons) {\r\n    $icons.innerHTML = symbols.join('')\r\n  } else {\r\n    $icons = document.createElement('div')\r\n    $icons.innerHTML =\r\n      `<svg id=\"outline-icons\" aria-hidden=\"true\" style=\"position:absolute;display:none;width:0;height:0;overflow:hidden;\">` +\r\n      `${symbols.join('')}` +\r\n      `</svg>`\r\n    $body.insertBefore($icons.firstChild, $body.firstChild)\r\n  }\r\n}\r\n\r\nexport default paint\r\n","import isArray from '../types/isArray'\r\nimport isString from '../types/isString'\r\nimport SYMBOLS from './symbols'\r\n\r\n/**\r\n * @method add\r\n * @param {Array|String} symbols\r\n * @return {Boolean}\r\n */\r\nconst add = (symbols) => {\r\n  if (!symbols) {\r\n    return false\r\n  }\r\n\r\n  if (isArray(symbols) && symbols.length > 0) {\r\n    symbols.forEach((symbol) => {\r\n      /* istanbul ignore else */\r\n      if (SYMBOLS.indexOf(symbol) === -1 && isString(symbol)) {\r\n        SYMBOLS.push(symbol)\r\n      }\r\n    })\r\n  } else {\r\n    /* istanbul ignore else */\r\n    if (isString(symbols)) {\r\n      SYMBOLS.push(symbols)\r\n    }\r\n  }\r\n}\r\n\r\nexport default add\r\n","import isString from '../types/isString'\r\n\r\n/**\r\n * 清楚字符串起始位置所有的空格\r\n * ========================================================================\r\n * @method trim\r\n * @param {string} str\r\n * @returns {string|Boolean}\r\n */\r\nconst trim = (str) => {\r\n  if (!isString(str)) {\r\n    return false\r\n  }\r\n  return str.replace(/(^\\s+)|(\\s+$)/g, '')\r\n}\r\n\r\nexport default trim\r\n","import isObject from './isObject'\r\nimport isElement from './isElement'\r\nimport isHTMLCollection from './isHTMLCollection'\r\nimport isFragment from './isFragment'\r\nimport isTextNode from './isTextNode'\r\n\r\nconst isDOM = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (isElement(el) || isHTMLCollection(el) || isFragment(el) || isTextNode(el))\r\n  )\r\n}\r\n\r\nexport default isDOM\r\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isHTMLCollection = (el) => {\r\n  return !!(isObject(el) && toString(el) === '[object NodeList]')\r\n}\r\n\r\nexport default isHTMLCollection\r\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isFragment = (fragment) => {\r\n  return !!(\r\n    isObject(fragment) && toString(fragment) === '[object DocumentFragment]'\r\n  )\r\n}\r\n\r\nexport default isFragment\r\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isTextNode = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (toString(el) === '[object Text]' || (el.tagName && el.nodeType === 3))\r\n  )\r\n}\r\n\r\nexport default isTextNode\r\n","/**\r\n * 检测对象自身属性中是否具有指定的属性。\r\n * ========================================================================\r\n * @method hasOwn\r\n * @param {Object} obj - （必须）检测的目标对象\r\n * @param {String} prop - （必须）属性名\r\n * @returns {Boolean}\r\n */\r\nconst hasOwn = (obj, prop) => {\r\n  const hasOwnProperty = Object.prototype.hasOwnProperty\r\n  return obj && hasOwnProperty.call(obj, prop)\r\n}\r\n\r\nexport default hasOwn\r\n","import isObject from '../types/isObject'\r\nimport hasOwn from '../lang/hasOwn'\r\nimport setAttribute from './setAttribute'\r\n\r\nconst setAttributes = (el, attrs) => {\r\n  if (!el || !isObject(attrs)) {\r\n    return false\r\n  }\r\n\r\n  Object.keys(attrs).forEach((attr) => {\r\n    const value = attrs[attr]\r\n    if (hasOwn(attrs, attr)) {\r\n      setAttribute(el, attr, value)\r\n    }\r\n  })\r\n}\r\n\r\nexport default setAttributes\r\n","/**\r\n * 给 DOM 节点设置属性/值\r\n * ========================================================================\r\n * @method setAttribute\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} attr - 属性名称\r\n * @param {String|Number|Boolean} value - 属性值\r\n */\r\nconst setAttribute = (el, attr, value) => {\r\n  let tagName = el.tagName.toLowerCase()\r\n\r\n  switch (attr) {\r\n    case 'style':\r\n      el.style.cssText = value\r\n      break\r\n    case 'value':\r\n      if (tagName === 'input' || tagName === 'textarea') {\r\n        el.value = value\r\n      } else {\r\n        el.setAttribute(attr, value)\r\n      }\r\n      break\r\n    case 'htmlFor':\r\n      el.setAttribute('for', value)\r\n      break\r\n    case 'className':\r\n      el.className = value\r\n      break\r\n    case 'innerHTML':\r\n      el.innerHTML = value\r\n      break\r\n    case 'innerText':\r\n      el.innerText = value\r\n      break\r\n    default:\r\n      el.setAttribute(attr, value)\r\n      break\r\n  }\r\n}\r\n\r\nexport default setAttribute\r\n","import isArray from '../types/isArray'\r\nimport isString from '../types/isString'\r\nimport isSVG from '../types/isSVG'\r\nimport setAttributes from '../dom/setAttributes'\r\n\r\n/**\r\n * 创建 SVG 图标 DOM 元素\r\n * ========================================================================\r\n * @method createElement\r\n * @param {String} name\r\n * @param {Object} [options]\r\n * @param {Number|Array} [options.size]\r\n * @param {String} [options.color]\r\n * @param {String} [options.iconSet]\r\n * @param {Object} [options.attrs]\r\n * @returns {HTMLElement}\r\n */\r\nconst createElement = (name, options = {}) => {\r\n  const ICON = 'outline-icon'\r\n  const size = options.size || 0\r\n  const color = options.color || ''\r\n  const iconSet = options.iconSet || ''\r\n  const width = isArray(size) ? size[0] : size\r\n  const height = isArray(size) ? size[1] : size\r\n  const defaultRules = size ? `width:${width}px;height:${height}px;` : ''\r\n  const cssRules = color ? defaultRules + `color:${color}` : defaultRules\r\n  const attrs = options.attrs || {}\r\n  const $icon = document.createElement('i')\r\n  let binds = ''\r\n  let svg = ''\r\n  let $svg\r\n\r\n  if (!isString(name)) {\r\n    return null\r\n  }\r\n\r\n  if (isSVG(name)) {\r\n    svg = name\r\n  } else {\r\n    binds =\r\n      iconSet && iconSet !== 'icon'\r\n        ? `xlink:href=\"#${iconSet}-icon-${name}\"`\r\n        : `xlink:href=\"#icon-${name}\"`\r\n    svg = `<svg><use ${binds}></use></svg>`\r\n  }\r\n\r\n  $icon.innerHTML = svg\r\n\r\n  if (attrs.className) {\r\n    attrs.className = `${ICON} ${attrs.className}`\r\n  } else {\r\n    attrs.className = ICON\r\n  }\r\n\r\n  setAttributes($icon, attrs)\r\n\r\n  $svg = $icon.querySelector('svg')\r\n  setAttributes($svg, {\r\n    'aria-hidden': true,\r\n    xmlns: 'http://www.w3.org/2000/svg',\r\n    class: 'outline-icon__svg',\r\n    width: 200,\r\n    height: 200,\r\n    style: cssRules\r\n  })\r\n\r\n  return $icon\r\n}\r\n\r\nexport default createElement\r\n","import isString from './isString'\r\n\r\nconst isSVG = (str) => {\r\n  const declaration = '(?:<\\\\?xml[^>]*>\\\\s*)?'\r\n  const doctype =\r\n    '(?:<\\\\!doctype svg[^>]*\\\\s*(?:\\\\[?(?:\\\\s*<![^>]*>\\\\s*)*\\\\]?)*[^>]*>\\\\s*)?'\r\n  const content = '<svg[^>]*>[^]*<\\\\/svg>\\\\s*$'\r\n  const svg = `^\\\\s*${declaration}${doctype}${content}\\\\s*$`\r\n  const pattern = new RegExp(svg, 'i')\r\n\r\n  return isString(str) && pattern.test(str)\r\n}\r\n\r\nexport default isSVG\r\n","import trim from './utils/lang/trim'\r\nimport createElement from './utils/dom/createElement'\r\nimport setAttributes from './utils/dom/setAttributes'\r\n\r\nimport icon from './utils/icons/icon'\r\n\r\nconst _updateHeading = ($heading, i, options) => {\r\n  const CLS_HEADING = 'outline-heading'\r\n  const hasAnchor = options.hasAnchor || true\r\n  const isAtStart = options.isAtStart || true\r\n  const showCode = options.showCode || false\r\n  const chapterCode = options.chapterCode || ''\r\n  const anchorURL = options.anchorURL || ''\r\n  const headingId = `heading-${i}`\r\n  const attrs = {\r\n    id: headingId,\r\n    className: isAtStart ? `${CLS_HEADING} ${CLS_HEADING}_start` : CLS_HEADING,\r\n    'data-id': i\r\n  }\r\n  const text = trim($heading.innerHTML)\r\n  let $anchor\r\n  let $icon\r\n\r\n  if (showCode) {\r\n    attrs.innerHTML = chapterCode + ' ' + text\r\n    attrs['data-code'] = chapterCode\r\n  }\r\n  setAttributes($heading, attrs)\r\n\r\n  if (!hasAnchor) {\r\n    return false\r\n  }\r\n\r\n  $icon = icon('hash', { iconSet: 'outline' })\r\n  $anchor = createElement(\r\n    'a',\r\n    {\r\n      id: `anchor-${i}`,\r\n      className: `${CLS_HEADING}__anchor anchor-${i}`,\r\n      href: anchorURL || `#${headingId}`,\r\n      target: anchorURL ? '_blank' : 'self',\r\n      'data-id': i\r\n    },\r\n    $icon\r\n  )\r\n  $heading.appendChild($anchor)\r\n}\r\n\r\nexport default _updateHeading\r\n","import createElement from './createElement'\r\n\r\n/**\r\n * 创建 SVG 图标 DOM 元素\r\n * ========================================================================\r\n * @method icon\r\n * @alias createElement\r\n * @see createElement\r\n * @param {String} name\r\n * @param {Object} [options]\r\n * @param {Number|Array} [options.size]\r\n * @param {String} [options.color]\r\n * @param {String} [options.iconSet]\r\n * @returns {HTMLElement}\r\n */\r\nconst icon = (name, options = {}) => {\r\n  return createElement(name, options)\r\n}\r\n\r\nexport default icon\r\n","import isObject from '../types/isObject'\r\nimport isString from '../types/isString'\r\nimport isArray from '../types/isArray'\r\nimport isDOM from '../types/isDOM'\r\nimport setAttributes from './setAttributes'\r\n\r\n/**\r\n * 创建 DOM 节点，并添加属性和子节点\r\n * ========================================================================\r\n * @method createElement\r\n * @param {String} tagName - 标签名称\r\n * @param {Object|Array|HTMLElement|DocumentFragment|String} attrs - 属性对象或者子节点\r\n * @param {Array|HTMLElement|DocumentFragment|String} [children] - 子节点数组\r\n * @returns {HTMLElement}\r\n */\r\nconst createElement = (tagName, attrs, children) => {\r\n  const $fragment = document.createDocumentFragment()\r\n  const $el = document.createElement(tagName)\r\n  const isValidChild = (child) => {\r\n    return isDOM(child) || isString(child)\r\n  }\r\n  const append = (child) => {\r\n    let $child\r\n\r\n    if (!isValidChild(child)) {\r\n      return false\r\n    }\r\n\r\n    if (isDOM(child)) {\r\n      $child = child\r\n    } else if (isString(child)) {\r\n      $child = document.createTextNode(child)\r\n    }\r\n\r\n    $fragment.appendChild($child)\r\n  }\r\n\r\n  if (isObject(attrs)) {\r\n    setAttributes($el, attrs)\r\n  } else if (isArray(attrs) && attrs.every((attr) => isValidChild(attr))) {\r\n    attrs.forEach((child) => {\r\n      append(child)\r\n    })\r\n  } else if (isDOM(attrs)) {\r\n    append(attrs)\r\n  } else if (isString(attrs)) {\r\n    append(document.createTextNode(attrs))\r\n  }\r\n\r\n  if (isArray(children)) {\r\n    children.forEach((child) => {\r\n      append(child)\r\n    })\r\n  } else {\r\n    append(children)\r\n  }\r\n\r\n  $el.appendChild($fragment)\r\n\r\n  return $el\r\n}\r\n\r\nexport default createElement\r\n","import trim from '../lang/trim'\r\nimport hasClass from './hasClass'\r\n\r\n/**\r\n * 移除 DOM 节点的 className 样式\r\n * ========================================================================\r\n * @method removeClass\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst removeClass = (el, className) => {\r\n  let allClass = el.className\r\n  let classList\r\n\r\n  if (!allClass || !hasClass(el, className)) {\r\n    return false\r\n  }\r\n\r\n  classList = el.classList\r\n\r\n  if (classList?.remove) {\r\n    classList.remove(className)\r\n  } else {\r\n    allClass = trim(allClass.replace(className, ''))\r\n    el.className = allClass\r\n  }\r\n}\r\n\r\nexport default removeClass\r\n","import isElement from '../types/isElement'\r\n/**\r\n * 检测 DOM 节点是否包含名为 className 的样式\r\n * ========================================================================\r\n * @method hasClass\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst hasClass = (el, className) => {\r\n  const pattern = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)')\r\n  let allClass\r\n  let classList\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  allClass = el.className\r\n\r\n  if (!allClass) {\r\n    return false\r\n  }\r\n\r\n  classList = el.classList\r\n\r\n  if (classList && classList.contains) {\r\n    return el.classList.contains(className)\r\n  }\r\n\r\n  return !!pattern.exec(allClass)\r\n}\r\n\r\nexport default hasClass\r\n","import removeClass from './utils/dom/removeClass'\r\nimport isEmpty from './utils/types/isEmpty'\r\nimport trim from './utils/lang/trim'\r\n\r\nconst _removeHeading = ($heading, hasAnchor = true, isAtStart = true) => {\r\n  const CLS_HEADING = 'outline-heading'\r\n  const text = $heading.innerHTML\r\n  const pattern = /^\\d+(\\.?\\d+)*\\s?/gi\r\n  let $anchor\r\n\r\n  $heading.innerHTML = text.replace(pattern, '')\r\n  $heading.removeAttribute('id')\r\n  $heading.removeAttribute('data-id')\r\n\r\n  removeClass($heading, CLS_HEADING)\r\n\r\n  if (!hasAnchor) {\r\n    return false\r\n  }\r\n\r\n  $anchor = $heading.querySelector(`.${CLS_HEADING}__anchor`)\r\n\r\n  if (isAtStart) {\r\n    removeClass($heading, `${CLS_HEADING}_start`)\r\n  }\r\n\r\n  if (isEmpty(trim($heading.className))) {\r\n    $heading.removeAttribute('class')\r\n  }\r\n\r\n  // 存在锚点才移除\r\n  if ($anchor) {\r\n    $heading.removeChild($anchor)\r\n  }\r\n}\r\n\r\nexport default _removeHeading\r\n","import isString from './isString'\r\n/**\r\n * 检测数据是否为空字符串\r\n * ========================================================================\r\n * @method isEmpty\r\n * @param {String} str\r\n * @returns {boolean}\r\n */\r\nconst isEmpty = (str) => {\r\n  return isString(str) && str === ''\r\n}\r\n\r\nexport default isEmpty\r\n","import trim from './utils/lang/trim'\r\nimport stripTags from './utils/lang/stripTags'\r\nimport isFunction from './utils/types/isFunction'\r\n\r\nimport _getChapterParentIdByDiffer from './_getChapterParentIdByDiffer'\r\nimport _getChaptersWithCode from './_getChaptersWithCode'\r\n\r\n/**\r\n * 根据文章中的 h1~h6 标签，自动分析返回文章章节数据\r\n * ========================================================================\r\n * @method getChaptersByHeadings\r\n * @param {Array} headings\r\n * @param {Boolean} [showCode]\r\n * @param {Function} [chapterTextFilter]\r\n * @return {*|*[]}\r\n */\r\nconst getChaptersByHeadings = (\r\n  headings,\r\n  showCode = true,\r\n  chapterTextFilter = null\r\n) => {\r\n  const pattern = /^\\d(\\.\\d+)*\\s?/gi\r\n  const chapters = []\r\n  let previous = 1\r\n  let level = 0\r\n  let text = ''\r\n\r\n  headings.forEach((heading, i) => {\r\n    const tagName = heading.tagName\r\n    const headingLevel = tagName.replace(/h/i, '')\r\n    let current = parseInt(headingLevel, 10)\r\n    let pid = -1\r\n\r\n    // 场景1：当前标题是前一个标题的子标题\r\n    // 当前标题的（标题标签）序号 > 前一个标题的序号：两个相连的标题是父标题 -> 子标题关系；\r\n    // h2 （前一个标题）\r\n    // h3 （当前标题）\r\n    if (current > previous) {\r\n      level += 1\r\n\r\n      // 第一层级的 pid 是 -1\r\n      if (level === 1) {\r\n        pid = -1\r\n      } else {\r\n        pid = i - 1\r\n      }\r\n    }\r\n    // 场景2：当前标题和前一个标题层级相同\r\n    // 当前标题的（标题标签）序号 = 前一个标题的序号\r\n    // h2 （前一个标题）\r\n    // h2 （当前标题）\r\n    // 当前标题的（标题标签）序号 < 前一个标题的序号，并且当前标题序号 > 当前的级别\r\n    // h2\r\n    // h4 （前一个标题）\r\n    // h3 （当前标题：这种情况我们还是任务 h3 是 h2 的下一级章节）\r\n    else if (current === previous || (current < previous && current > level)) {\r\n      // H1 的层级肯定是 1\r\n      if (current === 1) {\r\n        level = 1\r\n        pid = -1\r\n      } else {\r\n        pid = chapters[i - 1].pid\r\n      }\r\n    }\r\n    // 场景3：当前标题比前一个标题层级高\r\n    else if (current <= level) {\r\n      // H1 的层级肯定是 1\r\n      if (current === 1) {\r\n        level = 1\r\n      } else {\r\n        level = level - (previous - current)\r\n\r\n        if (level <= 1) {\r\n          level = 1\r\n        }\r\n      }\r\n\r\n      // 第一级的标题\r\n      if (level === 1) {\r\n        pid = -1\r\n      } else {\r\n        // 通过当前标题和前一个标题之间的等级差，获得当前标题的父标题ID\r\n        pid = _getChapterParentIdByDiffer(chapters, previous - current, i)\r\n      }\r\n    }\r\n\r\n    previous = current\r\n\r\n    text = stripTags(trim(heading.innerHTML.replace(pattern, '')))\r\n\r\n    if (isFunction(chapterTextFilter)) {\r\n      text = chapterTextFilter(text)\r\n    }\r\n\r\n    chapters.push({\r\n      id: i,\r\n      pid: pid,\r\n      level: level,\r\n      rel: `heading-${i}`,\r\n      text,\r\n      tagName\r\n    })\r\n  })\r\n\r\n  return showCode ? _getChaptersWithCode(chapters) : chapters\r\n}\r\n\r\nexport default getChaptersByHeadings\r\n","import isString from '../types/isString'\r\n\r\n/**\r\n * 过滤所有 HTML 标签\r\n * ========================================================================\r\n * @method stripTags\r\n * @param {string} str\r\n * @returns {string}\r\n */\r\nconst stripTags = (str) => {\r\n  if (!isString(str)) {\r\n    return ''\r\n  }\r\n  return str.replace(/<\\/?[^>]+(>|$)/g, '')\r\n}\r\n\r\nexport default stripTags\r\n","const _getChapterParentIdByDiffer = (chapters, differ, index) => {\r\n  let previous = chapters[index - 1]\r\n  let pid\r\n  let i\r\n\r\n  for (i = 0; i < differ; i += 1) {\r\n    pid = previous.pid\r\n    previous = chapters[pid]\r\n  }\r\n\r\n  pid = previous.pid\r\n\r\n  return pid\r\n}\r\n\r\nexport default _getChapterParentIdByDiffer\r\n","import isArray from './utils/types/isArray'\r\n\r\nconst _getChaptersWithCode = (chapters) => {\r\n  const groups = {}\r\n  const cb = (o) => {\r\n    return [o.pid]\r\n  }\r\n\r\n  chapters.forEach((o) => {\r\n    const group = JSON.stringify(cb(o))\r\n\r\n    groups[group] = groups[group] || []\r\n    groups[group].push(o)\r\n\r\n    o.index = groups[group].length\r\n\r\n    if (o.pid === -1) {\r\n      o.code = String(o.index)\r\n    }\r\n  })\r\n\r\n  Object.keys(groups).forEach((group) => {\r\n    groups[group].forEach((c) => {\r\n      const subjects = groups[`[${c.id}]`]\r\n\r\n      if (!subjects || !isArray(subjects)) {\r\n        return false\r\n      }\r\n\r\n      subjects.forEach((o) => {\r\n        o.code = c.code + '.' + o.index\r\n      })\r\n    })\r\n  })\r\n\r\n  return chapters\r\n}\r\n\r\nexport default _getChaptersWithCode\r\n","import isString from './utils/types/isString'\r\nimport isFunction from './utils/types/isFunction'\r\nimport isElement from './utils/types/isElement'\r\nimport toTree from './utils/lang/toTree'\r\n\r\nimport getChaptersByHeadings from './getChaptersByHeadings'\r\n\r\n/**\r\n *\r\n * @param {Object} [options]\r\n * @param {String|HTMLElement} [options.articleElement]\r\n * @param {String} [options.selector]\r\n * @param {Boolean} [options.showCode]\r\n * @param {Function} [options.chapterTextFilter]\r\n * @param {Boolean} [options.isTreeStructured]\r\n * @returns {Array}\r\n */\r\nconst getChapters = (options) => {\r\n  const {\r\n    articleElement,\r\n    selector,\r\n    showCode,\r\n    chapterTextFilter,\r\n    isTreeStructured\r\n  } = options\r\n  let $article = document.querySelector('#article')\r\n  let $headings = []\r\n  let chapters = []\r\n  let filter = (text) => {\r\n    return text.replace(/\\(.*?\\)/, '()')\r\n  }\r\n\r\n  if (isString(articleElement)) {\r\n    $article = document.querySelector(articleElement)\r\n  } else if (isElement(articleElement)) {\r\n    $article = articleElement\r\n  }\r\n\r\n  if (!$article) {\r\n    return chapters\r\n  }\r\n\r\n  if (isFunction(chapterTextFilter)) {\r\n    filter = chapterTextFilter\r\n  }\r\n\r\n  $headings = [...$article.querySelectorAll(selector || 'h1,h2,h3,h4,h5,h6')]\r\n  chapters = getChaptersByHeadings($headings, showCode || true, filter)\r\n\r\n  return isTreeStructured === true ? toTree(chapters, 'id', 'pid') : chapters\r\n}\r\n\r\nexport default getChapters\r\n","const toTree = (list, nodeKey, parentKey) => {\r\n  const map = {}\r\n  const roots = []\r\n\r\n  list.forEach((item, i) => {\r\n    // initialize the map\r\n    map[item[nodeKey]] = i\r\n    // initialize the children\r\n    item.children = []\r\n  })\r\n\r\n  list.forEach((item) => {\r\n    const node = list[map[item[parentKey]]]\r\n\r\n    if (item[parentKey] !== -1) {\r\n      // if you have dangling branches check that map[node.parentId] exists\r\n      node.children.push(item)\r\n    } else {\r\n      roots.push(item)\r\n    }\r\n  })\r\n\r\n  return roots\r\n}\r\n\r\nexport default toTree\r\n","/**\r\n * 存储订阅者（主题和处理器的）私有对象\r\n * ========================================================================\r\n * @type {{}}\r\n * @private\r\n */\r\nconst _subscribers = {}\r\n\r\nexport default _subscribers\r\n","import _subscribers from './_subscribers'\r\nimport hasOwn from '../lang/hasOwn'\r\n\r\n/**\r\n * 判断是否存在与给定 topic 完全匹配的订阅者信息\r\n * ========================================================================\r\n * @method _hasDirectSubscribersFor\r\n * @param {String} topic - （必须）订阅主题字符串\r\n * @returns {Boolean}\r\n */\r\nconst _hasDirectSubscribersFor = (topic) => {\r\n  return hasOwn(_subscribers, topic) && _subscribers[topic].length > 0\r\n}\r\n\r\nexport default _hasDirectSubscribersFor\r\n","import _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\r\nimport _hasSubscribers from './_hasSubscribers'\r\n\r\n/**\r\n * 判断是否存在包含 topic 指定的订阅者信息\r\n * ========================================================================\r\n * @method has\r\n * @param {String} topic - （必须）主题名称\r\n * @param {Boolean} [isDirect] - （可选）是否为直接的主题，默认值：true\r\n * @returns {Boolean}\r\n */\r\nconst has = (topic, isDirect = true) => {\r\n  return isDirect ? _hasDirectSubscribersFor(topic) : _hasSubscribers(topic)\r\n}\r\n\r\nexport default has\r\n","import _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\r\n\r\n/**\r\n * 判断是否存在包含给定 topic 相关的订阅者信息\r\n * ========================================================================\r\n * @method _hasSubscribers\r\n * @param {String} topic - （必须）订阅主题字符串\r\n * @returns {Boolean}\r\n */\r\nconst _hasSubscribers = (topic) => {\r\n  let found = _hasDirectSubscribersFor(topic)\r\n  let position = topic.lastIndexOf('.')\r\n\r\n  while (!found && position !== -1) {\r\n    topic = topic.substring(0, position)\r\n    position = topic.lastIndexOf('.')\r\n    found = _hasDirectSubscribersFor(topic)\r\n  }\r\n\r\n  return found\r\n}\r\n\r\nexport default _hasSubscribers\r\n","import isTypedArray from '../types/isTypedArray'\r\nimport _subscribers from './_subscribers'\r\nimport has from './has'\r\nimport _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\r\n\r\n/**\r\n * （异步）发布订阅主题信息\r\n * ========================================================================\r\n * 主题默认是异步发布的。确保在消费者处理主题时，主题的发起者不会被阻止。\r\n * ========================================================================\r\n * @method emit\r\n * @param {String} topic - （必须）主题名称\r\n * @param {Object} [data] - （可选）数据对象\r\n * @param {Boolean} [async] - (可选) 是否异步发布\r\n */\r\nconst emit = (topic, data, async = true) => {\r\n  const execute = (topic) => {\r\n    if (!_hasDirectSubscribersFor(topic)) {\r\n      return false\r\n    }\r\n\r\n    _subscribers[topic].forEach((subscriber) => {\r\n      // 针对 mqtt 消息服务返回的 Uint8Array 类似的 typed arrays 格式的数据\r\n      // 采用 toString() 方法转化为普通（JSON）字符串\r\n      const message = isTypedArray(data) ? data.toString() : data\r\n\r\n      subscriber.callback.call(subscriber.context || subscriber, message)\r\n    })\r\n  }\r\n  const deliver = () => {\r\n    let subscriber = topic\r\n    let position = topic.lastIndexOf('.')\r\n\r\n    while (position !== -1) {\r\n      subscriber = subscriber.substring(0, position)\r\n      position = subscriber.lastIndexOf('.')\r\n\r\n      execute(subscriber)\r\n    }\r\n\r\n    // 执行 topic 对应的处理器\r\n    execute(topic)\r\n    // 执行特殊 topic：'*'（监听全部消息的发布）\r\n    execute('*')\r\n  }\r\n\r\n  if (!has(topic)) {\r\n    return false\r\n  }\r\n\r\n  if (async) {\r\n    setTimeout(deliver, 10)\r\n  } else {\r\n    deliver()\r\n  }\r\n}\r\n\r\nexport default emit\r\n","import toString from '../lang/toString'\r\n/**\r\n * 判断检测数据是否为 Typed Arrays 类型的数据\r\n * ========================================================================\r\n * @param {*} val\r\n * @returns {boolean}\r\n */\r\nconst isTypedArray = (val) => {\r\n  const TYPES = [\r\n    '[object Int8Array]',\r\n    '[object Uint8Array]',\r\n    '[object Uint8ClampedArray]',\r\n    '[object Int16Array]',\r\n    '[object Uint16Array]',\r\n    '[object Int32Array]',\r\n    '[object Uint32Array]',\r\n    '[object Float32Array]',\r\n    '[object Float64Array]',\r\n    '[object BigInt64Array]',\r\n    '[object BigUint64Array]'\r\n  ]\r\n\r\n  return TYPES.indexOf(toString(val)) > -1\r\n}\r\n\r\nexport default isTypedArray\r\n","/**\r\n * 生成唯一 id 字符串的函数\r\n * ========================================================================\r\n * @method guid\r\n * @param {String} [prefix] - 生成 id 的前缀字符串\r\n * @return {String} 返回一个表示唯一 id 的字符串\r\n */\r\nconst guid = (() => {\r\n  let uuid = 0\r\n\r\n  return (prefix) => {\r\n    uuid += 1\r\n\r\n    return prefix ? prefix + '-' + uuid : 'guid-' + uuid\r\n  }\r\n})()\r\n\r\nexport default guid\r\n","import _subscribers from './_subscribers'\r\nimport hasOwn from '../lang/hasOwn'\r\n\r\n/**\r\n * 删除与给定 topic 相同的订阅者信息\r\n * ========================================================================\r\n * @method _removeSubscriber\r\n * @param {String} topic - （必须）订阅主题字符串\r\n * @returns {Boolean}\r\n */\r\nconst _removeSubscriber = (topic) => {\r\n  if (!hasOwn(_subscribers, topic)) {\r\n    return false\r\n  }\r\n\r\n  delete _subscribers[topic]\r\n}\r\n\r\nexport default _removeSubscriber\r\n","import has from './has'\r\nimport _removeSubscriber from './_removeSubscriber'\r\nimport _removeSubscriberByToken from './_removeSubscriberByToken'\r\n\r\n/**\r\n * 取消订阅主题\r\n * ========================================================================\r\n * @method off\r\n * @param {String} topic - （必须）订阅的主题\r\n * @param {Function|String} [token] - （可选）订阅主题的处理器函数或者唯一 Id 值\r\n */\r\nconst off = (topic, token) => {\r\n  if (!has(topic)) {\r\n    return false\r\n  }\r\n\r\n  if (token) {\r\n    _removeSubscriberByToken(token)\r\n  } else {\r\n    _removeSubscriber(topic)\r\n  }\r\n}\r\n\r\nexport default off\r\n","import _subscribers from './_subscribers'\r\nimport _removeSubscriber from './_removeSubscriber'\r\n\r\n/**\r\n * 通过订阅者 token 值删除订阅者信息\r\n * ========================================================================\r\n * @method _removeSubscriberByToken\r\n * @param {String} token - 订阅者 token 字符串\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst _removeSubscriberByToken = (token) => {\r\n  const keys = Object.keys(_subscribers)\r\n  let index = -1\r\n\r\n  if (!token || keys.length < 1) {\r\n    return false\r\n  }\r\n\r\n  keys.forEach((subject) => {\r\n    const subscriber = _subscribers[subject]\r\n    let topic\r\n\r\n    subscriber.forEach((execution, j) => {\r\n      if (execution.callback === token || execution.token === token) {\r\n        topic = execution.topic\r\n        subscriber.splice(index, j)\r\n      }\r\n    })\r\n\r\n    /* istanbul ignore else */\r\n    if (subscriber.length < 1) {\r\n      _removeSubscriber(topic)\r\n    }\r\n  })\r\n}\r\n\r\nexport default _removeSubscriberByToken\r\n","import isString from './utils/types/isString'\r\nimport hasOwn from './utils/lang/hasOwn'\r\nimport isObject from './utils/types/isObject'\r\nimport extend from './utils/lang/extend'\r\nimport publish from './utils/observer/emit'\r\nimport subscribe from './utils/observer/on'\r\nimport unsubscribe from './utils/observer/off'\r\n\r\nclass Base {\r\n  constructor(options) {\r\n    this.attrs = {}\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    this.attr(options).render().addListeners()\r\n    return this\r\n  }\r\n\r\n  attr(prop, value) {\r\n    const attrs = this.attrs\r\n\r\n    if (isString(prop)) {\r\n      // 只能扩展 attrs 中已有的属性\r\n      if (value && hasOwn(attrs, prop)) {\r\n        // 更新单个配置信息\r\n        attrs[prop] = value\r\n        return this\r\n      }\r\n\r\n      // 只传递 prop 参数，则返回对应的属性值\r\n      return attrs[prop]\r\n    } else if (isObject(prop)) {\r\n      // 批量更新配置信息\r\n      extend(attrs, prop)\r\n\r\n      return this\r\n    } else if (arguments.length === 0) {\r\n      // 不传递参数，直接返回整个\r\n      return attrs\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  render() {\r\n    return this\r\n  }\r\n\r\n  refresh() {\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    this.removeListeners()\r\n    return this\r\n  }\r\n\r\n  reload(options) {\r\n    let attrs = this.attr()\r\n\r\n    if (options) {\r\n      attrs = this.attr(options)\r\n    }\r\n\r\n    this.destroy().initialize(attrs)\r\n\r\n    return this\r\n  }\r\n\r\n  $emit(event, data) {\r\n    publish(event, data)\r\n    return this\r\n  }\r\n\r\n  $on(event, callback) {\r\n    subscribe(event, callback, this)\r\n    return this\r\n  }\r\n\r\n  $off(event, callback) {\r\n    unsubscribe(event, callback)\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    return this\r\n  }\r\n}\r\n\r\nexport default Base\r\n","import hasOwn from './hasOwn'\r\n\r\n/**\r\n * 扩展对象\r\n * ========================================================================\r\n * @method extend\r\n * @param {Object} origin\r\n * @param {Object} source\r\n */\r\nconst extend = (origin, source) => {\r\n  const keys = Object.keys(source)\r\n\r\n  keys.forEach((prop) => {\r\n    if (hasOwn(source, prop)) {\r\n      origin[prop] = source[prop]\r\n    }\r\n  })\r\n}\r\n\r\nexport default extend\r\n","import _subscribers from './_subscribers'\r\nimport isFunction from '../types/isFunction'\r\nimport guid from '../lang/guid'\r\n\r\n/**\r\n * 订阅主题，并给出处理器函数\r\n * ========================================================================\r\n * @method on\r\n * @param {String} topic - （必须）主题名称\r\n * @param {Function} handler - （必须）主题的处理器函数\r\n * @param {Object} [context] - （可选）指定 this 执行上下文\r\n * @return {String} - 唯一的 token 字符串，例如：'guid-1'。\r\n */\r\nconst on = (topic, handler, context = null) => {\r\n  const token = guid()\r\n  let subject = typeof topic === 'symbol' ? topic.toString() : topic\r\n\r\n  if (!isFunction(handler)) {\r\n    return ''\r\n  }\r\n\r\n  /* istanbul ignore else */\r\n  if (!_subscribers[subject]) {\r\n    _subscribers[subject] = []\r\n  }\r\n\r\n  _subscribers[subject].push({\r\n    topic: subject,\r\n    callback: handler,\r\n    context,\r\n    token\r\n  })\r\n\r\n  return token\r\n}\r\n\r\nexport default on\r\n","import isString from './utils/types/isString'\r\nimport isFunction from './utils/types/isFunction'\r\nimport isElement from './utils/types/isElement'\r\nimport cloneDeep from './utils/lang/cloneDeep'\r\nimport timeSlice from './utils/lang/timeSlice'\r\nimport later from './utils/lang/later'\r\nimport scrollTo from './utils/dom/scrollTo'\r\nimport _getScrollElement from './utils/dom/_getScrollElement'\r\nimport offsetTop from './utils/dom/offsetTop'\r\nimport on from './utils/event/on'\r\nimport off from './utils/event/off'\r\nimport stop from './utils/event/stop'\r\nimport paint from './utils/icons/paint'\r\n\r\nimport _updateHeading from './_updateHeading'\r\nimport _removeHeading from './_removeHeading'\r\nimport getChapters from './getChapters'\r\n\r\nimport Base from './base'\r\n\r\nclass Anchors extends Base {\r\n  constructor(options) {\r\n    super()\r\n\r\n    this._default()\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  _default() {\r\n    this.attrs = cloneDeep(Anchors.DEFAULTS)\r\n\r\n    this.$articleElement = null\r\n    this.$scrollElement = null\r\n    this.$headings = []\r\n\r\n    return this\r\n  }\r\n\r\n  initialize(options) {\r\n    let created\r\n    let scrollElement\r\n    let $articleElement\r\n    let articleElement\r\n\r\n    this.attr(options)\r\n\r\n    articleElement = this.attr('articleElement')\r\n    scrollElement = this.attr('scrollElement')\r\n    created = this.attr('created')\r\n\r\n    if (isString(articleElement)) {\r\n      $articleElement = document.querySelector(articleElement)\r\n    } else if (isElement(articleElement)) {\r\n      $articleElement = articleElement\r\n    }\r\n\r\n    if (!$articleElement) {\r\n      return this\r\n    }\r\n\r\n    this.$articleElement = $articleElement\r\n    this.$scrollElement = _getScrollElement(scrollElement)\r\n    this.$headings = this.getHeadings()\r\n\r\n    if (this.$headings.length < 1) {\r\n      return this\r\n    }\r\n\r\n    if (isFunction(created)) {\r\n      created.call(this)\r\n    }\r\n\r\n    this.render().addListeners()\r\n\r\n    return this\r\n  }\r\n\r\n  getHeadings() {\r\n    const $articleElement = this.$articleElement\r\n    const selector = this.attr('selector')\r\n\r\n    return [...$articleElement.querySelectorAll(selector)]\r\n  }\r\n\r\n  count() {\r\n    return this.getHeadings().length\r\n  }\r\n\r\n  render() {\r\n    const articleElement = this.attr('articleElement')\r\n    const selector = this.attr('selector')\r\n    const showCode = this.attr('showCode') || true\r\n    const chapterTextFilter = this.attr('chapterTextFilter')\r\n    const mounted = this.attr('mounted')\r\n    const chapters = getChapters({\r\n      articleElement,\r\n      selector,\r\n      showCode,\r\n      chapterTextFilter\r\n    })\r\n\r\n    paint()\r\n\r\n    this._paint(chapters)\r\n\r\n    if (isFunction(mounted)) {\r\n      mounted.call(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  erase() {\r\n    this._remove()\r\n\r\n    return this\r\n  }\r\n\r\n  _paint(chapters) {\r\n    const LIMIT = 400\r\n    const hasAnchor = this.attr('hasAnchor')\r\n    const isAtStart = this.attr('isAtStart')\r\n    const showCode = this.attr('showCode')\r\n    const anchorURL = this.attr('anchorURL')\r\n    const count = this.count()\r\n    const $headings = [...this.$headings]\r\n    const update = (headings, group) => {\r\n      headings.forEach(($heading, i) => {\r\n        const id = i + group * LIMIT\r\n        const chapterCode = chapters[id].code\r\n        _updateHeading($heading, id, {\r\n          hasAnchor,\r\n          isAtStart,\r\n          showCode,\r\n          chapterCode,\r\n          anchorURL\r\n        })\r\n      })\r\n    }\r\n    let groupIndex = -1\r\n\r\n    // 针对超长的文章，进行 timeSlice 处理\r\n    if (count > LIMIT) {\r\n      groupIndex += 1\r\n      // 同步绘制 Limit 以内的标题链接（可以确保 50ms 完成绘制）\r\n      update($headings.splice(0, LIMIT), 0)\r\n      // 采用 timeSlice 处理机制绘制剩余的标题\r\n      while ($headings.length > 0) {\r\n        const once = $headings.splice(0, LIMIT)\r\n        timeSlice(\r\n          () => {\r\n            update(once, (groupIndex += 1))\r\n          },\r\n          () => {\r\n            this.$emit('anchors:all:paint')\r\n          }\r\n        )\r\n      }\r\n    } else {\r\n      update($headings, 0)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  _remove() {\r\n    const hasAnchor = this.attr('hasAnchor')\r\n    const isAtStart = this.attr('isAtStart')\r\n    const $headings = this.$headings\r\n\r\n    $headings.forEach(($heading) => {\r\n      _removeHeading($heading, hasAnchor, isAtStart)\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  refresh(chapters) {\r\n    const articleElement = this.attr('articleElement')\r\n    const selector = this.attr('selector')\r\n    const showCode = this.attr('showCode') || true\r\n    const chapterTextFilter = this.attr('chapterTextFilter')\r\n\r\n    this.$headings = this.getHeadings()\r\n\r\n    this.erase()._paint(\r\n      chapters ||\r\n        getChapters({\r\n          articleElement,\r\n          selector,\r\n          showCode,\r\n          chapterTextFilter\r\n        })\r\n    )\r\n\r\n    return this\r\n  }\r\n\r\n  scrollTo(top, after) {\r\n    const el = this.$scrollElement\r\n\r\n    scrollTo(el, top, after)\r\n\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    const beforeDestroy = this.attr('beforeDestroy')\r\n    const afterDestroy = this.attr('afterDestroy')\r\n\r\n    if (isFunction(beforeDestroy)) {\r\n      beforeDestroy.call(this)\r\n    }\r\n\r\n    this.removeListeners()._remove()._default()\r\n\r\n    if (isFunction(afterDestroy)) {\r\n      afterDestroy.call(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  onAnchorTrigger(evt) {\r\n    const anchorURL = this.attr('anchorURL')\r\n    const afterScroll = this.attr('afterScroll')\r\n    const stickyHeight = this.attr('stickyHeight')\r\n    const $anchor = evt.delegateTarget\r\n    const $heading = $anchor.parentNode\r\n    const top = offsetTop($heading) - (stickyHeight + 10)\r\n    const $scrollElement = this.$scrollElement\r\n    const min = 0\r\n    const max = $scrollElement.scrollHeight - $scrollElement.clientHeight\r\n    const after = () => {\r\n      if (isFunction(afterScroll)) {\r\n        afterScroll.call(this, 'anchor')\r\n      }\r\n\r\n      later(() => {\r\n        this.$emit('toolbar:update', {\r\n          top,\r\n          min,\r\n          max\r\n        })\r\n      })\r\n    }\r\n\r\n    this.scrollTo(top, after)\r\n\r\n    if (!anchorURL) {\r\n      stop(evt)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  onRefresh(chapters) {\r\n    this.refresh(chapters)\r\n\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    const $articleElement = this.$articleElement\r\n\r\n    if (this.count() < 1) {\r\n      return this\r\n    }\r\n\r\n    on(\r\n      $articleElement,\r\n      '.outline-heading__anchor',\r\n      'click',\r\n      this.onAnchorTrigger,\r\n      this,\r\n      true\r\n    )\r\n\r\n    this.$on('anchors:refresh', this.onRefresh)\r\n\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    const $articleElement = this.$articleElement\r\n\r\n    if (this.count() < 1) {\r\n      return this\r\n    }\r\n\r\n    off($articleElement, 'click', this.onAnchorTrigger)\r\n    this.$off('anchors:refresh', this.onRefresh)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nAnchors.DEFAULTS = (() => {\r\n  const OPTIONS = {\r\n    scrollElement: 'html,body',\r\n    articleElement: '#article',\r\n    selector: 'h1,h2,h3,h4,h5,h6',\r\n    stickyHeight: 0,\r\n    anchorURL: '',\r\n    hasAnchor: true,\r\n    isAtStart: true,\r\n    showCode: false,\r\n    created: null,\r\n    mounted: null,\r\n    afterScroll: null,\r\n    beforeDestroy: null,\r\n    afterDestroy: null,\r\n    chapterTextFilter: null\r\n  }\r\n\r\n  return cloneDeep(OPTIONS)\r\n})()\r\n\r\nexport default Anchors\r\n","import easeInQuad from '../lang/easeInQuad'\r\nimport isFunction from '../types/isFunction'\r\nimport _getScrollElement from './_getScrollElement'\r\n\r\n/**\r\n * 指定 rootElement DOM 节点滚动到指定 top 位置\r\n * ========================================================================\r\n * @method scrollTo\r\n * @param {HTMLElement|Object} [scrollElement] - （必须）要滚动的 DOM 节点\r\n * @param {Number} top - （必须）滚动的 scrollTop 数值\r\n * @param {Function} [afterStop] - （可选）滚动完成的回调函数\r\n */\r\nconst scrollTo = (scrollElement, top, afterStop) => {\r\n  const $scrollElement = _getScrollElement(scrollElement)\r\n  let scrollTop = $scrollElement.scrollTop\r\n  let step = 0\r\n  const distance = top - scrollTop\r\n  const MAX_HEIGHT = $scrollElement.scrollHeight\r\n  const MAX_TOP = top - MAX_HEIGHT <= 0 ? top : MAX_HEIGHT\r\n  const stop = (top) => {\r\n    if (isFunction(afterStop)) {\r\n      afterStop(top)\r\n    }\r\n\r\n    return false\r\n  }\r\n  const play = () => {\r\n    step += 1\r\n\r\n    // 向上滚动\r\n    if (distance < 0) {\r\n      scrollTop -= easeInQuad(step)\r\n      $scrollElement.scrollTop = scrollTop\r\n\r\n      if (scrollTop <= top) {\r\n        $scrollElement.scrollTop = top\r\n        return stop(top)\r\n      }\r\n    } else {\r\n      scrollTop += easeInQuad(step)\r\n      $scrollElement.scrollTop = scrollTop\r\n\r\n      if (scrollTop >= MAX_TOP) {\r\n        $scrollElement.scrollTop = MAX_TOP\r\n        return stop(MAX_TOP)\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line compat/compat\r\n    requestAnimationFrame(play)\r\n  }\r\n\r\n  // eslint-disable-next-line compat/compat\r\n  requestAnimationFrame(play)\r\n}\r\n\r\nexport default scrollTo\r\n","/**\r\n * 停止事件（阻止默认行为和阻止事件的捕获或冒泡）\r\n * ========================================================================\r\n * @method stop\r\n * @param {Event} evt - 事件对象\r\n *\r\n * @example\r\n * <div id=\"nav\" class=\"nav\">\r\n *   <a id=\"service\" class=\"anchor\" href=\"https://www.yaohaixiao.com/serivce\">Service</a>\r\n *   <a id=\"help\" class=\"anchor\" href=\"https://www.yaohaixiao.com/help\">Help</a>\r\n * </div>\r\n *\r\n * const $nav = document.querySelector('#nav')\r\n * const $service = document.querySelector('.anchor')\r\n *\r\n * on($nav, 'click', function(evt) {\r\n *   console.log('你点击了导航栏')\r\n * })\r\n *\r\n * on($anchor, 'click', function(evt) {\r\n *   console.log('tagName', this.tagName)\r\n *\r\n *   // 工作台输出：'a'\r\n *   // 不会触发事件冒泡，输出：'你点击了导航栏'\r\n *   // 也不会切换到 href 属性的页面，阻止了点击链接的默认行为\r\n *   stopEvent(evt)\r\n * })\r\n */\r\nconst stop = function (evt) {\r\n  evt.stopPropagation()\r\n  evt.preventDefault()\r\n}\r\n\r\nexport default stop\r\n"],"names":["isString","str","toString","val","Object","prototype","apply","isFunction","isObject","o","isElement","nodeName","tagName","nodeType","isArray","Array","cloneDeep","obj","clone","from","assign","keys","forEach","key","later","fn","delay","setTimeout","queue","isHandling","done","runIdle","idleDeadline","timeRemaining","length","shift","requestIdleCallback","window","cb","start","Date","now","didTimeout","Math","max","cancelIdleCallback","id","clearTimeout","timeSlice","afterComplete","push","easeInQuad","x","_getScrollElement","scrollElement","$rootElements","$scrollElement","document","querySelector","querySelectorAll","scrollTop","offsetTop","el","top","offsetParent","matches","selector","sel","replace","msMatchesSelector","getParentOrHost","host","parentNode","CAPTURE_EVENTS","_off","type","capture","indexOf","_delegateListener","listeners","_listeners","index","listener","i","handler","splice","_delete","removeEventListener","purgeElement","recurse","$element","$children","childNodes","getListeners","filter","arguments","$child","off","on","data","context","once","evt","target","getTarget","delegateTarget","closest","ctx","includeCTX","startsWith","overrideContext","call","addEventListener","SYMBOLS","_maybeArrayLike","_toConsumableArray","getSymbols","name","iconSet","getSymbol","patternName","patternSet","find","symbol","fullName","exec","paint","$body","body","$icons","symbols","add","innerHTML","join","createElement","insertBefore","firstChild","trim","isDOM","isHTMLCollection","fragment","isTextNode","hasOwn","prop","hasOwnProperty","setAttributes","attrs","attr","value","setAttribute","toLowerCase","style","cssText","className","innerText","options","ICON","size","color","width","height","defaultRules","cssRules","$icon","$svg","binds","svg","pattern","RegExp","test","isSVG","xmlns","class","_updateHeading","$heading","CLS_HEADING","hasAnchor","isAtStart","showCode","chapterCode","anchorURL","headingId","text","$anchor","icon","children","$fragment","createDocumentFragment","$el","isValidChild","child","append","createTextNode","appendChild","every","href","removeClass","_classList","classList","allClass","hasClass","contains","remove","_removeHeading","removeAttribute","removeChild","getChaptersByHeadings","headings","chapterTextFilter","chapters","previous","level","heading","headingLevel","current","parseInt","pid","_getChapterParentIdByDiffer","differ","rel","groups","group","JSON","stringify","code","String","c","subjects","_getChaptersWithCode","getChapters","articleElement","isTreeStructured","$article","$headings","toTree","list","nodeKey","parentKey","map","roots","item","node","_subscribers","_hasDirectSubscribersFor","topic","has","isDirect","found","position","lastIndexOf","substring","_hasSubscribers","emit","async","execute","subscriber","message","callback","deliver","guid","uuid","prefix","_removeSubscriber","token","subject","execution","j","_removeSubscriberByToken","Base","constructor","this","initialize","render","addListeners","origin","source","extend","refresh","destroy","removeListeners","reload","$emit","event","publish","$on","subscribe","$off","unsubscribe","Anchors","super","_default","DEFAULTS","$articleElement","created","getHeadings","count","mounted","_paint","erase","_remove","LIMIT","update","groupIndex","scrollTo","after","afterStop","step","distance","MAX_HEIGHT","scrollHeight","MAX_TOP","stop","play","requestAnimationFrame","beforeDestroy","afterDestroy","onAnchorTrigger","afterScroll","stickyHeight","clientHeight","min","stopPropagation","preventDefault","onRefresh"],"mappings":"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"}