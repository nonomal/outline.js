{"version":3,"file":"reader.min.js","sources":["../../utils/lang/toString.js","../../utils/types/isFunction.js","../../utils/types/isObject.js","../../utils/types/isArray.js","../../utils/lang/cloneDeep.js","../../utils/lang/later.js","../../utils/types/isString.js","../../utils/types/isElement.js","../../utils/lang/hasOwn.js","../../utils/dom/setAttribute.js","../../utils/dom/setAttributes.js","../../utils/icons/createElement.js","../../utils/types/isSVG.js","../../utils/icons/icon.js","../../utils/types/isDOM.js","../../utils/types/isHTMLCollection.js","../../utils/types/isFragment.js","../../utils/types/isTextNode.js","../../utils/dom/createElement.js","../../utils/dom/hasClass.js","../../utils/dom/addClass.js","../../utils/dom/removeClass.js","../../utils/lang/trim.js","../../utils/event/enum.js","../../utils/event/_off.js","../../utils/event/_delete.js","../../utils/event/purgeElement.js","../../utils/event/getListeners.js","../../utils/event/off.js","../../utils/dom/matches.js","../../utils/dom/getParentOrHost.js","../../utils/event/on.js","../../utils/event/getTarget.js","../../utils/dom/resolveTextNode.js","../../utils/dom/closest.js","../../utils/lang/extend.js","../../utils/observer/_subscribers.js","../../utils/observer/_hasDirectSubscribersFor.js","../../utils/observer/has.js","../../utils/observer/_hasSubscribers.js","../../utils/observer/emit.js","../../utils/types/isTypedArray.js","../../utils/lang/guid.js","../../utils/observer/_removeSubscriber.js","../../utils/observer/off.js","../../utils/observer/_removeSubscriberByToken.js","../../base.js","../../utils/observer/on.js","../../utils/types/isObjectLike.js","../../utils/types/isPlainObject.js","../../utils/lang/stripScripts.js","../../utils/lang/encodeHTML.js","../../utils/icons/symbols.js","../../utils/icons/defaults.js","../../utils/icons/getSymbols.js","../../utils/icons/getSymbol.js","../../message.js","../../utils/icons/paint.js","../../utils/icons/add.js","../../reader.js","../../utils/event/at.js","../../utils/event/stop.js"],"sourcesContent":["/**\n * Object 对象原型上的 toString 方法\n * ========================================================================\n * @method toString\n * @param {*} val\n * @returns {string}\n */\nconst toString = (val) => {\n  return Object.prototype.toString.apply(val)\n}\n\nexport default toString\n","import toString from '../lang/toString'\n\n/**\n * 检测测试数据是否为 Function 类型\n * ========================================================================\n * @method isFunction\n * @param {*} val - （必须）待检测的数据\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\n */\nconst isFunction = (val) => {\n  return typeof val === 'function' || toString(val) === '[object Function]'\n}\n\nexport default isFunction\n","import toString from '../lang/toString'\nimport isFunction from './isFunction'\n\n/**\n * 检测数据是否为 Object 类型\n * ========================================================================\n * @method isObject\n * @param {*} o\n * @returns {boolean}\n */\nconst isObject = (o) => {\n  return (\n    (toString(o) === '[object Object]' ||\n      typeof o === 'object' ||\n      isFunction(o)) &&\n    o !== null\n  )\n}\n\nexport default isObject\n","import toString from '../lang/toString'\n\n/**\n * 检测数据是否为 Array 类型\n * ========================================================================\n * @method isArray\n * @param {*} o\n * @returns {boolean}\n */\nconst isArray = (o) => {\n  if (Array.isArray) {\n    return Array.isArray(o)\n  } else {\n    return toString(o) === '[object Array]'\n  }\n}\n\nexport default isArray\n","import isObject from '../types/isObject'\r\nimport isArray from '../types/isArray'\r\n\r\n/**\r\n * 深拷贝对象函数\r\n * ========================================================================\r\n * @methods cloneDeep\r\n * @param {Object} obj - 深拷贝的对象\r\n * @returns {Array|Object|*}\r\n *\r\n * @example\r\n * const arr = cloneDeep([2,3,4,6])\r\n * => [2,3,4,6]\r\n */\r\nconst cloneDeep = (obj) => {\r\n  let clone = {}\r\n\r\n  if (obj === null) {\r\n    return null\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    clone = Array.from(obj)\r\n  } else {\r\n    clone = Object.assign({}, obj)\r\n    Object.keys(clone).forEach((key) => {\r\n      return (clone[key] = isObject(obj[key]) ? cloneDeep(obj[key]) : obj[key])\r\n    })\r\n  }\r\n\r\n  return clone\r\n}\r\n\r\nexport default cloneDeep\r\n","import isFunction from '../types/isFunction'\n\n/**\n * later - 延迟执行方法\n * ========================================================================\n * @method later\n * @param {Function} fn\n * @param {Number} [delay]\n * @returns {number|boolean}\n */\nconst later = (fn, delay = 300) => {\n  if (!isFunction(fn)) {\n    return false\n  }\n\n  return setTimeout(() => {\n    fn()\n  }, delay)\n}\n\nexport default later\n","/**\n * 检测数据是否为 String 类型\n * ========================================================================\n * @method isArray\n * @param {*} str\n * @returns {boolean}\n */\nconst isString = (str) => {\n  return typeof str === 'string'\n}\n\nexport default isString\n","import isObject from './isObject'\n\n/**\n * 检测数据是否为 HTMLElement DOM 节点\n * ========================================================================\n * @method isElement\n * @param {*} o\n * @returns {boolean}\n */\nconst isElement = (o) => {\n  return !!(isObject(o) && o.nodeName && o.tagName && o.nodeType === 1)\n}\n\nexport default isElement\n","/**\n * 检测对象自身属性中是否具有指定的属性。\n * ========================================================================\n * @method hasOwn\n * @param {Object} obj - （必须）检测的目标对象\n * @param {String} prop - （必须）属性名\n * @returns {Boolean}\n */\nconst hasOwn = (obj, prop) => {\n  const hasOwnProperty = Object.prototype.hasOwnProperty\n  return obj && hasOwnProperty.call(obj, prop)\n}\n\nexport default hasOwn\n","/**\n * 给 DOM 节点设置属性/值\n * ========================================================================\n * @method setAttribute\n * @param {HTMLElement} el - DOM 节点\n * @param {String} attr - 属性名称\n * @param {String|Number|Boolean} value - 属性值\n */\nconst setAttribute = (el, attr, value) => {\n  let tagName = el.tagName.toLowerCase()\n\n  switch (attr) {\n    case 'style':\n      el.style.cssText = value\n      break\n    case 'value':\n      if (tagName === 'input' || tagName === 'textarea') {\n        el.value = value\n      } else {\n        el.setAttribute(attr, value)\n      }\n      break\n    case 'htmlFor':\n      el.setAttribute('for', value)\n      break\n    case 'className':\n      el.className = value\n      break\n    case 'innerHTML':\n      el.innerHTML = value\n      break\n    case 'innerText':\n      el.innerText = value\n      break\n    default:\n      el.setAttribute(attr, value)\n      break\n  }\n}\n\nexport default setAttribute\n","import isObject from '../types/isObject'\nimport hasOwn from '../lang/hasOwn'\nimport setAttribute from './setAttribute'\n\nconst setAttributes = (el, attrs) => {\n  if (!el || !isObject(attrs)) {\n    return false\n  }\n\n  Object.keys(attrs).forEach((attr) => {\n    const value = attrs[attr]\n    if (hasOwn(attrs, attr)) {\n      setAttribute(el, attr, value)\n    }\n  })\n}\n\nexport default setAttributes\n","import isArray from '../types/isArray'\nimport isString from '../types/isString'\nimport isSVG from '../types/isSVG'\nimport setAttributes from '../dom/setAttributes'\n\n/**\n * 创建 SVG 图标 DOM 元素\n * ========================================================================\n * @method createElement\n * @param {String} name\n * @param {Object} [options]\n * @param {Number|Array} [options.size]\n * @param {String} [options.color]\n * @param {String} [options.iconSet]\n * @param {Object} [options.attrs]\n * @returns {HTMLElement}\n */\nconst createElement = (name, options = {}) => {\n  const ICON = 'outline-icon'\n  const size = options.size || 0\n  const color = options.color || ''\n  const iconSet = options.iconSet || ''\n  const width = isArray(size) ? size[0] : size\n  const height = isArray(size) ? size[1] : size\n  const defaultRules = size ? `width:${width}px;height:${height}px;` : ''\n  const cssRules = color ? defaultRules + `color:${color}` : defaultRules\n  const attrs = options.attrs || {}\n  const $icon = document.createElement('i')\n  let binds = ''\n  let svg = ''\n  let $svg\n\n  if (!isString(name)) {\n    return null\n  }\n\n  if (isSVG(name)) {\n    svg = name\n  } else {\n    binds =\n      iconSet && iconSet !== 'icon'\n        ? `xlink:href=\"#${iconSet}-icon-${name}\"`\n        : `xlink:href=\"#icon-${name}\"`\n    svg = `<svg><use ${binds}></use></svg>`\n  }\n\n  $icon.innerHTML = svg\n\n  if (attrs.className) {\n    attrs.className = `${ICON} ${attrs.className}`\n  } else {\n    attrs.className = ICON\n  }\n\n  setAttributes($icon, attrs)\n\n  $svg = $icon.querySelector('svg')\n  setAttributes($svg, {\n    'aria-hidden': true,\n    xmlns: 'http://www.w3.org/2000/svg',\n    class: 'outline-icon__svg',\n    width: 200,\n    height: 200,\n    style: cssRules\n  })\n\n  return $icon\n}\n\nexport default createElement\n","import isString from './isString'\n\nconst isSVG = (str) => {\n  const declaration = '(?:<\\\\?xml[^>]*>\\\\s*)?'\n  const doctype =\n    '(?:<\\\\!doctype svg[^>]*\\\\s*(?:\\\\[?(?:\\\\s*<![^>]*>\\\\s*)*\\\\]?)*[^>]*>\\\\s*)?'\n  const content = '<svg[^>]*>[^]*<\\\\/svg>\\\\s*$'\n  const svg = `^\\\\s*${declaration}${doctype}${content}\\\\s*$`\n  const pattern = new RegExp(svg, 'i')\n\n  return isString(str) && pattern.test(str)\n}\n\nexport default isSVG\n","import createElement from './createElement'\n\n/**\n * 创建 SVG 图标 DOM 元素\n * ========================================================================\n * @method icon\n * @alias createElement\n * @see createElement\n * @param {String} name\n * @param {Object} [options]\n * @param {Number|Array} [options.size]\n * @param {String} [options.color]\n * @param {String} [options.iconSet]\n * @returns {HTMLElement}\n */\nconst icon = (name, options = {}) => {\n  return createElement(name, options)\n}\n\nexport default icon\n","import isObject from './isObject'\r\nimport isElement from './isElement'\r\nimport isHTMLCollection from './isHTMLCollection'\r\nimport isFragment from './isFragment'\r\nimport isTextNode from './isTextNode'\r\n\r\nconst isDOM = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (isElement(el) || isHTMLCollection(el) || isFragment(el) || isTextNode(el))\r\n  )\r\n}\r\n\r\nexport default isDOM\r\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isHTMLCollection = (el) => {\r\n  return !!(isObject(el) && toString(el) === '[object NodeList]')\r\n}\r\n\r\nexport default isHTMLCollection\r\n","import toString from '../lang/toString'\nimport isObject from './isObject'\n\nconst isFragment = (fragment) => {\n  return !!(\n    isObject(fragment) && toString(fragment) === '[object DocumentFragment]'\n  )\n}\n\nexport default isFragment\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isTextNode = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (toString(el) === '[object Text]' || (el.tagName && el.nodeType === 3))\r\n  )\r\n}\r\n\r\nexport default isTextNode\r\n","import isObject from '../types/isObject'\nimport isString from '../types/isString'\nimport isArray from '../types/isArray'\nimport isDOM from '../types/isDOM'\nimport setAttributes from './setAttributes'\n\n/**\n * 创建 DOM 节点，并添加属性和子节点\n * ========================================================================\n * @method createElement\n * @param {String} tagName - 标签名称\n * @param {Object|Array|HTMLElement|DocumentFragment|String} attrs - 属性对象或者子节点\n * @param {Array|HTMLElement|DocumentFragment|String} [children] - 子节点数组\n * @returns {HTMLElement}\n */\nconst createElement = (tagName, attrs, children) => {\n  const $fragment = document.createDocumentFragment()\n  const $el = document.createElement(tagName)\n  const isValidChild = (child) => {\n    return isDOM(child) || isString(child)\n  }\n  const append = (child) => {\n    let $child\n\n    if (!isValidChild(child)) {\n      return false\n    }\n\n    if (isDOM(child)) {\n      $child = child\n    } else if (isString(child)) {\n      $child = document.createTextNode(child)\n    }\n\n    $fragment.appendChild($child)\n  }\n\n  if (isObject(attrs)) {\n    setAttributes($el, attrs)\n  } else if (isArray(attrs) && attrs.every((attr) => isValidChild(attr))) {\n    attrs.forEach((child) => {\n      append(child)\n    })\n  } else if (isDOM(attrs)) {\n    append(attrs)\n  } else if (isString(attrs)) {\n    append(document.createTextNode(attrs))\n  }\n\n  if (isArray(children)) {\n    children.forEach((child) => {\n      append(child)\n    })\n  } else {\n    append(children)\n  }\n\n  $el.appendChild($fragment)\n\n  return $el\n}\n\nexport default createElement\n","import isElement from '../types/isElement'\n/**\n * 检测 DOM 节点是否包含名为 className 的样式\n * ========================================================================\n * @method hasClass\n * @param {HTMLElement} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst hasClass = (el, className) => {\n  const pattern = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)')\n  let allClass\n  let classList\n\n  if (!isElement(el)) {\n    return false\n  }\n\n  allClass = el.className\n\n  if (!allClass) {\n    return false\n  }\n\n  classList = el.classList\n\n  if (classList?.contains) {\n    return el.classList.contains(className)\n  }\n\n  return !!pattern.exec(allClass)\n}\n\nexport default hasClass\n","import hasClass from './hasClass'\n\n/**\n * 给 DOM 节点添加名为 className 的样式\n * ========================================================================\n * @method addClass\n * @param {HTMLElement} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst addClass = (el, className) => {\n  let classList\n  let allClass\n\n  if (hasClass(el, className)) {\n    return false\n  }\n\n  classList = el.classList\n\n  if (classList?.add) {\n    classList.add(className)\n  } else {\n    allClass = el.className\n    allClass += allClass.length > 0 ? ' ' + className : className\n    el.className = allClass\n  }\n}\n\nexport default addClass\n","import trim from '../lang/trim'\nimport hasClass from './hasClass'\n\n/**\n * 移除 DOM 节点的 className 样式\n * ========================================================================\n * @method removeClass\n * @param {HTMLElement} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst removeClass = (el, className) => {\n  let allClass = el.className\n  let classList\n\n  if (!allClass || !hasClass(el, className)) {\n    return false\n  }\n\n  classList = el.classList\n\n  if (classList?.remove) {\n    classList.remove(className)\n  } else {\n    allClass = trim(allClass.replace(className, ''))\n    el.className = allClass\n  }\n}\n\nexport default removeClass\n","import isString from '../types/isString'\n\n/**\n * 清楚字符串起始位置所有的空格\n * ========================================================================\n * @method trim\n * @param {string} str\n * @returns {string|Boolean}\n */\nconst trim = (str) => {\n  if (!isString(str)) {\n    return false\n  }\n  return str.replace(/(^\\s+)|(\\s+$)/g, '')\n}\n\nexport default trim\n","export const CAPTURE_EVENTS = [\n  'focusout',\n  'blur',\n  'focusin',\n  'focus',\n  'load',\n  'unload',\n  'mouseenter',\n  'mouseleave'\n]\n","import { CAPTURE_EVENTS } from './enum'\nimport _delete from './_delete'\n\n/**\n * （私有方法）取消 type 类型的代理事件绑定\n * ========================================================================\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\n * ========================================================================\n * @method _off\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\n * @param {String} type - （必须）事件类型\n * @param {Function} fn - （必须）事件处理器回调函数\n * @private\n */\nconst _off = (el, type, fn) => {\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\n\n  /* istanbul ignore else */\n  if (fn._delegateListener) {\n    fn = fn._delegateListener\n    delete fn._delegateListener\n  }\n\n  // 移除缓存的 _listeners 数据\n  _delete(el, type, fn)\n\n  el.removeEventListener(type, fn, capture)\n}\n\nexport default _off\n","/**\n * 删除 DOM 元素缓存的 _listeners 数据\n * ========================================================================\n * @method _delete\n * @param {HTMLElement} el - 要删除 listener 的 DOM 元素\n * @param {String} type - 事件类型（名称）\n * @param {Function} [fn] - 事件处理器回调函数\n */\nconst _delete = function (el, type, fn) {\n  const listeners = el._listeners\n  let index = -1\n\n  if (listeners.length < 1) {\n    return false\n  }\n\n  // 移除缓存的 _listeners 数据\n  listeners.forEach((listener, i) => {\n    const handler = listener.fn\n\n    if (type === listener.type) {\n      index = i\n\n      if (handler === fn) {\n        index = i\n      }\n    }\n  })\n\n  /* istanbul ignore else */\n  if (index > -1) {\n    listeners.splice(index, 1)\n  }\n}\n\nexport default _delete\n","import isString from '../types/isString'\nimport isElement from '../types/isElement'\nimport getListeners from './getListeners'\nimport _off from './_off'\n\n/**\n * 销毁（type 类型的）代理事件绑定\n * ========================================================================\n * 1. 设置了事件类型 type，则销毁指定类型的事件绑定，否则清除所有代理事件绑定\n * 2. recurse 设置为 true，递归销毁子节点全部事件绑定\n * ========================================================================\n * @method purgeElement\n * @param {HTMLElement|String} el - （必须）DOM 元素或者其选择器\n * @param {String|Boolean} type - （必须）事件类型\n * @param {Boolean} [recurse] - （可选）是否递归销毁子节点所有事件绑定\n */\nconst purgeElement = function (el, type, recurse = false) {\n  const $element = isString(el) ? document.querySelector(el) : el\n  const $children = $element.childNodes\n  const listeners = getListeners($element, type)\n\n  listeners.forEach((listener) => {\n    _off($element, listener.type, listener.fn)\n  })\n\n  if (\n    (recurse || type === true || arguments.length === 1) &&\n    $element &&\n    $children\n  ) {\n    $children.forEach(($child) => {\n      if (isElement($child)) {\n        purgeElement($child, type, recurse)\n      }\n    })\n  }\n}\n\nexport default purgeElement\n","import isString from '../types/isString'\n\n/**\n * 获取 DOM 元素（type 事件类型）事件绑定信息\n * ========================================================================\n * 如果设置了事件类型 type， 则返回指定类型的事件绑定信息，否则返回所有事件绑定信息\n * ========================================================================\n * @methods getListeners\n * @param {HTMLElement} el - （必须）要获取事件绑定信息的 DOM 元素\n * @param {String} [type] - （可选）事件类型\n * @returns {Array} - 已绑定的事件信息\n */\nconst getListeners = (el, type) => {\n  let listeners = el._listeners || []\n\n  if (isString(type) && type) {\n    listeners = listeners.filter((listener) => {\n      return listener.type === type\n    })\n  }\n\n  return listeners\n}\n\nexport default getListeners\n","import purgeElement from './purgeElement'\nimport isFunction from '../types/isFunction'\nimport _off from './_off'\n\n/**\n * 取消 type 类型的代理事件绑定\n * ========================================================================\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\n * ========================================================================\n * @method off\n * @param {HTMLElement|Object} el - （必须）取消事件绑定的 DOM 元素\n * @param {String} type - （必须）事件类型\n * @param {Function} [fn] - （可选）事件处理器回调函数\n */\nconst off = (el, type, fn) => {\n  // 如果不设置 fn 参数，默认清除 el 元素上绑定的所有事件处理器\n  if (!isFunction(fn)) {\n    return purgeElement(el, type)\n  }\n\n  _off(el, type, fn)\n}\n\nexport default off\n","/**\n * 获取 options 节点下匹配 selector 选择器的 DOM 节点\n * ========================================================================\n * Element.matches() 方法可以用来判断 DOM 元素是否与给定的选择器匹配，事件代理判断是\n * 否触发绑定的代理事件回调函数，关键就是使用 Element.matches() 辨别当前事件触发的目\n * 标 DOM 元素是否为事件代理所期望触发的目标。\n * ========================================================================\n * @method matches\n * @see https://developer.mozilla.org/en-US/docs/web/api/element/matches\n * @param {HTMLElement} el - （必须）DOM 元素\n * @param {String} selector - （必须）匹配 DOM 元素的选择器\n * @returns {Boolean}\n */\nconst matches = (el, selector = '') => {\n  const sel = selector.replace(/^>/i, '')\n\n  if (!selector || !sel || !el) {\n    return false\n  }\n\n  /* istanbul ignore else */\n  if (el.matches) {\n    return el.matches(sel)\n  } else if (el.msMatchesSelector) {\n    return el.msMatchesSelector(sel)\n  } else {\n    return false\n  }\n}\n\nexport default matches\n","/**\n * 获取 DOM 元素的父节点\n * ========================================================================\n * @method getParentOrHost\n * @param {*|HTMLElement} el - （必须）要获取父节点的 DOM 元素\n * @returns {*|HTMLElement}\n */\nconst getParentOrHost = (el) => {\n  return el.host && el !== document && el.host.nodeType\n    ? el.host\n    : el.parentNode\n}\n\nexport default getParentOrHost\n","import closest from '../dom/closest'\nimport off from './off'\nimport getTarget from './getTarget'\n\nimport { CAPTURE_EVENTS } from './enum'\n\n/**\n * 绑定代理事件\n * ========================================================================\n * @method on\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\n * @param {String} selector - （必须）事件代理目标 DOM 元素的选择器\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\n * @param {Function|Object} fn - （可选） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\n * @param {Boolean} once - （可选）是否仅触发一次\n */\nconst on = (el, selector, type, fn, data, context, once = false) => {\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\n\n  const listener = function (evt) {\n    const target = getTarget(evt)\n    // 通过 Element.matches 方法获得点击的目标元素\n    const delegateTarget = closest(target, selector, el)\n    let overrideContext = context || el\n\n    evt.delegateTarget = delegateTarget\n\n    // 当设置为 true 时，则事件处理器回调函数的\n    // this 上下文指向为 data 对象\n    if (context === true) {\n      overrideContext = data\n    }\n\n    /* istanbul ignore else */\n    if (delegateTarget) {\n      // 仅触发一次\n      /* istanbul ignore else */\n      if (once === true) {\n        off(el, type, listener)\n      }\n\n      fn.call(overrideContext, evt, data)\n    }\n  }\n\n  if (!el._listeners) {\n    el._listeners = []\n  }\n\n  // 缓存 options 元素绑定的事件处理器\n  el._listeners.push({\n    el,\n    selector,\n    type,\n    fn: listener,\n    data,\n    context,\n    capture\n  })\n\n  // 缓存包装后的事件处理器\n  fn._delegateListener = listener\n\n  el.addEventListener(type, listener, capture)\n}\n\nexport default on\n","import resolveTextNode from '../dom/resolveTextNode'\n\n/**\n * 返回触发事件的 target DOM 元素\n * ========================================================================\n * @method getTarget\n * @param {Event} evt - Event 对象\n * @return {HTMLElement} - Event 对象的 target DOM 元素\n */\nconst getTarget = function (evt) {\n  const target = evt.target\n\n  return resolveTextNode(target)\n}\n\nexport default getTarget\n","/**\n * 在某些情况下，某些浏览器（例如：Safari 浏览器）会返回实际的目标元素内部的文本节点。\n * resolveTextNode() 方法则会返回实际的目标节点。\n * ========================================================================\n * @method resolveTextNode\n * @param {HTMLElement|Text} el - 要解析的节点\n * @return {*|HTMLElement} - 实际的目标 DOM 节点\n */\nconst resolveTextNode = function (el) {\n  if (el && el.nodeType === 3) {\n    return el.parentNode\n  }\n\n  return el\n}\n\nexport default resolveTextNode\n","import matches from './matches'\nimport getParentOrHost from './getParentOrHost'\n\n/**\n * 获取 options 元素父元素最近的包含 selector 选择器的元素\n * ========================================================================\n * @method closest\n * @param {HTMLElement} el - （必须）DOM 元素\n * @param {String} selector - （必须）DOM 元素的选择其\n * @param {HTMLElement} [ctx] - （必须）比对的 DOM 元素\n * @param {Boolean} [includeCTX] - （必须）是否包含 context DOM 元素\n * @returns {null|HTMLElement} - 返回最接近的 DOM 元素\n */\nconst closest = (el, selector, ctx, includeCTX) => {\n  const context = ctx || document\n\n  if (!el) {\n    return null\n  }\n\n  do {\n    /* istanbul ignore else */\n    if (\n      (selector != null &&\n        (selector.startsWith('>')\n          ? el.parentNode === context && matches(el, selector)\n          : matches(el, selector))) ||\n      (includeCTX && el === context)\n    ) {\n      return el\n    }\n\n    /* istanbul ignore else */\n    if (el === context) {\n      break\n    }\n\n    /* jshint boss:true */\n  } while ((el = getParentOrHost(el)))\n}\n\nexport default closest\n","import hasOwn from './hasOwn'\n\n/**\n * 扩展对象\n * ========================================================================\n * @method extend\n * @param {Object} origin\n * @param {Object} source\n */\nconst extend = (origin, source) => {\n  const keys = Object.keys(source)\n\n  keys.forEach((prop) => {\n    if (hasOwn(source, prop)) {\n      origin[prop] = source[prop]\n    }\n  })\n}\n\nexport default extend\n","/**\n * 存储订阅者（主题和处理器的）私有对象\n * ========================================================================\n * @type {{}}\n * @private\n */\nconst _subscribers = {}\n\nexport default _subscribers\n","import _subscribers from './_subscribers'\nimport hasOwn from '../lang/hasOwn'\n\n/**\n * 判断是否存在与给定 topic 完全匹配的订阅者信息\n * ========================================================================\n * @method _hasDirectSubscribersFor\n * @param {String} topic - （必须）订阅主题字符串\n * @returns {Boolean}\n */\nconst _hasDirectSubscribersFor = (topic) => {\n  return hasOwn(_subscribers, topic) && _subscribers[topic].length > 0\n}\n\nexport default _hasDirectSubscribersFor\n","import _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\nimport _hasSubscribers from './_hasSubscribers'\n\n/**\n * 判断是否存在包含 topic 指定的订阅者信息\n * ========================================================================\n * @method has\n * @param {String} topic - （必须）主题名称\n * @param {Boolean} [isDirect] - （可选）是否为直接的主题，默认值：true\n * @returns {Boolean}\n */\nconst has = (topic, isDirect = true) => {\n  return isDirect ? _hasDirectSubscribersFor(topic) : _hasSubscribers(topic)\n}\n\nexport default has\n","import _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\n\n/**\n * 判断是否存在包含给定 topic 相关的订阅者信息\n * ========================================================================\n * @method _hasSubscribers\n * @param {String} topic - （必须）订阅主题字符串\n * @returns {Boolean}\n */\nconst _hasSubscribers = (topic) => {\n  let found = _hasDirectSubscribersFor(topic)\n  let position = topic.lastIndexOf('.')\n\n  while (!found && position !== -1) {\n    topic = topic.substring(0, position)\n    position = topic.lastIndexOf('.')\n    found = _hasDirectSubscribersFor(topic)\n  }\n\n  return found\n}\n\nexport default _hasSubscribers\n","import isTypedArray from '../types/isTypedArray'\nimport _subscribers from './_subscribers'\nimport has from './has'\nimport _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\n\n/**\n * （异步）发布订阅主题信息\n * ========================================================================\n * 主题默认是异步发布的。确保在消费者处理主题时，主题的发起者不会被阻止。\n * ========================================================================\n * @method emit\n * @param {String} topic - （必须）主题名称\n * @param {Object} [data] - （可选）数据对象\n * @param {Boolean} [async] - (可选) 是否异步发布\n */\nconst emit = (topic, data, async = true) => {\n  const execute = (topic) => {\n    if (!_hasDirectSubscribersFor(topic)) {\n      return false\n    }\n\n    _subscribers[topic].forEach((subscriber) => {\n      // 针对 mqtt 消息服务返回的 Uint8Array 类似的 typed arrays 格式的数据\n      // 采用 toString() 方法转化为普通（JSON）字符串\n      const message = isTypedArray(data) ? data.toString() : data\n\n      subscriber.callback.call(subscriber.context || subscriber, message)\n    })\n  }\n  const deliver = () => {\n    let subscriber = topic\n    let position = topic.lastIndexOf('.')\n\n    while (position !== -1) {\n      subscriber = subscriber.substring(0, position)\n      position = subscriber.lastIndexOf('.')\n\n      execute(subscriber)\n    }\n\n    // 执行 topic 对应的处理器\n    execute(topic)\n    // 执行特殊 topic：'*'（监听全部消息的发布）\n    execute('*')\n  }\n\n  if (!has(topic)) {\n    return false\n  }\n\n  if (async) {\n    setTimeout(deliver, 10)\n  } else {\n    deliver()\n  }\n}\n\nexport default emit\n","import toString from '../lang/toString'\n/**\n * 判断检测数据是否为 Typed Arrays 类型的数据\n * ========================================================================\n * @param {*} val\n * @returns {boolean}\n */\nconst isTypedArray = (val) => {\n  const TYPES = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]',\n    '[object BigInt64Array]',\n    '[object BigUint64Array]'\n  ]\n\n  return TYPES.indexOf(toString(val)) > -1\n}\n\nexport default isTypedArray\n","/**\n * 生成唯一 id 字符串的函数\n * ========================================================================\n * @method guid\n * @param {String} [prefix] - 生成 id 的前缀字符串\n * @return {String} 返回一个表示唯一 id 的字符串\n */\nconst guid = (() => {\n  let uuid = 0\n\n  return (prefix) => {\n    uuid += 1\n\n    return prefix ? prefix + '-' + uuid : 'guid-' + uuid\n  }\n})()\n\nexport default guid\n","import _subscribers from './_subscribers'\nimport hasOwn from '../lang/hasOwn'\n\n/**\n * 删除与给定 topic 相同的订阅者信息\n * ========================================================================\n * @method _removeSubscriber\n * @param {String} topic - （必须）订阅主题字符串\n * @returns {Boolean}\n */\nconst _removeSubscriber = (topic) => {\n  if (!hasOwn(_subscribers, topic)) {\n    return false\n  }\n\n  delete _subscribers[topic]\n}\n\nexport default _removeSubscriber\n","import has from './has'\nimport _removeSubscriber from './_removeSubscriber'\nimport _removeSubscriberByToken from './_removeSubscriberByToken'\n\n/**\n * 取消订阅主题\n * ========================================================================\n * @method off\n * @param {String} topic - （必须）订阅的主题\n * @param {Function|String} [token] - （可选）订阅主题的处理器函数或者唯一 Id 值\n */\nconst off = (topic, token) => {\n  if (!has(topic)) {\n    return false\n  }\n\n  if (token) {\n    _removeSubscriberByToken(token)\n  } else {\n    _removeSubscriber(topic)\n  }\n}\n\nexport default off\n","import _subscribers from './_subscribers'\nimport _removeSubscriber from './_removeSubscriber'\n\n/**\n * 通过订阅者 token 值删除订阅者信息\n * ========================================================================\n * @method _removeSubscriberByToken\n * @param {String} token - 订阅者 token 字符串\n * @returns {boolean}\n * @private\n */\nconst _removeSubscriberByToken = (token) => {\n  const keys = Object.keys(_subscribers)\n  let index = -1\n\n  if (!token || keys.length < 1) {\n    return false\n  }\n\n  keys.forEach((subject) => {\n    const subscriber = _subscribers[subject]\n    let topic\n\n    subscriber.forEach((execution, j) => {\n      if (execution.callback === token || execution.token === token) {\n        topic = execution.topic\n        subscriber.splice(index, j)\n      }\n    })\n\n    /* istanbul ignore else */\n    if (subscriber.length < 1) {\n      _removeSubscriber(topic)\n    }\n  })\n}\n\nexport default _removeSubscriberByToken\n","import isString from './utils/types/isString'\r\nimport hasOwn from './utils/lang/hasOwn'\r\nimport isObject from './utils/types/isObject'\r\nimport extend from './utils/lang/extend'\r\nimport publish from './utils/observer/emit'\r\nimport subscribe from './utils/observer/on'\r\nimport unsubscribe from './utils/observer/off'\r\n\r\nclass Base {\r\n  constructor(options) {\r\n    this.attrs = {}\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    this.attr(options).render().addListeners()\r\n    return this\r\n  }\r\n\r\n  attr(prop, value) {\r\n    const attrs = this.attrs\r\n\r\n    if (isString(prop)) {\r\n      // 只能扩展 attrs 中已有的属性\r\n      if (value && hasOwn(attrs, prop)) {\r\n        // 更新单个配置信息\r\n        attrs[prop] = value\r\n        return this\r\n      }\r\n\r\n      // 只传递 prop 参数，则返回对应的属性值\r\n      return attrs[prop]\r\n    } else if (isObject(prop)) {\r\n      // 批量更新配置信息\r\n      extend(attrs, prop)\r\n\r\n      return this\r\n    } else if (arguments.length === 0) {\r\n      // 不传递参数，直接返回整个\r\n      return attrs\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  render() {\r\n    return this\r\n  }\r\n\r\n  refresh() {\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    this.removeListeners()\r\n    return this\r\n  }\r\n\r\n  reload(options) {\r\n    this.destroy().initialize(options)\r\n    return this\r\n  }\r\n\r\n  $emit(event, data) {\r\n    publish(event, data)\r\n    return this\r\n  }\r\n\r\n  $on(event, callback) {\r\n    subscribe(event, callback, this)\r\n    return this\r\n  }\r\n\r\n  $off(event, callback) {\r\n    unsubscribe(event, callback)\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    return this\r\n  }\r\n}\r\n\r\nexport default Base\r\n","import _subscribers from './_subscribers'\nimport isFunction from '../types/isFunction'\nimport guid from '../lang/guid'\n\n/**\n * 订阅主题，并给出处理器函数\n * ========================================================================\n * @method on\n * @param {String} topic - （必须）主题名称\n * @param {Function} handler - （必须）主题的处理器函数\n * @param {Object} [context] - （可选）指定 this 执行上下文\n * @return {String} - 唯一的 token 字符串，例如：'guid-1'。\n */\nconst on = (topic, handler, context = null) => {\n  const token = guid()\n  let subject = typeof topic === 'symbol' ? topic.toString() : topic\n\n  if (!isFunction(handler)) {\n    return ''\n  }\n\n  /* istanbul ignore else */\n  if (!_subscribers[subject]) {\n    _subscribers[subject] = []\n  }\n\n  _subscribers[subject].push({\n    topic: subject,\n    callback: handler,\n    context,\n    token\n  })\n\n  return token\n}\n\nexport default on\n","import isObject from './isObject'\n\n/**\n * 检测测试数据是否为类似 Object 类型\n * ========================================================================\n * @method isObjectLike\n * @param {Object} val - 要检测的数据\n * @returns {Boolean} 'val' 是类似 Object 类型，返回 true，否则返回 false\n */\nconst isObjectLike = (val) => {\n  return isObject(val) && val !== null\n}\n\nexport default isObjectLike\n","import isObjectLike from './isObjectLike'\n\n/**\n * 检测测试数据是否为普通对象\n * ========================================================================\n * @method isPlainObject\n * @param {Object} val - 要检测的数据\n * @returns {Boolean} 'val' 是普通对象，返回 true，否则返回 false\n */\nconst isPlainObject = (val) => {\n  const getPrototypeOf = Object.getPrototypeOf\n  let proto\n\n  // Detect obvious negatives\n  if (!isObjectLike(val)) {\n    return false\n  }\n\n  proto = val.prototype\n\n  // JavaScript 对象分为两种：普通对象和函数对象\n  // 普通对象：原型是 __proto__，没有 prototype 原型（属性）\n  // 函数对象：原型是 prototype ，prototype 只存在于函数对象上\n  if (!proto) {\n    return true\n  }\n\n  proto = val\n\n  while (getPrototypeOf(proto) !== null) {\n    proto = getPrototypeOf(proto)\n  }\n\n  return getPrototypeOf(val) === proto\n}\n\nexport default isPlainObject\n","/**\r\n * 移除字符串中的 JavaScript 代码\r\n * ====================================================\r\n * @param {String} str\r\n * @returns {String}\r\n */\r\nconst stripScripts = (str) => {\r\n  return str.replace(/<script[^>]*>.*?<\\/script>/gi, '')\r\n}\r\n\r\nexport default stripScripts\r\n","/**\r\n * 转义字符串中的 HTML 标签\r\n *\r\n * @param {String} str - 需要转义的字符串\r\n * @returns {String}\r\n */\r\nconst encodeHTML = (str) => {\r\n  const CHARTS = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    \"'\": '&#39;',\r\n    '\"': '&quot;'\r\n  }\r\n\r\n  return str.replace(/[&<>'\"]/g, (tag) => {\r\n    return CHARTS[tag] || tag\r\n  })\r\n}\r\n\r\nexport default encodeHTML\r\n","import DEFAULTS from './defaults'\n\nconst SYMBOLS = [...DEFAULTS]\n\nexport default SYMBOLS\n","const DEFAULTS = [\n  '<symbol id=\"outline-icon-up\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 261.696c0.832-0.448 1.536-1.216 2.368-1.536a38.72 38.72 0 0 1 46.08 8.256l277.824 302.272a41.92 41.92 0 0 1-1.536 58.048 39.104 39.104 0 0 1-56.448-1.6L513.728 355.904 260.736 626.048a39.104 39.104 0 0 1-56.448 1.088 41.6 41.6 0 0 1-1.088-57.984L483.84 269.696c0.512-0.512 1.344-0.768 1.92-1.408l1.088-1.344c2.368-2.496 5.312-3.648 8-5.248z\"></path></symbol>',\n  '<symbol id=\"outline-icon-down\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 762.304c0.832 0.448 1.536 1.216 2.368 1.536 15.232 7.488 33.92 4.992 46.08-8.256l277.824-302.272a41.92 41.92 0 0 0-1.536-58.048 39.104 39.104 0 0 0-56.448 1.6l-249.344 271.232-252.992-270.144a39.104 39.104 0 0 0-56.448-1.088 41.6 41.6 0 0 0-1.088 57.984l280.576 299.456c0.512 0.512 1.344 0.768 1.92 1.408l1.088 1.344c2.368 2.496 5.312 3.648 8 5.248z\"></path></symbol>',\n  '<symbol id=\"outline-icon-menu\" viewBox=\"0 0 1024 1024\"><path d=\"M320 256h640V128H320zM320 576h640V448H320zM320 896h640v-128H320zM64 256h128V128H64zM64 576h128V448H64zM64 896h128v-128H64z\"></path></symbol>',\n  '<symbol id=\"outline-icon-file\" viewBox=\"0 0 1024 1024\"><path d=\"M320 640h256v128H320z\"></path><path d=\"M320 448h384v128H320z\"></path><path d=\"M640 0l320 320v557.696C960 958.528 909.824 1024 848 1024H176C114.176 1024 64 958.528 64 877.696V146.304C64 65.472 114.176 0 176 0H640z m0 128H192v768h640V320h-192V128z\"></path></symbol>',\n  '<symbol id=\"outline-icon-hash\" viewBox=\"0 0 24 24\"><path d=\"M14.216 10l-0.444 4h-3.988l0.444-4zM15.006 2.89l-0.568 5.11h-3.988l0.543-4.89c0.061-0.549-0.335-1.043-0.883-1.104s-1.043 0.335-1.104 0.884l-0.568 5.11h-4.438c-0.552 0-1 0.448-1 1s0.448 1 1 1h4.216l-0.444 4h-3.772c-0.552 0-1 0.448-1 1s0.448 1 1 1h3.549l-0.543 4.89c-0.061 0.549 0.335 1.043 0.883 1.104s1.043-0.335 1.104-0.883l0.569-5.111h3.988l-0.543 4.89c-0.061 0.549 0.335 1.043 0.883 1.104s1.043-0.335 1.104-0.883l0.568-5.111h4.438c0.552 0 1-0.448 1-1s-0.448-1-1-1h-4.216l0.444-4h3.772c0.552 0 1-0.448 1-1s-0.448-1-1-1h-3.549l0.543-4.89c0.061-0.549-0.335-1.043-0.883-1.104s-1.043 0.335-1.104 0.883z\"></path></symbol>',\n  '<symbol id=\"outline-icon-close\" viewBox=\"0 0 1024 1024\"><path d=\"M536.96 491.648L310.592 265.344a32 32 0 1 0-45.248 45.248L491.584 536.96l-226.304 226.304a32 32 0 0 0 45.312 45.248l226.24-226.304 226.304 226.304a32 32 0 0 0 45.248-45.248L582.144 536.896l226.304-226.24a32 32 0 0 0-45.248-45.248L536.896 491.584z\"></path></symbol>',\n  '<symbol id=\"outline-icon-homepage\" viewBox=\"0 0 26 28\"><path d=\"M22 15.5v7.5c0 0.547-0.453 1-1 1h-6v-6h-4v6h-6c-0.547 0-1-0.453-1-1v-7.5c0-0.031 0.016-0.063 0.016-0.094l8.984-7.406 8.984 7.406c0.016 0.031 0.016 0.063 0.016 0.094zM25.484 14.422l-0.969 1.156c-0.078 0.094-0.203 0.156-0.328 0.172h-0.047c-0.125 0-0.234-0.031-0.328-0.109l-10.813-9.016-10.813 9.016c-0.109 0.078-0.234 0.125-0.375 0.109-0.125-0.016-0.25-0.078-0.328-0.172l-0.969-1.156c-0.172-0.203-0.141-0.531 0.063-0.703l11.234-9.359c0.656-0.547 1.719-0.547 2.375 0l3.813 3.187v-3.047c0-0.281 0.219-0.5 0.5-0.5h3c0.281 0 0.5 0.219 0.5 0.5v6.375l3.422 2.844c0.203 0.172 0.234 0.5 0.063 0.703z\"></path></symbol>',\n  '<symbol id=\"outline-icon-github\" viewBox=\"0 0 24 28\"><path d=\"M12 2c6.625 0 12 5.375 12 12 0 5.297-3.437 9.797-8.203 11.391-0.609 0.109-0.828-0.266-0.828-0.578 0-0.391 0.016-1.687 0.016-3.297 0-1.125-0.375-1.844-0.812-2.219 2.672-0.297 5.484-1.313 5.484-5.922 0-1.313-0.469-2.375-1.234-3.219 0.125-0.313 0.531-1.531-0.125-3.187-1-0.313-3.297 1.234-3.297 1.234-0.953-0.266-1.984-0.406-3-0.406s-2.047 0.141-3 0.406c0 0-2.297-1.547-3.297-1.234-0.656 1.656-0.25 2.875-0.125 3.187-0.766 0.844-1.234 1.906-1.234 3.219 0 4.594 2.797 5.625 5.469 5.922-0.344 0.313-0.656 0.844-0.766 1.609-0.688 0.313-2.438 0.844-3.484-1-0.656-1.141-1.844-1.234-1.844-1.234-1.172-0.016-0.078 0.734-0.078 0.734 0.781 0.359 1.328 1.75 1.328 1.75 0.703 2.141 4.047 1.422 4.047 1.422 0 1 0.016 1.937 0.016 2.234 0 0.313-0.219 0.688-0.828 0.578-4.766-1.594-8.203-6.094-8.203-11.391 0-6.625 5.375-12 12-12zM4.547 19.234c0.031-0.063-0.016-0.141-0.109-0.187-0.094-0.031-0.172-0.016-0.203 0.031-0.031 0.063 0.016 0.141 0.109 0.187 0.078 0.047 0.172 0.031 0.203-0.031zM5.031 19.766c0.063-0.047 0.047-0.156-0.031-0.25-0.078-0.078-0.187-0.109-0.25-0.047-0.063 0.047-0.047 0.156 0.031 0.25 0.078 0.078 0.187 0.109 0.25 0.047zM5.5 20.469c0.078-0.063 0.078-0.187 0-0.297-0.063-0.109-0.187-0.156-0.266-0.094-0.078 0.047-0.078 0.172 0 0.281s0.203 0.156 0.266 0.109zM6.156 21.125c0.063-0.063 0.031-0.203-0.063-0.297-0.109-0.109-0.25-0.125-0.313-0.047-0.078 0.063-0.047 0.203 0.063 0.297 0.109 0.109 0.25 0.125 0.313 0.047zM7.047 21.516c0.031-0.094-0.063-0.203-0.203-0.25-0.125-0.031-0.266 0.016-0.297 0.109s0.063 0.203 0.203 0.234c0.125 0.047 0.266 0 0.297-0.094zM8.031 21.594c0-0.109-0.125-0.187-0.266-0.172-0.141 0-0.25 0.078-0.25 0.172 0 0.109 0.109 0.187 0.266 0.172 0.141 0 0.25-0.078 0.25-0.172zM8.937 21.438c-0.016-0.094-0.141-0.156-0.281-0.141-0.141 0.031-0.234 0.125-0.219 0.234 0.016 0.094 0.141 0.156 0.281 0.125s0.234-0.125 0.219-0.219z\"></path></symbol>',\n  '<symbol id=\"outline-icon-issues\" viewBox=\"0 0 24 28\"><path d=\"M25.5 15c0 0.547-0.453 1-1 1h-3.5c0 1.953-0.422 3.422-1.047 4.531l3.25 3.266c0.391 0.391 0.391 1.016 0 1.406-0.187 0.203-0.453 0.297-0.703 0.297s-0.516-0.094-0.703-0.297l-3.094-3.078s-2.047 1.875-4.703 1.875v-14h-2v14c-2.828 0-4.891-2.063-4.891-2.063l-2.859 3.234c-0.203 0.219-0.469 0.328-0.75 0.328-0.234 0-0.469-0.078-0.672-0.25-0.406-0.375-0.438-1-0.078-1.422l3.156-3.547c-0.547-1.078-0.906-2.469-0.906-4.281h-3.5c-0.547 0-1-0.453-1-1s0.453-1 1-1h3.5v-4.594l-2.703-2.703c-0.391-0.391-0.391-1.016 0-1.406s1.016-0.391 1.406 0l2.703 2.703h13.188l2.703-2.703c0.391-0.391 1.016-0.391 1.406 0s0.391 1.016 0 1.406l-2.703 2.703v4.594h3.5c0.547 0 1 0.453 1 1zM18 6h-10c0-2.766 2.234-5 5-5s5 2.234 5 5z\"></path></symbol>',\n  '<symbol id=\"outline-icon-tags\" viewBox=\"0 0 26 28\"><path d=\"M7 7c0-1.109-0.891-2-2-2s-2 0.891-2 2 0.891 2 2 2 2-0.891 2-2zM23.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578s-1.047-0.219-1.406-0.578l-11.172-11.188c-0.797-0.781-1.422-2.297-1.422-3.406v-6.5c0-1.094 0.906-2 2-2h6.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422zM29.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578-0.812 0-1.219-0.375-1.75-0.922l7.344-7.344c0.359-0.359 0.578-0.875 0.578-1.406s-0.219-1.047-0.578-1.422l-11.172-11.156c-0.797-0.797-2.312-1.422-3.422-1.422h3.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422z\"></path></symbol>',\n  '<symbol id=\"outline-icon-print\" viewBox=\"0 0 24 24\"><path d=\"M18 3v3.984h-12v-3.984h12zM18.984 12q0.422 0 0.727-0.281t0.305-0.703-0.305-0.727-0.727-0.305-0.703 0.305-0.281 0.727 0.281 0.703 0.703 0.281zM15.984 18.984v-4.969h-7.969v4.969h7.969zM18.984 8.016q1.219 0 2.109 0.891t0.891 2.109v6h-3.984v3.984h-12v-3.984h-3.984v-6q0-1.219 0.891-2.109t2.109-0.891h13.969z\"></path></symbol>',\n  '<symbol id=\"outline-icon-info\" viewBox=\"0 0 1024 1024\"><path d=\"M512 384.295982a95.994 95.994 0 0 1 95.994 95.994V928.006a95.994 95.994 0 0 1-191.988 0V480.289982a95.994 95.994 0 0 1 95.994-95.994z m0-128.375977A127.992 127.992 0 1 1 512 0.063996a127.992 127.992 0 0 1 0 255.984001z\"></path></symbol>',\n  '<symbol id=\"outline-icon-warning\" viewBox=\"0 0 1024 1024\"><path d=\"M512 639.704018a95.994 95.994 0 0 1-95.994-95.994V95.994a95.994 95.994 0 0 1 191.988 0v447.716018a95.994 95.994 0 0 1-95.994 95.994z m0 128.375977A127.992 127.992 0 1 1 512 1023.936004a127.992 127.992 0 0 1 0-255.984001z\"></path></symbol>',\n  '<symbol id=\"outline-icon-error\" viewBox=\"0 0 1024 1024\"><path d=\"M512.64 376.96L263.744 128 128 263.744l248.96 248.96L128 761.472l135.744 135.808 248.96-248.96 248.832 248.96 135.808-135.808-248.96-248.896 248.96-248.896L761.536 128 512.64 376.96z\"></path></symbol>',\n  '<symbol id=\"outline-icon-success\" viewBox=\"0 0 1024 1024\"><path d=\"M426.368 580.864l-226.56-226.56L64 489.984l362.048 362.112 0.32-0.32 0.32 0.32 588.288-588.352L879.36 128 426.304 580.864z\"></path></symbol>',\n  '<symbol id=\"outline-icon-circle-info\" viewBox=\"0 0 1024 1024\"><path d=\"M512 810.666667s-42.666667 4.266667-42.666667-42.666667v-341.333333c0-46.933333 42.666667-42.666667 42.666667-42.666667s42.666667-4.266667 42.666667 42.666667v341.333333c0 46.933333-42.666667 42.666667-42.666667 42.666667z m0 213.333333C228.949333 1024 0 795.050667 0 512S228.949333 0 512 0s512 228.949333 512 512-229.674667 512-512 512z m0-938.666667C276.608 85.333333 85.333333 276.608 85.333333 512s191.274667 426.666667 426.666667 426.666667 426.666667-191.274667 426.666667-426.666667S747.392 85.333333 512 85.333333z m0 213.333334c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666667 42.666667 19.2 42.666667 42.666667-19.2 42.666667-42.666667 42.666667z\"></path></symbol>',\n  '<symbol id=\"outline-icon-circle-warning\" viewBox=\"0 0 1024 1024\"><path d=\"M512 213.333333s-42.666667-4.266667-42.666667 42.666667v341.333333c0 46.933333 42.666667 42.666667 42.666667 42.666667s42.666667 4.266667 42.666667-42.666667V256c0-46.933333-42.666667-42.666667-42.666667-42.666667z m0-213.333333C228.949333 0 0 228.949333 0 512s228.949333 512 512 512 512-228.949333 512-512S794.325333 0 512 0z m0 938.666667C276.608 938.666667 85.333333 747.392 85.333333 512S276.608 85.333333 512 85.333333s426.666667 191.274667 426.666667 426.666667-191.274667 426.666667-426.666667 426.666667z m0-213.333334c-23.466667 0-42.666667 19.2-42.666667 42.666667s19.2 42.666667 42.666667 42.666667 42.666667-19.2 42.666667-42.666667-19.2-42.666667-42.666667-42.666667z\"></path></symbol>',\n  '<symbol id=\"outline-icon-circle-error\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0a512 512 0 1 0 512 512 512 512 0 0 0-512-512z m0 955.776A443.84 443.84 0 0 1 512 68.224a443.904 443.904 0 0 1 0 887.552z\"></path><path d=\"M641.664 326.144a32 32 0 0 1 50.304 39.168l-3.52 4.48-306.112 328.064a32 32 0 0 1-50.304-39.168l3.52-4.48 306.112-328.064z\"></path><path d=\"M324.608 337.088a32 32 0 0 1 40.704-5.12l4.48 3.584 328.064 306.112a32 32 0 0 1-39.168 50.304l-4.48-3.52-328.064-306.112a32 32 0 0 1-1.536-45.248z\"></path></symbol>',\n  '<symbol id=\"outline-icon-circle-success\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0C228.949333 0 0 228.949333 0 512s228.949333 512 512 512 512-228.949333 512-512S794.325333 0 512 0z m0 950.869333C269.909333 950.869333 73.130667 754.090667 73.130667 512 73.130667 269.909333 269.909333 73.130667 512 73.130667c242.090667 0 438.869333 196.778667 438.869333 438.869333 0 242.090667-196.778667 438.869333-438.869333 438.869333z\"></path><path d=\"M737.834667 353.834667a42.666667 42.666667 0 0 1 63.872 56.32l-3.541334 4.010666L486.997333 725.333333a85.333333 85.333333 0 0 1-115.242666 4.992L366.336 725.333333l-140.501333-140.501333a42.666667 42.666667 0 0 1 56.32-63.872l4.010666 3.541333L426.666667 665.002667l311.168-311.168z\"></path></symbol>'\n]\n\nexport default DEFAULTS\n","import isString from '../types/isString'\nimport getSymbol from './getSymbol'\nimport SYMBOLS from './symbols'\n\n/**\n *\n * @method getSymbols\n * @param {String} [name]\n * @param {String} [iconSet]\n * @returns {string[]|*}\n */\nconst getSymbols = (name, iconSet = 'icon') => {\n  if (isString(name)) {\n    return getSymbol(name, iconSet)\n  }\n\n  return [...SYMBOLS]\n}\n\nexport default getSymbols\n","import SYMBOLS from './symbols'\n\n/**\n * @method getSymbol\n * @param {String} name\n * @param {String} [iconSet]\n * @returns {String}\n */\nconst getSymbol = (name, iconSet = 'icon') => {\n  const patternName = /id=\"(.*?)\"/\n  const patternSet = /^(\\w+)-/\n  const symbols = SYMBOLS\n\n  return symbols.find((symbol) => {\n    const names = patternName.exec(symbol)\n    const fullName = names[1]\n    const sets = patternSet.exec(fullName)\n    const setName = sets[1]\n    const iconName =\n      iconSet === 'icon' ? `${iconSet}-${name}` : `${iconSet}-icon-${name}`\n\n    return setName === iconSet && fullName === iconName\n  })\n}\n\nexport default getSymbol\n","import isString from './utils/types/isString'\r\nimport isPlainObject from './utils/types/isPlainObject'\r\nimport isFunction from './utils/types/isFunction'\r\n\r\nimport extend from './utils/lang/extend'\r\nimport later from './utils/lang/later'\r\nimport stripScripts from './utils/lang/stripScripts'\r\nimport encodeHTML from './utils/lang/encodeHTML'\r\nimport cloneDeep from './utils/lang/cloneDeep'\r\nimport guid from './utils/lang/guid'\r\n\r\nimport createElement from './utils/dom/createElement'\r\nimport addClass from './utils/dom/addClass'\r\nimport removeClass from './utils/dom/removeClass'\r\nimport setAttribute from './utils/dom/setAttribute'\r\nimport setAttributes from './utils/dom/setAttributes'\r\n\r\nimport icon from './utils/icons/icon'\r\nimport paint from './utils/icons/paint'\r\nimport on from './utils/event/on'\r\nimport off from './utils/event/off'\r\n\r\nimport Base from './base'\r\n\r\nconst TYPES = ['info', 'success', 'warning', 'error']\r\nconst instances = []\r\nlet instance\r\n\r\npaint()\r\n\r\nclass Message extends Base {\r\n  constructor(options) {\r\n    super()\r\n\r\n    this._default()\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  _default() {\r\n    this.attrs = cloneDeep(Message.DEFAULTS)\r\n\r\n    this.$el = null\r\n    this.id = ''\r\n    this.closed = false\r\n    this.visible = false\r\n    this.offset = -50\r\n    this.timer = null\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  initialize(options) {\r\n    this.attr(options)\r\n    this.id = this.attr('id')\r\n    this.offset = this.attr('offset') || -50\r\n\r\n    this.$emit('created', { ...this.attr() })\r\n\r\n    this.render().addListeners()\r\n\r\n    if (this.attr('visible')) {\r\n      this.open()\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  isClosed() {\r\n    return this.closed\r\n  }\r\n\r\n  isDestroyed() {\r\n    return this.destroyed\r\n  }\r\n\r\n  _getClassName() {\r\n    const type = this.attr('type')\r\n    const effect = this.attr('effect')\r\n    const round = this.attr('round')\r\n    const closable = this.attr('closable')\r\n    const visible = this.attr('visible')\r\n    const customClass = this.attr('customClass')\r\n    const className = [\r\n      'outline-message',\r\n      `outline-message_${type}`,\r\n      `outline-message_${effect}`\r\n    ]\r\n\r\n    if (round) {\r\n      className.push('outline-message_round')\r\n    }\r\n\r\n    if (!closable) {\r\n      className.push('outline-message_full-width')\r\n    }\r\n\r\n    if (visible) {\r\n      className.push('outline-message_visible')\r\n    }\r\n\r\n    if (customClass) {\r\n      className.push(customClass)\r\n    }\r\n\r\n    return className\r\n  }\r\n\r\n  render() {\r\n    const type = this.attr('type')\r\n    const message = this.attr('message')\r\n    const effect = this.attr('effect')\r\n    const round = this.attr('round')\r\n    const closable = this.attr('closable')\r\n    const dangerouslyUseHTMLString = this.attr('dangerouslyUseHTMLString')\r\n    const className = this._getClassName()\r\n    const iconName = effect === 'light' ? `circle-${type}` : type\r\n    const children = []\r\n    let iconSize = 20\r\n    let $type\r\n    let $message\r\n    let $text\r\n    let $close\r\n    let $el\r\n\r\n    if (round && effect === 'default') {\r\n      iconSize = 12\r\n    }\r\n\r\n    if (effect !== 'plain') {\r\n      $type = icon(iconName, {\r\n        iconSet: 'outline',\r\n        size: iconSize\r\n      })\r\n      addClass($type, 'outline-message__icon')\r\n      children.push($type)\r\n    }\r\n\r\n    if (!dangerouslyUseHTMLString) {\r\n      $text = document.createTextNode(encodeHTML(stripScripts(message)))\r\n    } else {\r\n      $text = document.createDocumentFragment()\r\n      $text.innerHTML = message\r\n    }\r\n    $message = createElement(\r\n      'p',\r\n      {\r\n        className: 'outline-message__content'\r\n      },\r\n      [$text]\r\n    )\r\n    children.push($message)\r\n\r\n    if (closable) {\r\n      $close = icon('close', {\r\n        iconSet: 'outline',\r\n        size: 18\r\n      })\r\n      addClass($close, 'outline-message__close')\r\n      children.push($close)\r\n    }\r\n\r\n    $el = createElement(\r\n      'div',\r\n      {\r\n        className: className.join(' ')\r\n      },\r\n      children\r\n    )\r\n    $el.style.cssText = `top:-50px;`\r\n    this.$el = $el\r\n    document.body.appendChild(this.$el)\r\n\r\n    this.$emit('mounted')\r\n\r\n    return this\r\n  }\r\n\r\n  _refreshIcon() {\r\n    const HIDDEN = '.outline-message_hidden'\r\n    const $el = this.$el\r\n    let iconSize = 20\r\n    let type\r\n    let effect\r\n    let round\r\n    let iconName\r\n    let $icon\r\n    let $svg\r\n    let $use\r\n\r\n    if (this.isDestroyed()) {\r\n      return this\r\n    }\r\n\r\n    $icon = $el.querySelector('.outline-icon')\r\n\r\n    if (!$icon) {\r\n      return this\r\n    }\r\n\r\n    type = this.attr('type')\r\n    effect = this.attr('effect')\r\n    round = this.attr('round')\r\n\r\n    if (effect === 'plain') {\r\n      addClass($icon, HIDDEN)\r\n    } else {\r\n      removeClass($icon, HIDDEN)\r\n\r\n      if (round && effect === 'default') {\r\n        iconSize = 12\r\n      }\r\n    }\r\n\r\n    $svg = $icon.querySelector('.outline-icon__svg')\r\n    setAttributes($svg, {\r\n      style: `width:${iconSize}px;height:${iconSize}px;`\r\n    })\r\n\r\n    $use = $svg.querySelector('use')\r\n    iconName = effect === 'light' ? `circle-${type}` : type\r\n    setAttribute($use, 'xlink:href', `#outline-icon-${iconName}`)\r\n\r\n    return this\r\n  }\r\n\r\n  _refreshMessage() {\r\n    const $el = this.$el\r\n    let $message\r\n    let dangerouslyUseHTMLString\r\n    let message\r\n    let text\r\n\r\n    if (this.isDestroyed()) {\r\n      return this\r\n    }\r\n\r\n    $message = $el.querySelector('.outline-message__content')\r\n    dangerouslyUseHTMLString = this.attr('dangerouslyUseHTMLString')\r\n    message = this.attr('message')\r\n\r\n    if (!dangerouslyUseHTMLString) {\r\n      text = encodeHTML(stripScripts(message))\r\n    } else {\r\n      text = message\r\n    }\r\n\r\n    $message.innerHTML = text\r\n\r\n    return this\r\n  }\r\n\r\n  _refreshClose() {\r\n    const HIDDEN = '.outline-message_hidden'\r\n    const $el = this.$el\r\n    let $close\r\n    let closable\r\n\r\n    if (this.isDestroyed()) {\r\n      return this\r\n    }\r\n\r\n    $close = $el.querySelector('.outline-message__close')\r\n    closable = this.attr('closable')\r\n\r\n    if ($close) {\r\n      if (closable) {\r\n        addClass($close, HIDDEN)\r\n      } else {\r\n        removeClass($close, HIDDEN)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  _refreshEl() {\r\n    const $el = this.$el\r\n    let className\r\n\r\n    if (this.isDestroyed()) {\r\n      return this\r\n    }\r\n\r\n    className = this._getClassName()\r\n    setAttribute($el, 'className', className.join(' '))\r\n\r\n    return this\r\n  }\r\n\r\n  refresh(options) {\r\n    if (!isPlainObject(options)) {\r\n      return this\r\n    }\r\n\r\n    this.attr(options)\r\n      ._refreshIcon()\r\n      ._refreshMessage()\r\n      ._refreshClose()\r\n      ._refreshEl()\r\n\r\n    return this\r\n  }\r\n\r\n  clearTimer() {\r\n    if (this.isDestroyed()) {\r\n      return this\r\n    }\r\n\r\n    if (this.timer) {\r\n      clearTimeout(this.timer)\r\n      this.timer = null\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  startTimer(duration) {\r\n    if (this.isDestroyed()) {\r\n      return this\r\n    }\r\n\r\n    this.timer = later(() => {\r\n      this.$emit('opened')\r\n      this.close()\r\n    }, duration * 1000)\r\n\r\n    return this\r\n  }\r\n\r\n  open(options) {\r\n    const $el = this.$el\r\n    let offset\r\n    let duration\r\n    let top\r\n    let cssRules\r\n\r\n    if (this.isDestroyed()) {\r\n      return this\r\n    }\r\n\r\n    if (this.isClosed()) {\r\n      this.refresh(options)\r\n    }\r\n\r\n    offset = this.attr('offset')\r\n    duration = this.attr('duration')\r\n    top = offset && offset >= this.offset ? offset : this.offset\r\n    cssRules = `top:${top}px;`\r\n\r\n    this.clearTimer()\r\n\r\n    this.$emit('beforeOpen')\r\n\r\n    later(() => {\r\n      this.visible = true\r\n\r\n      addClass($el, 'outline-message_visible')\r\n      $el.style.cssText = cssRules\r\n\r\n      if (duration > 0) {\r\n        this.startTimer(duration)\r\n      }\r\n    }, 100)\r\n\r\n    return this\r\n  }\r\n\r\n  close() {\r\n    const $el = this.$el\r\n    const cssRules = `top:-50px;`\r\n    let destroyAfterClosed\r\n    let beforeClose\r\n\r\n    if (this.isDestroyed()) {\r\n      return this\r\n    }\r\n\r\n    destroyAfterClosed = this.attr('destroyAfterClosed')\r\n    beforeClose = this.attr('beforeClose')\r\n\r\n    if (isFunction(beforeClose)) {\r\n      beforeClose.call(this)\r\n    }\r\n\r\n    $el.style.cssText = cssRules\r\n    removeClass($el, 'outline-message_visible')\r\n\r\n    this.visible = false\r\n    this.closed = true\r\n\r\n    later(() => {\r\n      this.$emit('closed')\r\n\r\n      if (destroyAfterClosed) {\r\n        this.destroy()\r\n      }\r\n    }, 500)\r\n\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    this.$emit('beforeDestroy')\r\n\r\n    if (this.isDestroyed()) {\r\n      return this\r\n    }\r\n\r\n    this.removeListeners()\r\n\r\n    document.body.removeChild(this.$el)\r\n\r\n    clearTimeout(this.timer)\r\n    this._default()\r\n\r\n    this.$emit('afterDestroy')\r\n\r\n    return this\r\n  }\r\n\r\n  onMouseEnter() {\r\n    this.clearTimer()\r\n    return this\r\n  }\r\n\r\n  onMouseLeave() {\r\n    const duration = this.attr('duration')\r\n    const delay = this.attr('delay')\r\n\r\n    if (duration <= 0) {\r\n      return this\r\n    }\r\n\r\n    this.startTimer(delay)\r\n\r\n    return this\r\n  }\r\n\r\n  onClose() {\r\n    this.clearTimer()\r\n    this.close()\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    const $el = this.$el\r\n\r\n    on(\r\n      $el,\r\n      '.outline-message__content',\r\n      'mouseenter',\r\n      this.onMouseEnter,\r\n      this,\r\n      true\r\n    )\r\n    on(\r\n      $el,\r\n      '.outline-message__content',\r\n      'mouseleave',\r\n      this.onMouseLeave,\r\n      this,\r\n      true\r\n    )\r\n    on($el, '.outline-message__close', 'click', this.onClose, this, true)\r\n\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    const $el = this.$el\r\n\r\n    off($el, 'mouseenter', this.onMouseEnter)\r\n    off($el, 'mouseleave', this.onMouseLeave)\r\n    off($el, 'click', this.onClose)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nMessage.DEFAULTS = {\r\n  id: '',\r\n  type: 'info',\r\n  effect: 'default',\r\n  round: false,\r\n  offset: 30,\r\n  duration: 3,\r\n  delay: 2,\r\n  message: '',\r\n  customClass: '',\r\n  closable: true,\r\n  visible: true,\r\n  dangerouslyUseHTMLString: false,\r\n  destroyAfterClosed: true,\r\n  beforeClose: null\r\n}\r\n\r\nTYPES.forEach((type) => {\r\n  Message[type] = (options) => {\r\n    const config = {}\r\n    const id = guid(`outline-message-`)\r\n    const beforeClose = options.beforeClose || null\r\n    let offset = options.offset || 30\r\n\r\n    if (isString(options)) {\r\n      config.message = options\r\n    } else {\r\n      if (isPlainObject(options)) {\r\n        extend(config, options)\r\n      }\r\n    }\r\n    config.id = id\r\n    config.type = type\r\n    config.offset = offset\r\n    config.visible = false\r\n    config.beforeClose = () => {\r\n      Message.close(id, beforeClose)\r\n    }\r\n\r\n    instance = new Message(config)\r\n    instances.forEach((item) => {\r\n      offset += item.$el.offsetHeight + 16\r\n    })\r\n    instance.offset = offset\r\n    instance.open()\r\n    instances.push(instance)\r\n\r\n    return instance\r\n  }\r\n})\r\n\r\n// 关闭指定 id 消息的静态方法\r\nMessage.close = (id, beforeClose) => {\r\n  const len = instances.length\r\n  let index = -1\r\n  let i\r\n  let offsetHeight\r\n\r\n  instances.forEach((instance, i) => {\r\n    // 在 instances 中通过 id 找到要关闭的消息\r\n    if (id === instance.id) {\r\n      offsetHeight = instance.$el.offsetHeight\r\n      index = i\r\n\r\n      // 关闭消息\r\n      if (isFunction(beforeClose)) {\r\n        beforeClose.call(instance)\r\n      }\r\n\r\n      instances.splice(i, 1)\r\n    }\r\n  })\r\n\r\n  if (len <= 1 || index === -1 || index > instances.length - 1) {\r\n    return false\r\n  }\r\n\r\n  i = index\r\n\r\n  // 界面中的消息逐个向上收起\r\n  for (; i < len - 1; i += 1) {\r\n    const dom = instances[i].$el\r\n\r\n    dom.style['top'] = parseInt(dom.style['top'], 10) - offsetHeight - 16 + 'px'\r\n  }\r\n}\r\n\r\n// 关闭所有消息的静态方法\r\nMessage.clear = () => {\r\n  let i = instances.length - 1\r\n  for (; i >= 0; i -= 1) {\r\n    instances[i].close()\r\n  }\r\n}\r\n\r\nexport default Message\r\n","import add from './add'\nimport getSymbols from './getSymbols'\n\n/**\n * 绘制 SVG 图标集\n * ========================================================================\n * @method paint\n * @param {String|Array} symbol\n */\nconst paint = (symbol = '') => {\n  const $body = document.body\n  let $icons = document.querySelector('#outline-icons')\n  let symbols = []\n\n  add(symbol)\n  symbols = getSymbols()\n\n  if ($icons) {\n    $icons.innerHTML = symbols.join('')\n  } else {\n    $icons = document.createElement('div')\n    $icons.innerHTML =\n      `<svg id=\"outline-icons\" aria-hidden=\"true\" style=\"position:absolute;display:none;width:0;height:0;overflow:hidden;\">` +\n      `${symbols.join('')}` +\n      `</svg>`\n    $body.insertBefore($icons.firstChild, $body.firstChild)\n  }\n}\n\nexport default paint\n","import isArray from '../types/isArray'\nimport isString from '../types/isString'\nimport SYMBOLS from './symbols'\n\n/**\n * @method add\n * @param {Array|String} symbols\n * @return {Boolean}\n */\nconst add = (symbols) => {\n  if (!symbols) {\n    return false\n  }\n\n  if (isArray(symbols) && symbols.length > 0) {\n    symbols.forEach((symbol) => {\n      /* istanbul ignore else */\n      if (SYMBOLS.indexOf(symbol) === -1 && isString(symbol)) {\n        SYMBOLS.push(symbol)\n      }\n    })\n  } else {\n    /* istanbul ignore else */\n    if (isString(symbols)) {\n      SYMBOLS.push(symbols)\n    }\n  }\n}\n\nexport default add\n","import cloneDeep from './utils/lang/cloneDeep'\r\nimport later from './utils/lang/later'\r\nimport isString from './utils/types/isString'\r\nimport isElement from './utils/types/isElement'\r\nimport isFunction from './utils/types/isFunction'\r\nimport icon from './utils/icons/icon'\r\nimport createElement from './utils/dom/createElement'\r\nimport addClass from './utils/dom/addClass'\r\nimport removeClass from './utils/dom/removeClass'\r\nimport at from './utils/event/at'\r\nimport on from './utils/event/on'\r\nimport stop from './utils/event/stop'\r\nimport off from './utils/event/off'\r\n\r\nimport Base from './base'\r\nimport Message from './message'\r\n\r\nconst ENTER_READING_TIP = '进入阅读模式，按 ESC 键可退出阅读模式'\r\n\r\nconst _updateSiblingElements = (siblingElement, isPrev) => {\r\n  let tagName\r\n  let $sibling = siblingElement\r\n\r\n  while ($sibling) {\r\n    tagName = $sibling.tagName.toLowerCase()\r\n\r\n    if (tagName !== 'script' && tagName !== 'style') {\r\n      addClass($sibling, 'outline-reader_sibling')\r\n    }\r\n\r\n    if (isPrev) {\r\n      $sibling = $sibling.previousElementSibling\r\n    } else {\r\n      $sibling = $sibling.nextElementSibling\r\n    }\r\n  }\r\n}\r\n\r\nclass Reader extends Base {\r\n  constructor(options) {\r\n    super()\r\n\r\n    this._default()\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  _default() {\r\n    this.attrs = cloneDeep(Reader.DEFAULTS)\r\n    this.reading = false\r\n\r\n    this.$target = null\r\n    this.$paper = null\r\n    this.$title = null\r\n    this.$article = null\r\n    this.$icon = null\r\n\r\n    return this\r\n  }\r\n\r\n  initialize(options) {\r\n    let target = null\r\n\r\n    this.attr(options)\r\n\r\n    target = this.attr('target')\r\n\r\n    if (isString(target)) {\r\n      this.$target = document.querySelector(target)\r\n    } else if (isElement(target)) {\r\n      this.$target = target\r\n    }\r\n\r\n    if (!this.$target) {\r\n      return this\r\n    }\r\n\r\n    this.render().addListeners()\r\n\r\n    return this\r\n  }\r\n\r\n  render() {\r\n    this._renderEdge()._paint(this.$target)\r\n    return this\r\n  }\r\n\r\n  erase() {\r\n    this.$article.innerHTML = ''\r\n    return this\r\n  }\r\n\r\n  _paint($content) {\r\n    const $fragment = document.createDocumentFragment()\r\n    const $children = [...$content.cloneNode(true).children]\r\n\r\n    later(() => {\r\n      $children.forEach(($child) => {\r\n        $fragment.appendChild($child)\r\n      })\r\n\r\n      this.$article.appendChild($fragment)\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  _remove() {\r\n    const $paper = this.$paper\r\n\r\n    if ($paper) {\r\n      document.body.removeChild($paper)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  refresh() {\r\n    this.erase()._paint(this.$target)\r\n    return this\r\n  }\r\n\r\n  _renderEdge() {\r\n    const $target = this.$target\r\n    let title = this.attr('title')\r\n    let $paper\r\n    let $title\r\n    let $article\r\n    let $icon\r\n    let $sibling\r\n\r\n    $title = $target.querySelector('h1')\r\n\r\n    if (isElement(title)) {\r\n      $title = title\r\n    }\r\n\r\n    if (isElement($title)) {\r\n      title = $title.innerText\r\n    }\r\n\r\n    $title = createElement(\r\n      'h1',\r\n      {\r\n        className: 'outline-reader__title'\r\n      },\r\n      title\r\n    )\r\n    this.$title = $title\r\n\r\n    $article = createElement('article', {\r\n      id: 'outline-reader__article',\r\n      className: 'outline-reader__article'\r\n    })\r\n    this.$article = $article\r\n\r\n    $icon = icon('close', {\r\n      iconSet: 'outline',\r\n      size: 20,\r\n      attrs: {\r\n        className: 'outline-reader__close'\r\n      }\r\n    })\r\n    this.$icon = $icon\r\n\r\n    $paper = createElement(\r\n      'section',\r\n      {\r\n        id: 'outline-reader',\r\n        className: 'outline-reader outline-reader_hidden'\r\n      },\r\n      [$icon, $title, $article]\r\n    )\r\n    this.$paper = $paper\r\n\r\n    document.body.appendChild($paper)\r\n\r\n    later(() => {\r\n      // 设置邻居节点的打印样式\r\n      $sibling = $paper.previousElementSibling\r\n      _updateSiblingElements($sibling, true)\r\n\r\n      $sibling = $paper.nextElementSibling\r\n      _updateSiblingElements($sibling)\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  enter() {\r\n    const READER = 'outline-reader'\r\n    const READING = `${READER}--reading`\r\n    const HIDDEN = `${READER}_hidden`\r\n    const $paper = this.$paper\r\n    const $siblings = document.querySelectorAll('.outline-reader_sibling')\r\n    const enterReadingTip = this.attr('enterReadingTip') || ENTER_READING_TIP\r\n\r\n    if (this.reading || !$paper) {\r\n      return this\r\n    }\r\n\r\n    $siblings.forEach(($sibling) => {\r\n      addClass($sibling, HIDDEN)\r\n    })\r\n    addClass($paper, READING)\r\n    removeClass($paper, HIDDEN)\r\n    this.reading = true\r\n\r\n    Message.info({\r\n      round: true,\r\n      message: enterReadingTip\r\n    })\r\n\r\n    this.$emit('enterReading')\r\n\r\n    return this\r\n  }\r\n\r\n  exit() {\r\n    const READER = 'outline-reader'\r\n    const READING = `${READER}--reading`\r\n    const HIDDEN = `${READER}_hidden`\r\n    const $paper = this.$paper\r\n    const $siblings = document.querySelectorAll('.outline-reader_sibling')\r\n\r\n    if (!this.reading || !$paper) {\r\n      return this\r\n    }\r\n\r\n    addClass($paper, HIDDEN)\r\n    removeClass($paper, READING)\r\n    $siblings.forEach(($sibling) => {\r\n      removeClass($sibling, HIDDEN)\r\n    })\r\n    this.reading = false\r\n\r\n    this.$emit('exitReading')\r\n\r\n    return this\r\n  }\r\n\r\n  toggle() {\r\n    if (this.reading) {\r\n      this.exit()\r\n    } else {\r\n      this.enter()\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  print() {\r\n    if (!isFunction(print)) {\r\n      return this\r\n    }\r\n\r\n    print()\r\n\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    const $paper = this.$paper\r\n\r\n    if (!$paper) {\r\n      return this\r\n    }\r\n\r\n    this.removeListeners()._remove()._default()\r\n\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    const $paper = this.$paper\r\n\r\n    if (!$paper) {\r\n      return this\r\n    }\r\n\r\n    at(document, 'keyup', this.onExitReading, this, true)\r\n    on($paper, '.outline-reader__close', 'click', this.exit, this, true)\r\n\r\n    this.$on('toolbar:action:print', this.onPrint)\r\n    this.$on('toolbar:action:reading', this.onEnterReading)\r\n\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    const $paper = this.$paper\r\n\r\n    if (!$paper) {\r\n      return this\r\n    }\r\n\r\n    off(document, 'keyup', this.onExitReading)\r\n    off($paper, 'click', this.exit)\r\n\r\n    this.$off('toolbar:action:print')\r\n    this.$off('toolbar:action:reading')\r\n\r\n    return this\r\n  }\r\n\r\n  onPrint() {\r\n    this.print()\r\n    return this\r\n  }\r\n\r\n  onEnterReading() {\r\n    this.toggle()\r\n    return this\r\n  }\r\n\r\n  onExitReading(evt) {\r\n    const keyCode = evt.keyCode\r\n\r\n    if (keyCode === 27 && this.reading) {\r\n      this.toggle()\r\n      stop(evt)\r\n    }\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nReader.DEFAULTS = {\r\n  target: '',\r\n  title: '',\r\n  enterReadingTip: ENTER_READING_TIP\r\n}\r\n\r\nexport default Reader\r\n","import isFunction from '../types/isFunction'\nimport off from './off'\n\nimport { CAPTURE_EVENTS } from './enum'\n\n/**\n * 绑定事件\n * ========================================================================\n * @method at\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\n * @param {Function|Object} fn - （必须） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\n * @param {Boolean} once - （可选）是否仅触发一次\n */\nconst at = (el, type, fn, data, context, once = false) => {\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\n  const listener = function (evt) {\n    let overrideContext = context || el\n\n    // 当设置为 true 时，则事件处理器回调函数的\n    // this 上下文指向为 data 对象\n    if (context === true) {\n      overrideContext = data\n    }\n\n    // 仅触发一次\n    /* istanbul ignore else */\n    if (once === true) {\n      off(el, type, listener)\n    }\n\n    fn.call(overrideContext, evt, data)\n  }\n\n  if (!isFunction(fn)) {\n    return false\n  }\n\n  if (!el._listeners) {\n    el._listeners = []\n  }\n\n  // 缓存 options 元素绑定的事件处理器\n  el._listeners.push({\n    el,\n    type,\n    fn: listener,\n    data,\n    context,\n    capture\n  })\n\n  // 缓存包装后的事件处理器\n  fn._delegateListener = listener\n\n  el.addEventListener(type, listener, capture)\n}\n\nexport default at\n","/**\n * 停止事件（阻止默认行为和阻止事件的捕获或冒泡）\n * ========================================================================\n * @method stop\n * @param {Event} evt - 事件对象\n *\n * @example\n * <div id=\"nav\" class=\"nav\">\n *   <a id=\"service\" class=\"anchor\" href=\"https://www.yaohaixiao.com/serivce\">Service</a>\n *   <a id=\"help\" class=\"anchor\" href=\"https://www.yaohaixiao.com/help\">Help</a>\n * </div>\n *\n * const $nav = document.querySelector('#nav')\n * const $service = document.querySelector('.anchor')\n *\n * on($nav, 'click', function(evt) {\n *   console.log('你点击了导航栏')\n * })\n *\n * on($anchor, 'click', function(evt) {\n *   console.log('tagName', this.tagName)\n *\n *   // 工作台输出：'a'\n *   // 不会触发事件冒泡，输出：'你点击了导航栏'\n *   // 也不会切换到 href 属性的页面，阻止了点击链接的默认行为\n *   stopEvent(evt)\n * })\n */\nconst stop = function (evt) {\n  evt.stopPropagation()\n  evt.preventDefault()\n}\n\nexport default stop\n"],"names":["toString","val","Object","prototype","apply","isFunction","isObject","o","isArray","Array","cloneDeep","obj","clone","from","assign","keys","forEach","key","later","fn","delay","setTimeout","isString","str","isElement","nodeName","tagName","nodeType","hasOwn","prop","hasOwnProperty","call","setAttribute","el","attr","value","toLowerCase","style","cssText","className","innerHTML","innerText","setAttributes","attrs","createElement","name","options","ICON","size","color","iconSet","width","height","defaultRules","cssRules","$icon","document","$svg","binds","svg","pattern","RegExp","test","isSVG","querySelector","xmlns","class","icon","isDOM","isHTMLCollection","fragment","isTextNode","children","$fragment","createDocumentFragment","$el","isValidChild","child","append","$child","createTextNode","appendChild","every","hasClass","allClass","classList","contains","exec","addClass","add","length","removeClass","remove","replace","CAPTURE_EVENTS","_off","type","capture","indexOf","_delegateListener","listeners","_listeners","index","listener","i","handler","splice","_delete","removeEventListener","purgeElement","recurse","$element","$children","childNodes","filter","getListeners","arguments","off","matches","selector","sel","msMatchesSelector","getParentOrHost","host","parentNode","on","data","context","once","evt","target","getTarget","delegateTarget","ctx","includeCTX","startsWith","closest","overrideContext","push","addEventListener","extend","origin","source","_subscribers","_hasDirectSubscribersFor","topic","has","isDirect","found","position","lastIndexOf","substring","_hasSubscribers","emit","async","execute","subscriber","message","callback","deliver","guid","uuid","prefix","_removeSubscriber","token","subject","execution","j","_removeSubscriberByToken","Base","constructor","this","initialize","render","addListeners","refresh","destroy","removeListeners","reload","$emit","event","publish","$on","subscribe","$off","unsubscribe","isPlainObject","getPrototypeOf","proto","isObjectLike","stripScripts","encodeHTML","CHARTS","tag","SYMBOLS","getSymbols","patternName","patternSet","find","symbol","fullName","iconName","getSymbol","instances","instance","$body","body","$icons","symbols","join","insertBefore","firstChild","paint","Message","super","_default","DEFAULTS","id","closed","visible","offset","timer","destroyed","open","isClosed","isDestroyed","_getClassName","effect","round","closable","customClass","dangerouslyUseHTMLString","$type","$message","$text","$close","iconSize","_refreshIcon","HIDDEN","$use","_refreshMessage","text","_refreshClose","_refreshEl","clearTimer","clearTimeout","startTimer","duration","close","top","destroyAfterClosed","beforeClose","removeChild","onMouseEnter","onMouseLeave","onClose","config","item","offsetHeight","len","dom","parseInt","clear","ENTER_READING_TIP","_updateSiblingElements","siblingElement","isPrev","$sibling","previousElementSibling","nextElementSibling","Reader","reading","$target","$paper","$title","$article","_renderEdge","_paint","erase","$content","cloneNode","_remove","title","enter","READER","READING","$siblings","querySelectorAll","enterReadingTip","info","exit","toggle","print","at","onExitReading","onPrint","onEnterReading","keyCode","stopPropagation","preventDefault","stop"],"mappings":"uOAOA,MAAMA,EAAYC,GACTC,OAAOC,UAAUH,SAASI,MAAMH,GCCnCI,EAAcJ,GACI,mBAARA,GAAwC,sBAAlBD,EAASC,GCAzCK,EAAYC,IAEG,oBAAhBP,EAASO,IACK,iBAANA,GACPF,EAAWE,KACP,OAANA,ECNEC,EAAWD,GACXE,MAAMD,QACDC,MAAMD,QAAQD,GAEE,mBAAhBP,EAASO,GCCdG,EAAaC,IACjB,IAAIC,EAAQ,CAAE,EAEd,OAAY,OAARD,EACK,MAGLH,EAAQG,GACVC,EAAQH,MAAMI,KAAKF,IAEnBC,EAAQV,OAAOY,OAAO,CAAA,EAAIH,GAC1BT,OAAOa,KAAKH,GAAOI,SAASC,GAClBL,EAAMK,GAAOX,EAASK,EAAIM,IAAQP,EAAUC,EAAIM,IAAQN,EAAIM,MAIjEL,ICpBHM,EAAQ,CAACC,EAAIC,EAAQ,QACpBf,EAAWc,IAITE,YAAW,KAChBF,GAAI,GACHC,GCVCE,EAAYC,GACM,iBAARA,ECCVC,EAAajB,MACPD,EAASC,IAAMA,EAAEkB,UAAYlB,EAAEmB,SAA0B,IAAfnB,EAAEoB,UCFlDC,EAAS,CAACjB,EAAKkB,KACnB,MAAMC,EAAiB5B,OAAOC,UAAU2B,eACxC,OAAOnB,GAAOmB,EAAeC,KAAKpB,EAAKkB,EAAI,ECFvCG,EAAe,CAACC,EAAIC,EAAMC,KAC9B,IAAIT,EAAUO,EAAGP,QAAQU,cAEzB,OAAQF,GACN,IAAK,QACHD,EAAGI,MAAMC,QAAUH,EACnB,MACF,IAAK,QACa,UAAZT,GAAmC,aAAZA,EACzBO,EAAGE,MAAQA,EAEXF,EAAGD,aAAaE,EAAMC,GAExB,MACF,IAAK,UACHF,EAAGD,aAAa,MAAOG,GACvB,MACF,IAAK,YACHF,EAAGM,UAAYJ,EACf,MACF,IAAK,YACHF,EAAGO,UAAYL,EACf,MACF,IAAK,YACHF,EAAGQ,UAAYN,EACf,MACF,QACEF,EAAGD,aAAaE,EAAMC,GAEzB,ECjCGO,EAAgB,CAACT,EAAIU,KACzB,IAAKV,IAAO3B,EAASqC,GACnB,OAAO,EAGTzC,OAAOa,KAAK4B,GAAO3B,SAASkB,IAC1B,MAAMC,EAAQQ,EAAMT,GAChBN,EAAOe,EAAOT,IAChBF,EAAaC,EAAIC,EAAMC,EACxB,GACD,ECGES,EAAgB,CAACC,EAAMC,EAAU,MACrC,MAAMC,EAAO,eACPC,EAAOF,EAAQE,MAAQ,EACvBC,EAAQH,EAAQG,OAAS,GACzBC,EAAUJ,EAAQI,SAAW,GAC7BC,EAAQ3C,EAAQwC,GAAQA,EAAK,GAAKA,EAClCI,EAAS5C,EAAQwC,GAAQA,EAAK,GAAKA,EACnCK,EAAeL,EAAO,SAASG,cAAkBC,OAAc,GAC/DE,EAAWL,EAAQI,EAAe,SAASJ,IAAUI,EACrDV,EAAQG,EAAQH,OAAS,CAAE,EAC3BY,EAAQC,SAASZ,cAAc,KACrC,IAEIa,EAFAC,EAAQ,GACRC,EAAM,GAGV,OAAKrC,EAASuB,IC9BF,CAACtB,IACb,MAKMqC,EAAU,IAAIC,OADR,uIACoB,KAEhC,OAAOvC,EAASC,IAAQqC,EAAQE,KAAKvC,EAAG,ED0BpCwC,CAAMlB,GACRc,EAAMd,GAENa,EACER,GAAuB,SAAZA,EACP,gBAAgBA,UAAgBL,KAChC,qBAAqBA,KAC3Bc,EAAM,aAAaD,kBAGrBH,EAAMf,UAAYmB,EAEdhB,EAAMJ,UACRI,EAAMJ,UAAY,GAAGQ,KAAQJ,EAAMJ,YAEnCI,EAAMJ,UAAYQ,EAGpBL,EAAca,EAAOZ,GAErBc,EAAOF,EAAMS,cAAc,OAC3BtB,EAAce,EAAM,CAClB,eAAe,EACfQ,MAAO,6BACPC,MAAO,oBACPf,MAAO,IACPC,OAAQ,IACRf,MAAOiB,IAGFC,GAjCE,IAiCFA,EEnDHY,EAAO,CAACtB,EAAMC,EAAU,KACrBF,EAAcC,EAAMC,GCVvBsB,EAASnC,IACb,SACE3B,EAAS2B,MACRT,EAAUS,ICNU,CAACA,MACd3B,EAAS2B,IAAwB,sBAAjBjC,EAASiC,IDKfoC,CAAiBpC,KENnBqC,EFMqCrC,EEJrD3B,EAASgE,IAAoC,8BAAvBtE,EAASsE,KCFhB,CAACrC,MAEhB3B,EAAS2B,MACS,kBAAjBjC,EAASiC,IAA4BA,EAAGP,SAA2B,IAAhBO,EAAGN,WHGK4C,CAAWtC,KENxD,IAACqC,CFOjB,EIKG1B,EAAgB,CAAClB,EAASiB,EAAO6B,KACrC,MAAMC,EAAYjB,SAASkB,yBACrBC,EAAMnB,SAASZ,cAAclB,GAC7BkD,EAAgBC,GACbT,EAAMS,IAAUvD,EAASuD,GAE5BC,EAAUD,IACd,IAAIE,EAEJ,IAAKH,EAAaC,GAChB,OAAO,EAGLT,EAAMS,GACRE,EAASF,EACAvD,EAASuD,KAClBE,EAASvB,SAASwB,eAAeH,IAGnCJ,EAAUQ,YAAYF,EAAO,EAyB/B,OAtBIzE,EAASqC,GACXD,EAAciC,EAAKhC,GACVnC,EAAQmC,IAAUA,EAAMuC,OAAOhD,GAAS0C,EAAa1C,KAC9DS,EAAM3B,SAAS6D,IACbC,EAAOD,EAAM,IAENT,EAAMzB,GACfmC,EAAOnC,GACErB,EAASqB,IAClBmC,EAAOtB,SAASwB,eAAerC,IAG7BnC,EAAQgE,GACVA,EAASxD,SAAS6D,IAChBC,EAAOD,EAAM,IAGfC,EAAON,GAGTG,EAAIM,YAAYR,GAETE,GClDHQ,EAAW,CAAClD,EAAIM,KACpB,MAAMqB,EAAU,IAAIC,OAAO,UAAYtB,EAAY,WACnD,IAAI6C,EACAC,EAEJ,QAAK7D,EAAUS,KAIfmD,EAAWnD,EAAGM,YAET6C,IAILC,EAAYpD,EAAGoD,UAEXA,GAAWC,SACNrD,EAAGoD,UAAUC,SAAS/C,KAGtBqB,EAAQ2B,KAAKH,IAAQ,ECpB1BI,EAAW,CAACvD,EAAIM,KACpB,IAAI8C,EACAD,EAEJ,GAAID,EAASlD,EAAIM,GACf,OAAO,EAGT8C,EAAYpD,EAAGoD,UAEXA,GAAWI,IACbJ,EAAUI,IAAIlD,IAEd6C,EAAWnD,EAAGM,UACd6C,GAAYA,EAASM,OAAS,EAAI,IAAMnD,EAAYA,EACpDN,EAAGM,UAAY6C,EAChB,ECfGO,EAAc,CAAC1D,EAAIM,KACvB,IACI8C,EADAD,EAAWnD,EAAGM,UAGlB,IAAK6C,IAAaD,EAASlD,EAAIM,GAC7B,OAAO,ECPE,IAAChB,EDUZ8D,EAAYpD,EAAGoD,UAEXA,GAAWO,OACbP,EAAUO,OAAOrD,ICbPhB,EDeM6D,EAASS,QAAQtD,EAAW,IAA5C6C,ICdG9D,EAASC,IAGPA,EAAIsE,QAAQ,iBAAkB,IDYnC5D,EAAGM,UAAY6C,EAChB,EE1BUU,EAAiB,CAC5B,WACA,OACA,UACA,QACA,OACA,SACA,aACA,cCMIC,EAAO,CAAC9D,EAAI+D,EAAM7E,KACtB,MAAM8E,EAAUH,EAAeI,QAAQF,IAAS,EAG5C7E,EAAGgF,0BACLhF,EAAKA,EAAGgF,mBACEA,kBCZE,SAAUlE,EAAI+D,EAAM7E,GAClC,MAAMiF,EAAYnE,EAAGoE,WACrB,IAAIC,GAAS,EAEb,GAAIF,EAAUV,OAAS,EACrB,OAAO,EAITU,EAAUpF,SAAQ,CAACuF,EAAUC,KAC3B,MAAMC,EAAUF,EAASpF,GAErB6E,IAASO,EAASP,OACpBM,EAAQE,EAEJC,IAAYtF,IACdmF,EAAQE,GAEX,IAICF,GAAS,GACXF,EAAUM,OAAOJ,EAAO,EAE5B,CDTEK,CAAQ1E,EAAI+D,EAAM7E,GAElBc,EAAG2E,oBAAoBZ,EAAM7E,EAAI8E,EAAQ,EEVrCY,EAAe,SAAU5E,EAAI+D,EAAMc,GAAU,GACjD,MAAMC,EAAWzF,EAASW,GAAMuB,SAASQ,cAAc/B,GAAMA,EACvD+E,EAAYD,EAASE,WACrBb,ECPa,EAACnE,EAAI+D,KACxB,IAAII,EAAYnE,EAAGoE,YAAc,GAQjC,OANI/E,EAAS0E,IAASA,IACpBI,EAAYA,EAAUc,QAAQX,GACrBA,EAASP,OAASA,KAItBI,GDFWe,CAAaJ,EAAUf,GAEzCI,EAAUpF,SAASuF,IACjBR,EAAKgB,EAAUR,EAASP,KAAMO,EAASpF,GAAG,KAIzC2F,IAAoB,IAATd,GAAsC,IAArBoB,UAAU1B,SACvCqB,GACAC,GAEAA,EAAUhG,SAAS+D,IACbvD,EAAUuD,IACZ8B,EAAa9B,EAAQiB,EAAMc,EAC5B,GAGP,EEtBMO,EAAM,CAACpF,EAAI+D,EAAM7E,KAErB,IAAKd,EAAWc,GACd,OAAO0F,EAAa5E,EAAI+D,GAG1BD,EAAK9D,EAAI+D,EAAM7E,EAAG,ECPdmG,EAAU,CAACrF,EAAIsF,EAAW,MAC9B,MAAMC,EAAMD,EAAS1B,QAAQ,MAAO,IAEpC,SAAK0B,GAAaC,GAAQvF,KAKtBA,EAAGqF,QACErF,EAAGqF,QAAQE,KACTvF,EAAGwF,mBACLxF,EAAGwF,kBAAkBD,GAG7B,ECpBGE,EAAmBzF,GAChBA,EAAG0F,MAAQ1F,IAAOuB,UAAYvB,EAAG0F,KAAKhG,SACzCM,EAAG0F,KACH1F,EAAG2F,WCSHC,EAAK,CAAC5F,EAAIsF,EAAUvB,EAAM7E,EAAI2G,EAAMC,EAASC,GAAO,KAExD,MAAM/B,EAAUH,EAAeI,QAAQF,IAAS,EAE1CO,EAAW,SAAU0B,GACzB,MAAMC,ECfQ,SAAUD,GAC1B,MAAMC,EAASD,EAAIC,OAEnB,OCJgCjG,EDITiG,ICHG,IAAhBjG,EAAGN,SACJM,EAAG2F,WAGL3F,EALe,IAAUA,CDKlC,CDWmBkG,CAAUF,GAEnBG,EGbM,EAACnG,EAAIsF,EAAUc,EAAKC,KAClC,MAAMP,EAAUM,GAAO7E,SAEvB,IAAKvB,EACH,OAAO,KAGT,EAAG,CAED,GACe,MAAZsF,IACEA,EAASgB,WAAW,KACjBtG,EAAG2F,aAAeG,GAAWT,EAAQrF,EAAIsF,GACzCD,EAAQrF,EAAIsF,KACjBe,GAAcrG,IAAO8F,EAEtB,OAAO9F,EAIT,GAAIA,IAAO8F,EACT,KAIN,OAAY9F,EAAKyF,EAAgBzF,GAAK,EHZXuG,CAAQN,EAAQX,EAAUtF,GACjD,IAAIwG,EAAkBV,GAAW9F,EAEjCgG,EAAIG,eAAiBA,GAIL,IAAZL,IACFU,EAAkBX,GAIhBM,KAGW,IAATJ,GACFX,EAAIpF,EAAI+D,EAAMO,GAGhBpF,EAAGY,KAAK0G,EAAiBR,EAAKH,GAEjC,EAEI7F,EAAGoE,aACNpE,EAAGoE,WAAa,IAIlBpE,EAAGoE,WAAWqC,KAAK,CACjBzG,KACAsF,WACAvB,OACA7E,GAAIoF,EACJuB,OACAC,UACA9B,YAIF9E,EAAGgF,kBAAoBI,EAEvBtE,EAAG0G,iBAAiB3C,EAAMO,EAAUN,EAAQ,EI1DxC2C,EAAS,CAACC,EAAQC,KACT5I,OAAOa,KAAK+H,GAEpB9H,SAASa,IACRD,EAAOkH,EAAQjH,KACjBgH,EAAOhH,GAAQiH,EAAOjH,GACvB,GACD,ECVEkH,EAAe,CAAA,ECIfC,EAA4BC,GACzBrH,EAAOmH,EAAcE,IAAUF,EAAaE,GAAOvD,OAAS,ECA/DwD,EAAM,CAACD,EAAOE,GAAW,IACtBA,EAAWH,EAAyBC,GCHrB,CAACA,IACvB,IAAIG,EAAQJ,EAAyBC,GACjCI,EAAWJ,EAAMK,YAAY,KAEjC,MAAQF,IAAuB,IAAdC,GAEfA,GADAJ,EAAQA,EAAMM,UAAU,EAAGF,IACVC,YAAY,KAC7BF,EAAQJ,EAAyBC,GAGnC,OAAOG,GDP6CI,CAAgBP,GEGhEQ,EAAO,CAACR,EAAOnB,EAAM4B,GAAQ,KACjC,MAAMC,EAAWV,IACf,IAAKD,EAAyBC,GAC5B,OAAO,EAGTF,EAAaE,GAAOjI,SAAS4I,IAG3B,MAAMC,EChBI,CACZ,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,wBACA,yBACA,2BAGW3D,QAAQlG,EDEY8H,KCFM,EDEEA,EAAK9H,WAAa8H,EAEvD8B,EAAWE,SAAS/H,KAAK6H,EAAW7B,SAAW6B,EAAYC,EAAQ,GACnE,EAEEE,EAAU,KACd,IAAIH,EAAaX,EACbI,EAAWJ,EAAMK,YAAY,KAEjC,MAAqB,IAAdD,GACLO,EAAaA,EAAWL,UAAU,EAAGF,GACrCA,EAAWO,EAAWN,YAAY,KAElCK,EAAQC,GAIVD,EAAQV,GAERU,EAAQ,IAAI,EAGd,IAAKT,EAAID,GACP,OAAO,EAGLS,EACFrI,WAAW0I,EAAS,IAEpBA,GACD,EE/CGC,EAAO,MACX,IAAIC,EAAO,EAEX,OAAQC,IACND,GAAQ,EAEDC,EAASA,EAAS,IAAMD,EAAO,QAAUA,EAEnD,EARY,GCGPE,EAAqBlB,IACzB,IAAKrH,EAAOmH,EAAcE,GACxB,OAAO,SAGFF,EAAaE,EAAM,ECJtB5B,EAAM,CAAC4B,EAAOmB,KAClB,IAAKlB,EAAID,GACP,OAAO,EAGLmB,ECL2B,CAACA,IAChC,MAAMrJ,EAAOb,OAAOa,KAAKgI,GAGzB,IAAKqB,GAASrJ,EAAK2E,OAAS,EAC1B,OAAO,EAGT3E,EAAKC,SAASqJ,IACZ,MAAMT,EAAab,EAAasB,GAChC,IAAIpB,EAEJW,EAAW5I,SAAQ,CAACsJ,EAAWC,KACzBD,EAAUR,WAAaM,GAASE,EAAUF,QAAUA,IACtDnB,EAAQqB,EAAUrB,MAClBW,EAAWlD,QAbL,EAamB6D,GAC1B,IAICX,EAAWlE,OAAS,GACtByE,EAAkBlB,EACnB,GACD,EDjBAuB,CAAyBJ,GAEzBD,EAAkBlB,EACnB,EEZH,MAAMwB,EACJC,YAAY5H,GACV6H,KAAKhI,MAAQ,CAAE,EAEXG,GACF6H,KAAKC,WAAW9H,EAEnB,CAED8H,WAAW9H,GAET,OADA6H,KAAKzI,KAAKY,GAAS+H,SAASC,eACrBH,IACR,CAEDzI,KAAKL,EAAMM,GACT,MAAMQ,EAAQgI,KAAKhI,MAEnB,OAAIrB,EAASO,GAEPM,GAASP,EAAOe,EAAOd,IAEzBc,EAAMd,GAAQM,EACPwI,MAIFhI,EAAMd,GACJvB,EAASuB,IAElB+G,EAAOjG,EAAOd,GAEP8I,MACuB,IAArBvD,UAAU1B,OAEZ/C,EAGFgI,IACR,CAEDE,SACE,OAAOF,IACR,CAEDI,UACE,OAAOJ,IACR,CAEDK,UAEE,OADAL,KAAKM,kBACEN,IACR,CAEDO,OAAOpI,GAEL,OADA6H,KAAKK,UAAUJ,WAAW9H,GACnB6H,IACR,CAEDQ,MAAMC,EAAOtD,GAEX,OADAuD,EAAQD,EAAOtD,GACR6C,IACR,CAEDW,IAAIF,EAAOtB,GAET,MC5DO,EAACb,EAAOxC,EAASsB,EAAU,QACpC,MAAMqC,EAAQJ,IACd,IAAIK,EAA2B,iBAAVpB,EAAqBA,EAAMjJ,WAAaiJ,EAExD5I,EAAWoG,KAKXsC,EAAasB,KAChBtB,EAAasB,GAAW,IAG1BtB,EAAasB,GAAS3B,KAAK,CACzBO,MAAOoB,EACPP,SAAUrD,EACVsB,UACAqC,UAGKA,EDuCLmB,CAAUH,EAAOtB,EAAUa,MACpBA,IACR,CAEDa,KAAKJ,EAAOtB,GAEV,OADA2B,EAAYL,EAAOtB,GACZa,IACR,CAEDG,eACE,OAAOH,IACR,CAEDM,kBACE,OAAON,IACR,EE9EH,MCAMe,EAAiBzL,IACrB,MAAM0L,EAAiBzL,OAAOyL,eAC9B,IAAIC,EAGJ,IDLmB,CAAC3L,GACbK,EAASL,IAAgB,OAARA,ECInB4L,CAAa5L,GAChB,OAAO,EAQT,GALA2L,EAAQ3L,EAAIE,WAKPyL,EACH,OAAO,EAKT,IAFAA,EAAQ3L,EAEyB,OAA1B0L,EAAeC,IACpBA,EAAQD,EAAeC,GAGzB,OAAOD,EAAe1L,KAAS2L,GC3B3BE,EAAgBvK,GACbA,EAAIsE,QAAQ,+BAAgC,ICD/CkG,EAAcxK,IAClB,MAAMyK,EAAS,CACb,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,QACL,IAAK,UAGP,OAAOzK,EAAIsE,QAAQ,YAAaoG,GACvBD,EAAOC,IAAQA,GACvB,ECfGC,EAAU,CCDd,gbACA,2bACA,+MACA,0UACA,yqBACA,4UACA,kqBACA,q4DACA,0wBACA,uvBACA,iYACA,+SACA,oTACA,4QACA,kNACA,8wBACA,uwBACA,2gBACA,uuBCRIC,EAAa,CAACtJ,EAAMK,EAAU,SAC9B5B,EAASuB,GCJG,EAACA,EAAMK,EAAU,UACjC,MAAMkJ,EAAc,aACdC,EAAa,UAGnB,OAFgBH,EAEDI,MAAMC,IACnB,MACMC,EADQJ,EAAY7G,KAAKgH,GACR,GAMvB,OALaF,EAAW9G,KAAKiH,GACR,KAIFtJ,GAAWsJ,KAFhB,SAAZtJ,EAAqB,GAAGA,KAAWL,IAAS,GAAGK,UAAgBL,IAEtB4J,GAC5C,EDTQC,CAAU7J,EAAMK,GAGlB,IAAIgJ,GESPS,EAAY,GAClB,IAAIC,ECjBU,EAACL,EAAS,MACtB,MAAMM,EAAQrJ,SAASsJ,KACvB,IAAIC,EAASvJ,SAASQ,cAAc,kBAChCgJ,EAAU,GCHJ,CAACA,IACX,IAAKA,EACH,OAAO,EAGLxM,EAAQwM,IAAYA,EAAQtH,OAAS,EACvCsH,EAAQhM,SAASuL,KAEkB,IAA7BL,EAAQhG,QAAQqG,IAAkBjL,EAASiL,IAC7CL,EAAQxD,KAAK6D,EACd,IAICjL,EAAS0L,IACXd,EAAQxD,KAAKsE,EAEhB,EDZDvH,CAAI8G,GACJS,EAAUb,IAENY,EACFA,EAAOvK,UAAYwK,EAAQC,KAAK,KAEhCF,EAASvJ,SAASZ,cAAc,OAChCmK,EAAOvK,UAEL,uHAAGwK,EAAQC,KAAK,YAElBJ,EAAMK,aAAaH,EAAOI,WAAYN,EAAMM,YAC7C,EDEHC,GAEA,MAAMC,UAAgB5C,EACpBC,YAAY5H,GACVwK,QAEA3C,KAAK4C,WAEDzK,GACF6H,KAAKC,WAAW9H,EAEnB,CAEDyK,WAWE,OAVA5C,KAAKhI,MAAQjC,EAAU2M,EAAQG,UAE/B7C,KAAKhG,IAAM,KACXgG,KAAK8C,GAAK,GACV9C,KAAK+C,QAAS,EACd/C,KAAKgD,SAAU,EACfhD,KAAKiD,QAAU,GACfjD,KAAKkD,MAAQ,KACblD,KAAKmD,WAAY,EAEVnD,IACR,CAEDC,WAAW9H,GAaT,OAZA6H,KAAKzI,KAAKY,GACV6H,KAAK8C,GAAK9C,KAAKzI,KAAK,MACpByI,KAAKiD,OAASjD,KAAKzI,KAAK,YAAc,GAEtCyI,KAAKQ,MAAM,UAAW,IAAKR,KAAKzI,SAEhCyI,KAAKE,SAASC,eAEVH,KAAKzI,KAAK,YACZyI,KAAKoD,OAGApD,IACR,CAEDqD,WACE,OAAOrD,KAAK+C,MACb,CAEDO,cACE,OAAOtD,KAAKmD,SACb,CAEDI,gBACE,MAAMlI,EAAO2E,KAAKzI,KAAK,QACjBiM,EAASxD,KAAKzI,KAAK,UACnBkM,EAAQzD,KAAKzI,KAAK,SAClBmM,EAAW1D,KAAKzI,KAAK,YACrByL,EAAUhD,KAAKzI,KAAK,WACpBoM,EAAc3D,KAAKzI,KAAK,eACxBK,EAAY,CAChB,kBACA,mBAAmByD,IACnB,mBAAmBmI,KAmBrB,OAhBIC,GACF7L,EAAUmG,KAAK,yBAGZ2F,GACH9L,EAAUmG,KAAK,8BAGbiF,GACFpL,EAAUmG,KAAK,2BAGb4F,GACF/L,EAAUmG,KAAK4F,GAGV/L,CACR,CAEDsI,SACE,MAAM7E,EAAO2E,KAAKzI,KAAK,QACjB2H,EAAUc,KAAKzI,KAAK,WACpBiM,EAASxD,KAAKzI,KAAK,UACnBkM,EAAQzD,KAAKzI,KAAK,SAClBmM,EAAW1D,KAAKzI,KAAK,YACrBqM,EAA2B5D,KAAKzI,KAAK,4BACrCK,EAAYoI,KAAKuD,gBAEjB1J,EAAW,GACjB,IACIgK,EACAC,EACAC,EACAC,EACAhK,EALAiK,EAAW,GAyDf,OAlDIR,GAAoB,YAAXD,IACXS,EAAW,IAGE,UAAXT,IACFK,EAAQrK,EAdkB,UAAXgK,EAAqB,UAAUnI,IAASA,EAchC,CACrB9C,QAAS,UACTF,KAAM4L,IAERpJ,EAASgJ,EAAO,yBAChBhK,EAASkE,KAAK8F,IAGXD,GAGHG,EAAQlL,SAASkB,yBACjBgK,EAAMlM,UAAYqH,GAHlB6E,EAAQlL,SAASwB,eAAe+G,EAAWD,EAAajC,KAK1D4E,EAAW7L,EACT,IACA,CACEL,UAAW,4BAEb,CAACmM,IAEHlK,EAASkE,KAAK+F,GAEVJ,IACFM,EAASxK,EAAK,QAAS,CACrBjB,QAAS,UACTF,KAAM,KAERwC,EAASmJ,EAAQ,0BACjBnK,EAASkE,KAAKiG,IAGhBhK,EAAM/B,EACJ,MACA,CACEL,UAAWA,EAAU0K,KAAK,MAE5BzI,GAEFG,EAAItC,MAAMC,QAAU,aACpBqI,KAAKhG,IAAMA,EACXnB,SAASsJ,KAAK7H,YAAY0F,KAAKhG,KAE/BgG,KAAKQ,MAAM,WAEJR,IACR,CAEDkE,eACE,MAAMC,EAAS,0BACTnK,EAAMgG,KAAKhG,IACjB,IACIqB,EACAmI,EACAC,EACA3B,EACAlJ,EACAE,EACAsL,EAPAH,EAAW,GASf,OAAIjE,KAAKsD,cACAtD,MAGTpH,EAAQoB,EAAIX,cAAc,iBAErBT,GAILyC,EAAO2E,KAAKzI,KAAK,QACjBiM,EAASxD,KAAKzI,KAAK,UACnBkM,EAAQzD,KAAKzI,KAAK,SAEH,UAAXiM,EACF3I,EAASjC,EAAOuL,IAEhBnJ,EAAYpC,EAAOuL,GAEfV,GAAoB,YAAXD,IACXS,EAAW,KAIfnL,EAAOF,EAAMS,cAAc,sBAC3BtB,EAAce,EAAM,CAClBpB,MAAO,SAASuM,cAAqBA,SAGvCG,EAAOtL,EAAKO,cAAc,OAC1ByI,EAAsB,UAAX0B,EAAqB,UAAUnI,IAASA,EACnDhE,EAAa+M,EAAM,aAAc,iBAAiBtC,KAE3C9B,MA1BEA,KA2BV,CAEDqE,kBACE,MAAMrK,EAAMgG,KAAKhG,IACjB,IAAI8J,EACAF,EACA1E,EACAoF,EAEJ,OAAItE,KAAKsD,gBAITQ,EAAW9J,EAAIX,cAAc,6BAC7BuK,EAA2B5D,KAAKzI,KAAK,4BACrC2H,EAAUc,KAAKzI,KAAK,WAKlB+M,EAHGV,EAGI1E,EAFAkC,EAAWD,EAAajC,IAKjC4E,EAASjM,UAAYyM,GAbZtE,IAgBV,CAEDuE,gBACE,MAAMJ,EAAS,0BACTnK,EAAMgG,KAAKhG,IACjB,IAAIgK,EACAN,EAEJ,OAAI1D,KAAKsD,gBAITU,EAAShK,EAAIX,cAAc,2BAC3BqK,EAAW1D,KAAKzI,KAAK,YAEjByM,IACEN,EACF7I,EAASmJ,EAAQG,GAEjBnJ,EAAYgJ,EAAQG,KAVfnE,IAeV,CAEDwE,aACE,MAAMxK,EAAMgG,KAAKhG,IACjB,IAAIpC,EAEJ,OAAIoI,KAAKsD,gBAIT1L,EAAYoI,KAAKuD,gBACjBlM,EAAa2C,EAAK,YAAapC,EAAU0K,KAAK,OAJrCtC,IAOV,CAEDI,QAAQjI,GACN,OAAK4I,EAAc5I,IAInB6H,KAAKzI,KAAKY,GACP+L,eACAG,kBACAE,gBACAC,aAEIxE,MATEA,IAUV,CAEDyE,aACE,OAAIzE,KAAKsD,eAILtD,KAAKkD,QACPwB,aAAa1E,KAAKkD,OAClBlD,KAAKkD,MAAQ,MALNlD,IASV,CAED2E,WAAWC,GACT,OAAI5E,KAAKsD,gBAITtD,KAAKkD,MAAQ3M,GAAM,KACjByJ,KAAKQ,MAAM,UACXR,KAAK6E,OAAO,GACA,IAAXD,IANM5E,IASV,CAEDoD,KAAKjL,GACH,MAAM6B,EAAMgG,KAAKhG,IACjB,IAAIiJ,EACA2B,EACAE,EACAnM,EAEJ,OAAIqH,KAAKsD,gBAILtD,KAAKqD,YACPrD,KAAKI,QAAQjI,GAGf8K,EAASjD,KAAKzI,KAAK,UACnBqN,EAAW5E,KAAKzI,KAAK,YACrBuN,EAAM7B,GAAUA,GAAUjD,KAAKiD,OAASA,EAASjD,KAAKiD,OACtDtK,EAAW,OAAOmM,OAElB9E,KAAKyE,aAELzE,KAAKQ,MAAM,cAEXjK,GAAM,KACJyJ,KAAKgD,SAAU,EAEfnI,EAASb,EAAK,2BACdA,EAAItC,MAAMC,QAAUgB,EAEhBiM,EAAW,GACb5E,KAAK2E,WAAWC,EACjB,GACA,MAzBM5E,IA4BV,CAED6E,QACE,MAAM7K,EAAMgG,KAAKhG,IAEjB,IAAI+K,EACAC,EAEJ,OAAIhF,KAAKsD,gBAITyB,EAAqB/E,KAAKzI,KAAK,sBAC/ByN,EAAchF,KAAKzI,KAAK,eAEpB7B,EAAWsP,IACbA,EAAY5N,KAAK4I,MAGnBhG,EAAItC,MAAMC,QAfO,aAgBjBqD,EAAYhB,EAAK,2BAEjBgG,KAAKgD,SAAU,EACfhD,KAAK+C,QAAS,EAEdxM,GAAM,KACJyJ,KAAKQ,MAAM,UAEPuE,GACF/E,KAAKK,SACN,GACA,MAtBML,IAyBV,CAEDK,UAGE,OAFAL,KAAKQ,MAAM,iBAEPR,KAAKsD,gBAITtD,KAAKM,kBAELzH,SAASsJ,KAAK8C,YAAYjF,KAAKhG,KAE/B0K,aAAa1E,KAAKkD,OAClBlD,KAAK4C,WAEL5C,KAAKQ,MAAM,iBAVFR,IAaV,CAEDkF,eAEE,OADAlF,KAAKyE,aACEzE,IACR,CAEDmF,eACE,MAAMP,EAAW5E,KAAKzI,KAAK,YACrBd,EAAQuJ,KAAKzI,KAAK,SAExB,OAAIqN,GAAY,GAIhB5E,KAAK2E,WAAWlO,GAHPuJ,IAMV,CAEDoF,UAGE,OAFApF,KAAKyE,aACLzE,KAAK6E,QACE7E,IACR,CAEDG,eACE,MAAMnG,EAAMgG,KAAKhG,IAoBjB,OAlBAkD,EACElD,EACA,4BACA,aACAgG,KAAKkF,aACLlF,MACA,GAEF9C,EACElD,EACA,4BACA,aACAgG,KAAKmF,aACLnF,MACA,GAEF9C,EAAGlD,EAAK,0BAA2B,QAASgG,KAAKoF,QAASpF,MAAM,GAEzDA,IACR,CAEDM,kBACE,MAAMtG,EAAMgG,KAAKhG,IAMjB,OAJA0C,EAAI1C,EAAK,aAAcgG,KAAKkF,cAC5BxI,EAAI1C,EAAK,aAAcgG,KAAKmF,cAC5BzI,EAAI1C,EAAK,QAASgG,KAAKoF,SAEhBpF,IACR,EAGH0C,EAAQG,SAAW,CACjBC,GAAI,GACJzH,KAAM,OACNmI,OAAQ,UACRC,OAAO,EACPR,OAAQ,GACR2B,SAAU,EACVnO,MAAO,EACPyI,QAAS,GACTyE,YAAa,GACbD,UAAU,EACVV,SAAS,EACTY,0BAA0B,EAC1BmB,oBAAoB,EACpBC,YAAa,MAzdD,CAAC,OAAQ,UAAW,UAAW,SA4dvC3O,SAASgF,IACbqH,EAAQrH,GAASlD,IACf,MAAMkN,EAAS,CAAE,EACXvC,EAAKzD,EAAK,oBACV2F,EAAc7M,EAAQ6M,aAAe,KAC3C,IAAI/B,EAAS9K,EAAQ8K,QAAU,GAyB/B,OAvBItM,EAASwB,GACXkN,EAAOnG,QAAU/G,EAEb4I,EAAc5I,IAChB8F,EAAOoH,EAAQlN,GAGnBkN,EAAOvC,GAAKA,EACZuC,EAAOhK,KAAOA,EACdgK,EAAOpC,OAASA,EAChBoC,EAAOrC,SAAU,EACjBqC,EAAOL,YAAc,KACnBtC,EAAQmC,MAAM/B,EAAIkC,EAAY,EAGhC/C,EAAW,IAAIS,EAAQ2C,GACvBrD,EAAU3L,SAASiP,IACjBrC,GAAUqC,EAAKtL,IAAIuL,aAAe,EAAE,IAEtCtD,EAASgB,OAASA,EAClBhB,EAASmB,OACTpB,EAAUjE,KAAKkE,GAERA,EACR,IAIHS,EAAQmC,MAAQ,CAAC/B,EAAIkC,KACnB,MAAMQ,EAAMxD,EAAUjH,OACtB,IACIc,EACA0J,EAFA5J,GAAS,EAmBb,GAfAqG,EAAU3L,SAAQ,CAAC4L,EAAUpG,KAEvBiH,IAAOb,EAASa,KAClByC,EAAetD,EAASjI,IAAIuL,aAC5B5J,EAAQE,EAGJnG,EAAWsP,IACbA,EAAY5N,KAAK6K,GAGnBD,EAAUjG,OAAOF,EAAG,GACrB,IAGC2J,GAAO,IAAgB,IAAX7J,GAAgBA,EAAQqG,EAAUjH,OAAS,EACzD,OAAO,EAMT,IAHAc,EAAIF,EAGGE,EAAI2J,EAAM,EAAG3J,GAAK,EAAG,CAC1B,MAAM4J,EAAMzD,EAAUnG,GAAG7B,IAEzByL,EAAI/N,MAAW,IAAIgO,SAASD,EAAI/N,MAAW,IAAG,IAAM6N,EAAe,GAAK,IACzE,GAIH7C,EAAQiD,MAAQ,KACd,IAAI9J,EAAImG,EAAUjH,OAAS,EAC3B,KAAOc,GAAK,EAAGA,GAAK,EAClBmG,EAAUnG,GAAGgJ,OACd,EG9iBH,MAAMe,EAAoB,wBAEpBC,EAAyB,CAACC,EAAgBC,KAC9C,IAAIhP,EACAiP,EAAWF,EAEf,KAAOE,GACLjP,EAAUiP,EAASjP,QAAQU,cAEX,WAAZV,GAAoC,UAAZA,GAC1B8D,EAASmL,EAAU,0BAInBA,EADED,EACSC,EAASC,uBAETD,EAASE,kBAEvB,EAGH,MAAMC,UAAerG,EACnBC,YAAY5H,GACVwK,QAEA3C,KAAK4C,WAEDzK,GACF6H,KAAKC,WAAW9H,EAEnB,CAEDyK,WAUE,OATA5C,KAAKhI,MAAQjC,EAAUoQ,EAAOtD,UAC9B7C,KAAKoG,SAAU,EAEfpG,KAAKqG,QAAU,KACfrG,KAAKsG,OAAS,KACdtG,KAAKuG,OAAS,KACdvG,KAAKwG,SAAW,KAChBxG,KAAKpH,MAAQ,KAENoH,IACR,CAEDC,WAAW9H,GACT,IAAIoF,EAAS,KAYb,OAVAyC,KAAKzI,KAAKY,GAEVoF,EAASyC,KAAKzI,KAAK,UAEfZ,EAAS4G,GACXyC,KAAKqG,QAAUxN,SAASQ,cAAckE,GAC7B1G,EAAU0G,KACnByC,KAAKqG,QAAU9I,GAGZyC,KAAKqG,SAIVrG,KAAKE,SAASC,eAEPH,MALEA,IAMV,CAEDE,SAEE,OADAF,KAAKyG,cAAcC,OAAO1G,KAAKqG,SACxBrG,IACR,CAED2G,QAEE,OADA3G,KAAKwG,SAAS3O,UAAY,GACnBmI,IACR,CAED0G,OAAOE,GACL,MAAM9M,EAAYjB,SAASkB,yBACrBsC,EAAY,IAAIuK,EAASC,WAAU,GAAMhN,UAU/C,OARAtD,GAAM,KACJ8F,EAAUhG,SAAS+D,IACjBN,EAAUQ,YAAYF,EAAO,IAG/B4F,KAAKwG,SAASlM,YAAYR,EAAU,IAG/BkG,IACR,CAED8G,UACE,MAAMR,EAAStG,KAAKsG,OAMpB,OAJIA,GACFzN,SAASsJ,KAAK8C,YAAYqB,GAGrBtG,IACR,CAEDI,UAEE,OADAJ,KAAK2G,QAAQD,OAAO1G,KAAKqG,SAClBrG,IACR,CAEDyG,cACE,MAAMJ,EAAUrG,KAAKqG,QACrB,IACIC,EACAC,EACAC,EACA5N,EACAoN,EALAe,EAAQ/G,KAAKzI,KAAK,SA8DtB,OAvDAgP,EAASF,EAAQhN,cAAc,MAE3BxC,EAAUkQ,KACZR,EAASQ,GAGPlQ,EAAU0P,KACZQ,EAAQR,EAAOzO,WAGjByO,EAAStO,EACP,KACA,CACEL,UAAW,yBAEbmP,GAEF/G,KAAKuG,OAASA,EAEdC,EAAWvO,EAAc,UAAW,CAClC6K,GAAI,0BACJlL,UAAW,4BAEboI,KAAKwG,SAAWA,EAEhB5N,EAAQY,EAAK,QAAS,CACpBjB,QAAS,UACTF,KAAM,GACNL,MAAO,CACLJ,UAAW,2BAGfoI,KAAKpH,MAAQA,EAEb0N,EAASrO,EACP,UACA,CACE6K,GAAI,iBACJlL,UAAW,wCAEb,CAACgB,EAAO2N,EAAQC,IAElBxG,KAAKsG,OAASA,EAEdzN,SAASsJ,KAAK7H,YAAYgM,GAE1B/P,GAAM,KAEJyP,EAAWM,EAAOL,uBAClBJ,EAAuBG,GAAU,GAEjCA,EAAWM,EAAOJ,mBAClBL,EAAuBG,EAAS,IAG3BhG,IACR,CAEDgH,QACE,MAAMC,EAAS,iBACTC,EAAU,GAAGD,aACb9C,EAAS,GAAG8C,WACZX,EAAStG,KAAKsG,OACda,EAAYtO,SAASuO,iBAAiB,2BACtCC,EAAkBrH,KAAKzI,KAAK,oBAAsBqO,EAExD,OAAI5F,KAAKoG,UAAYE,IAIrBa,EAAU9Q,SAAS2P,IACjBnL,EAASmL,EAAU7B,EAAO,IAE5BtJ,EAASyL,EAAQY,GACjBlM,EAAYsL,EAAQnC,GACpBnE,KAAKoG,SAAU,EAEf1D,EAAQ4E,KAAK,CACX7D,OAAO,EACPvE,QAASmI,IAGXrH,KAAKQ,MAAM,iBAfFR,IAkBV,CAEDuH,OACE,MAAMN,EAAS,iBACTC,EAAU,GAAGD,aACb9C,EAAS,GAAG8C,WACZX,EAAStG,KAAKsG,OACda,EAAYtO,SAASuO,iBAAiB,2BAE5C,OAAKpH,KAAKoG,SAAYE,GAItBzL,EAASyL,EAAQnC,GACjBnJ,EAAYsL,EAAQY,GACpBC,EAAU9Q,SAAS2P,IACjBhL,EAAYgL,EAAU7B,EAAO,IAE/BnE,KAAKoG,SAAU,EAEfpG,KAAKQ,MAAM,eAEJR,MAZEA,IAaV,CAEDwH,SAOE,OANIxH,KAAKoG,QACPpG,KAAKuH,OAELvH,KAAKgH,QAGAhH,IACR,CAEDyH,QACE,OAAK/R,EAAW+R,QAIhBA,QAEOzH,MALEA,IAMV,CAEDK,UAGE,OAFeL,KAAKsG,QAMpBtG,KAAKM,kBAAkBwG,UAAUlE,WAE1B5C,MALEA,IAMV,CAEDG,eACE,MAAMmG,EAAStG,KAAKsG,OAEpB,OAAKA,GCrQE,EAAChP,EAAI+D,EAAM7E,EAAI2G,EAAMC,EAASC,GAAO,KAE9C,MAAM/B,EAAUH,EAAeI,QAAQF,IAAS,EAC1CO,EAAW,SAAU0B,GACzB,IAAIQ,EAAkBV,GAAW9F,GAIjB,IAAZ8F,IACFU,EAAkBX,IAKP,IAATE,GACFX,EAAIpF,EAAI+D,EAAMO,GAGhBpF,EAAGY,KAAK0G,EAAiBR,EAAKH,EAC/B,EAED,IAAKzH,EAAWc,GACd,OAAO,EAGJc,EAAGoE,aACNpE,EAAGoE,WAAa,IAIlBpE,EAAGoE,WAAWqC,KAAK,CACjBzG,KACA+D,OACA7E,GAAIoF,EACJuB,OACAC,UACA9B,YAIF9E,EAAGgF,kBAAoBI,EAEvBtE,EAAG0G,iBAAiB3C,EAAMO,EAAUN,EAAQ,ED+N1CoM,CAAG7O,SAAU,QAASmH,KAAK2H,cAAe3H,MAAM,GAChD9C,EAAGoJ,EAAQ,yBAA0B,QAAStG,KAAKuH,KAAMvH,MAAM,GAE/DA,KAAKW,IAAI,uBAAwBX,KAAK4H,SACtC5H,KAAKW,IAAI,yBAA0BX,KAAK6H,gBAEjC7H,MATEA,IAUV,CAEDM,kBACE,MAAMgG,EAAStG,KAAKsG,OAEpB,OAAKA,GAIL5J,EAAI7D,SAAU,QAASmH,KAAK2H,eAC5BjL,EAAI4J,EAAQ,QAAStG,KAAKuH,MAE1BvH,KAAKa,KAAK,wBACVb,KAAKa,KAAK,0BAEHb,MATEA,IAUV,CAED4H,UAEE,OADA5H,KAAKyH,QACEzH,IACR,CAED6H,iBAEE,OADA7H,KAAKwH,SACExH,IACR,CAED2H,cAAcrK,GAQZ,OALgB,KAFAA,EAAIwK,SAEE9H,KAAKoG,UACzBpG,KAAKwH,SErSE,SAAUlK,GACrBA,EAAIyK,kBACJzK,EAAI0K,gBACN,CFmSMC,CAAK3K,IAGA0C,IACR,SAGHmG,EAAOtD,SAAW,CAChBtF,OAAQ,GACRwJ,MAAO,GACPM,gBAAiBzB"}