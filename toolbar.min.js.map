{"version":3,"file":"toolbar.min.js","sources":["src/utils/types/isString.js","src/utils/lang/hasOwn.js","src/utils/lang/toString.js","src/base.js","src/utils/types/isObject.js","src/utils/lang/extend.js","src/utils/types/isFunction.js","src/utils/lang/later.js","src/utils/types/isArray.js","src/utils/types/isElement.js","src/utils/dom/createElement.js","src/utils/dom/setAttribute.js","src/utils/dom/hasClass.js","src/utils/dom/addClass.js","src/utils/dom/removeClass.js","src/utils/lang/trim.js","src/utils/dom/matches.js","src/utils/dom/getParentOrHost.js","src/utils/event/enum.js","src/utils/event/_off.js","src/utils/event/_delete.js","src/utils/event/purgeElement.js","src/utils/event/getListeners.js","src/utils/event/off.js","src/utils/event/on.js","src/utils/event/getTarget.js","src/utils/dom/resolveTextNode.js","src/utils/dom/closest.js","src/_createButton.js","src/utils/icons.js","src/toolbar.js"],"sourcesContent":["/**\n * 检测数据是否为 String 类型\n * ========================================================================\n * @method isArray\n * @param {*} str\n * @returns {boolean}\n */\nconst isString = (str) => {\n  return typeof str === 'string'\n}\n\nexport default isString\n","/**\n * 检测对象自身属性中是否具有指定的属性。\n * ========================================================================\n * @method hasOwn\n * @param {Object} obj - （必须）检测的目标对象\n * @param {String} prop - （必须）属性名\n * @returns {Boolean}\n */\nconst hasOwn = (obj, prop) => {\n  const hasOwnProperty = Object.prototype.hasOwnProperty\n  return obj && hasOwnProperty.call(obj, prop)\n}\n\nexport default hasOwn\n","const toString = Object.prototype.toString\n\n/**\n * Object 对象原型上的 toString 方法\n * ========================================================================\n * @method toString\n * @param {*} val\n * @returns {string}\n */\nexport default toString\n","import isString from './utils/types/isString'\r\nimport hasOwn from './utils/lang/hasOwn'\r\nimport isObject from './utils/types/isObject'\r\nimport extend from './utils/lang/extend'\r\n\r\nclass Base {\r\n  constructor(options) {\r\n    this.attrs = {}\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    this.attr(options).render().addListeners()\r\n    return this\r\n  }\r\n\r\n  attr(prop, value) {\r\n    const attrs = this.attrs\r\n\r\n    if (isString(prop)) {\r\n      // 只能扩展 attrs 中已有的属性\r\n      if (value && hasOwn(attrs, prop)) {\r\n        // 更新单个配置信息\r\n        attrs[prop] = value\r\n        return this\r\n      }\r\n\r\n      // 只传递 prop 参数，则返回对应的属性值\r\n      return attrs[prop]\r\n    } else if (isObject(prop)) {\r\n      // 批量更新配置信息\r\n      extend(attrs, prop)\r\n\r\n      return this\r\n    } else if (arguments.length === 0) {\r\n      // 不传递参数，直接返回整个\r\n      return attrs\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  render() {\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    this.removeListeners()\r\n    return this\r\n  }\r\n\r\n  reload(options) {\r\n    this.destroy().initialize(this.attr(options))\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    return this\r\n  }\r\n}\r\n\r\nexport default Base\r\n","import toString from '../lang/toString'\n\n/**\n * 检测数据是否为 Object 类型\n * ========================================================================\n * @method isObject\n * @param {*} o\n * @returns {boolean}\n */\nconst isObject = (o) => {\n  return toString.apply(o) === '[object Object]' && o !== null\n}\n\nexport default isObject\n","import hasOwn from './hasOwn'\n\n/**\n * 扩展对象\n * ========================================================================\n * @method extend\n * @param {Object} origin\n * @param {Object} source\n */\nconst extend = (origin, source) => {\n  const keys = Object.keys(source)\n\n  keys.forEach((prop) => {\n    if (hasOwn(source, prop)) {\n      origin[prop] = source[prop]\n    }\n  })\n}\n\nexport default extend\n","import toString from '../lang/toString'\n\n/**\n * 检测测试数据是否为 Function 类型\n * ========================================================================\n * @method isFunction\n * @param {*} val - （必须）待检测的数据\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\n */\nconst isFunction = (val) => {\n  return (\n    typeof val === 'function' || toString.apply(val) === '[object Function]'\n  )\n}\n\nexport default isFunction\n","import isFunction from '../types/isFunction'\n\n/**\n * later - 延迟执行方法\n * ========================================================================\n * @method later\n * @param {Function} fn\n * @param {Number} [delay]\n * @returns {number|boolean}\n */\nconst later = (fn, delay = 300) => {\n  if (!isFunction(fn)) {\n    return false\n  }\n\n  return setTimeout(() => {\n    fn()\n  }, delay)\n}\n\nexport default later\n","import toString from '../lang/toString'\n\n/**\n * 检测数据是否为 Array 类型\n * ========================================================================\n * @method isArray\n * @param {*} o\n * @returns {boolean}\n */\nconst isArray = (o) => {\n  if (Array.isArray) {\n    return Array.isArray(o)\n  } else {\n    return toString.apply(o) === '[object Array]'\n  }\n}\n\nexport default isArray\n","/**\n * 检测数据是否为 HTMLElement DOM 节点\n * ========================================================================\n * @method isElement\n * @param {*} o\n * @returns {boolean}\n */\nconst isElement = (o) => {\n  return o && o.nodeName && o.tagName && o.nodeType === 1\n}\n\nexport default isElement\n","import hasOwn from '../lang/hasOwn'\nimport isArray from '../types/isArray'\nimport isElement from '../types/isElement'\nimport setAttribute from './setAttribute'\n\n/**\n * 创建 DOM 节点，并添加属性和子节点\n * ========================================================================\n * @method createElement\n * @param {String} tagName - 标签名称\n * @param {Object} attributes - 属性对象\n * @param {Array} children - 子节点数组\n * @returns {HTMLElement}\n */\nconst createElement = (tagName, attributes, children) => {\n  const keys = Object.keys(attributes)\n  let element = document.createElement(tagName)\n\n  keys.forEach((attr) => {\n    if (hasOwn(attributes, attr)) {\n      setAttribute(element, attr, attributes[attr])\n    }\n  })\n\n  if (isArray(children)) {\n    children.forEach((child) => {\n      let childNode = isElement(child) ? child : document.createTextNode(child)\n\n      element.appendChild(childNode)\n    })\n  }\n\n  return element\n}\n\nexport default createElement\n","/**\n * 给 DOM 节点设置属性/值\n * ========================================================================\n * @method setAttribute\n * @param {HTMLElement} el - DOM 节点\n * @param {String} attr - 属性名称\n * @param {String|Number|Boolean} value - 属性值\n */\nconst setAttribute = (el, attr, value) => {\n  let tagName = el.tagName.toLowerCase()\n\n  switch (attr) {\n    case 'style':\n      el.style.cssText = value\n      break\n    case 'value':\n      if (tagName === 'input' || tagName === 'textarea') {\n        el.value = value\n      } else {\n        el.setAttribute(attr, value)\n      }\n      break\n    case 'className':\n      el.className = value\n      break\n    default:\n      el.setAttribute(attr, value)\n      break\n  }\n}\n\nexport default setAttribute\n","/**\n * 检测 DOM 节点是否包含名为 className 的样式\n * ========================================================================\n * @method hasClass\n * @param {HTMLElement|Object} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {*}\n */\nconst hasClass = (el, className) => {\n  let allClass = el.className\n\n  if (!allClass) {\n    return false\n  }\n\n  return allClass.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'))\n}\n\nexport default hasClass\n","import hasClass from './hasClass'\n\n/**\n * 给 DOM 节点添加名为 className 的样式\n * ========================================================================\n * @method addClass\n * @param {HTMLElement|Object} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst addClass = (el, className) => {\n  let allClass = el.className\n\n  if (hasClass(el, className)) {\n    return false\n  }\n\n  allClass += allClass.length > 0 ? ' ' + className : className\n\n  el.className = allClass\n}\n\nexport default addClass\n","import trim from '../lang/trim'\nimport hasClass from './hasClass'\n\n/**\n * 移除 DOM 节点的 className 样式\n * ========================================================================\n * @method removeClass\n * @param {HTMLElement|Object} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst removeClass = (el, className) => {\n  let allClass = el.className\n\n  if (!allClass || !hasClass(el, className)) {\n    return false\n  }\n\n  allClass = trim(allClass.replace(className, ''))\n\n  el.className = allClass\n}\n\nexport default removeClass\n","import isString from '../types/isString'\n\n/**\n * 清楚字符串起始位置所有的空格\n * ========================================================================\n * @method trim\n * @param {string} str\n * @returns {string|Boolean}\n */\nconst trim = (str) => {\n  if (!isString(str)) {\n    return false\n  }\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nexport default trim\n","/**\n * 获取 options 节点下匹配 selector 选择器的 DOM 节点\n * ========================================================================\n * Element.matches() 方法可以用来判断 DOM 元素是否与给定的选择器匹配，事件代理判断是\n * 否触发绑定的代理事件回调函数，关键就是使用 Element.matches() 辨别当前事件触发的目\n * 标 DOM 元素是否为事件代理所期望触发的目标。\n * ========================================================================\n * @method matches\n * @see https://developer.mozilla.org/en-US/docs/web/api/element/matches\n * @param {HTMLElement} el - （必须）DOM 元素\n * @param {String} selector - （必须）匹配 DOM 元素的选择器\n * @returns {Boolean}\n */\nconst matches = (el, selector = '') => {\n  const sel = selector.replace(/^>/i, '')\n\n  if (!selector || !sel || !el) {\n    return false\n  }\n\n  /* istanbul ignore else */\n  if (el.matches) {\n    return el.matches(sel)\n  } else if (el.msMatchesSelector) {\n    return el.msMatchesSelector(sel)\n  } else {\n    return false\n  }\n}\n\nexport default matches\n","/**\n * 获取 DOM 元素的父节点\n * ========================================================================\n * @method getParentOrHost\n * @param {*|HTMLElement} el - （必须）要获取父节点的 DOM 元素\n * @returns {*|HTMLElement}\n */\nconst getParentOrHost = (el) => {\n  return el.host && el !== document && el.host.nodeType\n    ? el.host\n    : el.parentNode\n}\n\nexport default getParentOrHost\n","export const CAPTURE_EVENTS = [\n  'focusout',\n  'blur',\n  'focusin',\n  'focus',\n  'load',\n  'unload',\n  'mouseenter',\n  'mouseleave'\n]\n","import { CAPTURE_EVENTS } from './enum'\nimport _delete from './_delete'\n\n/**\n * （私有方法）取消 type 类型的代理事件绑定\n * ========================================================================\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\n * ========================================================================\n * @method _off\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\n * @param {String} type - （必须）事件类型\n * @param {Function} fn - （必须）事件处理器回调函数\n * @private\n */\nconst _off = (el, type, fn) => {\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\n\n  /* istanbul ignore else */\n  if (fn._delegateListener) {\n    fn = fn._delegateListener\n    delete fn._delegateListener\n  }\n\n  // 移除缓存的 _listeners 数据\n  _delete(el, type, fn)\n\n  el.removeEventListener(type, fn, capture)\n}\n\nexport default _off\n","/**\n * 删除 DOM 元素缓存的 _listeners 数据\n * ========================================================================\n * @method _delete\n * @param {HTMLElement} el - 要删除 listener 的 DOM 元素\n * @param {String} type - 事件类型（名称）\n * @param {Function} [fn] - 事件处理器回调函数\n */\nconst _delete = function (el, type, fn) {\n  const listeners = el._listeners\n  let index = -1\n\n  if (listeners.length < 1) {\n    return false\n  }\n\n  // 移除缓存的 _listeners 数据\n  listeners.forEach((listener, i) => {\n    const handler = listener.fn\n\n    if (type === listener.type) {\n      index = i\n\n      if (handler === fn) {\n        index = i\n      }\n    }\n  })\n\n  /* istanbul ignore else */\n  if (index > -1) {\n    listeners.splice(index, 1)\n  }\n}\n\nexport default _delete\n","import isString from '../types/isString'\nimport isElement from '../types/isElement'\nimport getListeners from './getListeners'\nimport _off from './_off'\n\n/**\n * 销毁（type 类型的）代理事件绑定\n * ========================================================================\n * 1. 设置了事件类型 type，则销毁指定类型的事件绑定，否则清除所有代理事件绑定\n * 2. recurse 设置为 true，递归销毁子节点全部事件绑定\n * ========================================================================\n * @method purgeElement\n * @param {HTMLElement|String} el - （必须）DOM 元素或者其选择器\n * @param {String|Boolean} type - （必须）事件类型\n * @param {Boolean} [recurse] - （可选）是否递归销毁子节点所有事件绑定\n */\nconst purgeElement = function (el, type, recurse = false) {\n  const $element = isString(el) ? document.querySelector(el) : el\n  const $children = $element.childNodes\n  const listeners = getListeners($element, type)\n\n  listeners.forEach((listener) => {\n    _off($element, listener.type, listener.fn)\n  })\n\n  if (\n    (recurse || type === true || arguments.length === 1) &&\n    $element &&\n    $children\n  ) {\n    $children.forEach(($child) => {\n      if (isElement($child)) {\n        purgeElement($child, type, recurse)\n      }\n    })\n  }\n}\n\nexport default purgeElement\n","import isString from '../types/isString'\n\n/**\n * 获取 DOM 元素（type 事件类型）事件绑定信息\n * ========================================================================\n * 如果设置了事件类型 type， 则返回指定类型的事件绑定信息，否则返回所有事件绑定信息\n * ========================================================================\n * @methods getListeners\n * @param {HTMLElement} el - （必须）要获取事件绑定信息的 DOM 元素\n * @param {String} [type] - （可选）事件类型\n * @returns {Array} - 已绑定的事件信息\n */\nconst getListeners = (el, type) => {\n  let listeners = el._listeners || []\n\n  if (isString(type) && type) {\n    listeners = listeners.filter((listener) => {\n      return listener.type === type\n    })\n  }\n\n  return listeners\n}\n\nexport default getListeners\n","import purgeElement from './purgeElement'\nimport isFunction from '../types/isFunction'\nimport _off from './_off'\n\n/**\n * 取消 type 类型的代理事件绑定\n * ========================================================================\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\n * ========================================================================\n * @method off\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\n * @param {String} type - （必须）事件类型\n * @param {Function} [fn] - （可选）事件处理器回调函数\n */\nconst off = (el, type, fn) => {\n  // 如果不设置 fn 参数，默认清除 el 元素上绑定的所有事件处理器\n  if (!isFunction(fn)) {\n    return purgeElement(el, type)\n  }\n\n  _off(el, type, fn)\n}\n\nexport default off\n","import closest from '../dom/closest'\nimport off from './off'\nimport getTarget from './getTarget'\n\nimport { CAPTURE_EVENTS } from './enum'\n\n/**\n * 绑定代理事件\n * ========================================================================\n * @method on\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\n * @param {String} selector - （必须）事件代理目标 DOM 元素的选择器\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\n * @param {Function|Object} fn - （可选） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\n * @param {Boolean} once - （可选）是否仅触发一次\n */\nconst on = (el, selector, type, fn, data, context, once = false) => {\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\n\n  const listener = function (evt) {\n    const target = getTarget(evt)\n    // 通过 Element.matches 方法获得点击的目标元素\n    const delegateTarget = closest(target, selector, el)\n    let overrideContext = context || el\n\n    evt.delegateTarget = delegateTarget\n\n    // 当设置为 true 时，则事件处理器回调函数的\n    // this 上下文指向为 data 对象\n    if (context === true) {\n      overrideContext = data\n    }\n\n    /* istanbul ignore else */\n    if (delegateTarget) {\n      // 仅触发一次\n      /* istanbul ignore else */\n      if (once === true) {\n        off(el, type, listener)\n      }\n\n      fn.call(overrideContext, evt, data)\n    }\n  }\n\n  if (!el._listeners) {\n    el._listeners = []\n  }\n\n  // 缓存 options 元素绑定的事件处理器\n  el._listeners.push({\n    el,\n    selector,\n    type,\n    fn: listener,\n    data,\n    context,\n    capture\n  })\n\n  // 缓存包装后的事件处理器\n  fn._delegateListener = listener\n\n  el.addEventListener(type, listener, capture)\n}\n\nexport default on\n","import resolveTextNode from '../dom/resolveTextNode'\n\n/**\n * 返回触发事件的 target DOM 元素\n * ========================================================================\n * @method getTarget\n * @param {Event} evt - Event 对象\n * @return {HTMLElement} - Event 对象的 target DOM 元素\n */\nconst getTarget = function (evt) {\n  const target = evt.target\n\n  return resolveTextNode(target)\n}\n\nexport default getTarget\n","/**\n * 在某些情况下，某些浏览器（例如：Safari 浏览器）会返回实际的目标元素内部的文本节点。\n * resolveTextNode() 方法则会返回实际的目标节点。\n * ========================================================================\n * @method resolveTextNode\n * @param {HTMLElement|Text} el - 要解析的节点\n * @return {*|HTMLElement} - 实际的目标 DOM 节点\n */\nconst resolveTextNode = function (el) {\n  if (el && el.nodeType === 3) {\n    return el.parentNode\n  }\n\n  return el\n}\n\nexport default resolveTextNode\n","import matches from './matches'\nimport getParentOrHost from './getParentOrHost'\n\n/**\n * 获取 options 元素父元素最近的包含 selector 选择器的元素\n * ========================================================================\n * @method closest\n * @param {HTMLElement} el - （必须）DOM 元素\n * @param {String} selector - （必须）DOM 元素的选择其\n * @param {HTMLElement} [ctx] - （必须）比对的 DOM 元素\n * @param {Boolean} [includeCTX] - （必须）是否包含 context DOM 元素\n * @returns {null|HTMLElement} - 返回最接近的 DOM 元素\n */\nconst closest = (el, selector, ctx, includeCTX) => {\n  const context = ctx || document\n\n  if (!el) {\n    return null\n  }\n\n  do {\n    /* istanbul ignore else */\n    if (\n      (selector != null &&\n        (selector[0] === '>'\n          ? el.parentNode === context && matches(el, selector)\n          : matches(el, selector))) ||\n      (includeCTX && el === context)\n    ) {\n      return el\n    }\n\n    /* istanbul ignore else */\n    if (el === context) {\n      break\n    }\n\n    /* jshint boss:true */\n  } while ((el = getParentOrHost(el)))\n}\n\nexport default closest\n","import { createSvgIcon } from './utils/icons'\nimport createElement from './utils/dom/createElement'\nimport addClass from './utils/dom/addClass'\n\nconst _createButton = (button) => {\n  const $icon = createSvgIcon(button.icon, button.size)\n  const $anchor = createElement(\n    'a',\n    {\n      className: `outline-toolbar__anchor`,\n      href: button.link\n    },\n    [$icon]\n  )\n  const $button = createElement(\n    'div',\n    {\n      className: `outline-toolbar__button ${button.name}`\n    },\n    [button.link ? $anchor : $icon]\n  )\n\n  addClass($icon, 'outline-toolbar__icon')\n\n  if (button.disabled) {\n    addClass($button, 'outline-toolbar_disabled')\n  }\n\n  return $button\n}\n\nexport default _createButton\n","import isArray from './types/isArray'\n\n/**\n * 绘制 SVG Sprites 图标集\n * ========================================================================\n * @method paintSvgSprites\n * @param {Array} [symbols] - （可选）symbols 图标数组\n *                             传递 symbols - 绘制 symbols + SYMBOLS 的图标集\n *                             不传递 symbols - 仅绘制默认 SYMBOLS 图标集\n */\nexport const paintSvgSprites = (symbols = []) => {\n  const SYMBOLS = [\n    '<symbol id=\"outline-icon-up\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 261.696c0.832-0.448 1.536-1.216 2.368-1.536a38.72 38.72 0 0 1 46.08 8.256l277.824 302.272a41.92 41.92 0 0 1-1.536 58.048 39.104 39.104 0 0 1-56.448-1.6L513.728 355.904 260.736 626.048a39.104 39.104 0 0 1-56.448 1.088 41.6 41.6 0 0 1-1.088-57.984L483.84 269.696c0.512-0.512 1.344-0.768 1.92-1.408l1.088-1.344c2.368-2.496 5.312-3.648 8-5.248z\"></path></symbol>',\n    '<symbol id=\"outline-icon-down\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 762.304c0.832 0.448 1.536 1.216 2.368 1.536 15.232 7.488 33.92 4.992 46.08-8.256l277.824-302.272a41.92 41.92 0 0 0-1.536-58.048 39.104 39.104 0 0 0-56.448 1.6l-249.344 271.232-252.992-270.144a39.104 39.104 0 0 0-56.448-1.088 41.6 41.6 0 0 0-1.088 57.984l280.576 299.456c0.512 0.512 1.344 0.768 1.92 1.408l1.088 1.344c2.368 2.496 5.312 3.648 8 5.248z\"></path></symbol>',\n    '<symbol id=\"outline-icon-menu\" viewBox=\"0 0 1024 1024\"><path d=\"M320 256h640V128H320zM320 576h640V448H320zM320 896h640v-128H320zM64 256h128V128H64zM64 576h128V448H64zM64 896h128v-128H64z\"></path></symbol>',\n    '<symbol id=\"outline-icon-hash\" viewBox=\"0 0 24 24\"><path d=\"M14.216 10l-0.444 4h-3.988l0.444-4zM15.006 2.89l-0.568 5.11h-3.988l0.543-4.89c0.061-0.549-0.335-1.043-0.883-1.104s-1.043 0.335-1.104 0.884l-0.568 5.11h-4.438c-0.552 0-1 0.448-1 1s0.448 1 1 1h4.216l-0.444 4h-3.772c-0.552 0-1 0.448-1 1s0.448 1 1 1h3.549l-0.543 4.89c-0.061 0.549 0.335 1.043 0.883 1.104s1.043-0.335 1.104-0.883l0.569-5.111h3.988l-0.543 4.89c-0.061 0.549 0.335 1.043 0.883 1.104s1.043-0.335 1.104-0.883l0.568-5.111h4.438c0.552 0 1-0.448 1-1s-0.448-1-1-1h-4.216l0.444-4h3.772c0.552 0 1-0.448 1-1s-0.448-1-1-1h-3.549l0.543-4.89c0.061-0.549-0.335-1.043-0.883-1.104s-1.043 0.335-1.104 0.883z\"></path></symbol>',\n    '<symbol id=\"outline-icon-close\" viewBox=\"0 0 1024 1024\"><path d=\"M536.96 491.648L310.592 265.344a32 32 0 1 0-45.248 45.248L491.584 536.96l-226.304 226.304a32 32 0 0 0 45.312 45.248l226.24-226.304 226.304 226.304a32 32 0 0 0 45.248-45.248L582.144 536.896l226.304-226.24a32 32 0 0 0-45.248-45.248L536.896 491.584z\"></path></symbol>',\n    '<symbol id=\"outline-icon-homepage\" viewBox=\"0 0 26 28\"><path d=\"M22 15.5v7.5c0 0.547-0.453 1-1 1h-6v-6h-4v6h-6c-0.547 0-1-0.453-1-1v-7.5c0-0.031 0.016-0.063 0.016-0.094l8.984-7.406 8.984 7.406c0.016 0.031 0.016 0.063 0.016 0.094zM25.484 14.422l-0.969 1.156c-0.078 0.094-0.203 0.156-0.328 0.172h-0.047c-0.125 0-0.234-0.031-0.328-0.109l-10.813-9.016-10.813 9.016c-0.109 0.078-0.234 0.125-0.375 0.109-0.125-0.016-0.25-0.078-0.328-0.172l-0.969-1.156c-0.172-0.203-0.141-0.531 0.063-0.703l11.234-9.359c0.656-0.547 1.719-0.547 2.375 0l3.813 3.187v-3.047c0-0.281 0.219-0.5 0.5-0.5h3c0.281 0 0.5 0.219 0.5 0.5v6.375l3.422 2.844c0.203 0.172 0.234 0.5 0.063 0.703z\"></path></symbol>',\n    '<symbol id=\"outline-icon-tags\" viewBox=\"0 0 24 28\"><path d=\"M7 7c0-1.109-0.891-2-2-2s-2 0.891-2 2 0.891 2 2 2 2-0.891 2-2zM23.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578s-1.047-0.219-1.406-0.578l-11.172-11.188c-0.797-0.781-1.422-2.297-1.422-3.406v-6.5c0-1.094 0.906-2 2-2h6.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422zM29.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578-0.812 0-1.219-0.375-1.75-0.922l7.344-7.344c0.359-0.359 0.578-0.875 0.578-1.406s-0.219-1.047-0.578-1.422l-11.172-11.156c-0.797-0.797-2.312-1.422-3.422-1.422h3.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422z\"></path><path d=\"M12 2c6.625 0 12 5.375 12 12 0 5.297-3.437 9.797-8.203 11.391-0.609 0.109-0.828-0.266-0.828-0.578 0-0.391 0.016-1.687 0.016-3.297 0-1.125-0.375-1.844-0.812-2.219 2.672-0.297 5.484-1.313 5.484-5.922 0-1.313-0.469-2.375-1.234-3.219 0.125-0.313 0.531-1.531-0.125-3.187-1-0.313-3.297 1.234-3.297 1.234-0.953-0.266-1.984-0.406-3-0.406s-2.047 0.141-3 0.406c0 0-2.297-1.547-3.297-1.234-0.656 1.656-0.25 2.875-0.125 3.187-0.766 0.844-1.234 1.906-1.234 3.219 0 4.594 2.797 5.625 5.469 5.922-0.344 0.313-0.656 0.844-0.766 1.609-0.688 0.313-2.438 0.844-3.484-1-0.656-1.141-1.844-1.234-1.844-1.234-1.172-0.016-0.078 0.734-0.078 0.734 0.781 0.359 1.328 1.75 1.328 1.75 0.703 2.141 4.047 1.422 4.047 1.422 0 1 0.016 1.937 0.016 2.234 0 0.313-0.219 0.688-0.828 0.578-4.766-1.594-8.203-6.094-8.203-11.391 0-6.625 5.375-12 12-12zM4.547 19.234c0.031-0.063-0.016-0.141-0.109-0.187-0.094-0.031-0.172-0.016-0.203 0.031-0.031 0.063 0.016 0.141 0.109 0.187 0.078 0.047 0.172 0.031 0.203-0.031zM5.031 19.766c0.063-0.047 0.047-0.156-0.031-0.25-0.078-0.078-0.187-0.109-0.25-0.047-0.063 0.047-0.047 0.156 0.031 0.25 0.078 0.078 0.187 0.109 0.25 0.047zM5.5 20.469c0.078-0.063 0.078-0.187 0-0.297-0.063-0.109-0.187-0.156-0.266-0.094-0.078 0.047-0.078 0.172 0 0.281s0.203 0.156 0.266 0.109zM6.156 21.125c0.063-0.063 0.031-0.203-0.063-0.297-0.109-0.109-0.25-0.125-0.313-0.047-0.078 0.063-0.047 0.203 0.063 0.297 0.109 0.109 0.25 0.125 0.313 0.047zM7.047 21.516c0.031-0.094-0.063-0.203-0.203-0.25-0.125-0.031-0.266 0.016-0.297 0.109s0.063 0.203 0.203 0.234c0.125 0.047 0.266 0 0.297-0.094zM8.031 21.594c0-0.109-0.125-0.187-0.266-0.172-0.141 0-0.25 0.078-0.25 0.172 0 0.109 0.109 0.187 0.266 0.172 0.141 0 0.25-0.078 0.25-0.172zM8.937 21.438c-0.016-0.094-0.141-0.156-0.281-0.141-0.141 0.031-0.234 0.125-0.219 0.234 0.016 0.094 0.141 0.156 0.281 0.125s0.234-0.125 0.219-0.219z\"></path></symbol>',\n    '<symbol id=\"outline-icon-issues\" viewBox=\"0 0 26 28\"><path d=\"M25.5 15c0 0.547-0.453 1-1 1h-3.5c0 1.953-0.422 3.422-1.047 4.531l3.25 3.266c0.391 0.391 0.391 1.016 0 1.406-0.187 0.203-0.453 0.297-0.703 0.297s-0.516-0.094-0.703-0.297l-3.094-3.078s-2.047 1.875-4.703 1.875v-14h-2v14c-2.828 0-4.891-2.063-4.891-2.063l-2.859 3.234c-0.203 0.219-0.469 0.328-0.75 0.328-0.234 0-0.469-0.078-0.672-0.25-0.406-0.375-0.438-1-0.078-1.422l3.156-3.547c-0.547-1.078-0.906-2.469-0.906-4.281h-3.5c-0.547 0-1-0.453-1-1s0.453-1 1-1h3.5v-4.594l-2.703-2.703c-0.391-0.391-0.391-1.016 0-1.406s1.016-0.391 1.406 0l2.703 2.703h13.188l2.703-2.703c0.391-0.391 1.016-0.391 1.406 0s0.391 1.016 0 1.406l-2.703 2.703v4.594h3.5c0.547 0 1 0.453 1 1zM18 6h-10c0-2.766 2.234-5 5-5s5 2.234 5 5z\"></path></symbol>'\n  ]\n  const sprites =\n    isArray(symbols) && symbols.length > 0 ? SYMBOLS.concat(symbols) : SYMBOLS\n  const $body = document.body\n  let $icons = document.querySelector('#svg-sprites')\n\n  if ($icons) {\n    $icons.innerHTML = sprites.join('')\n  } else {\n    $icons = document.createElement('div')\n    $icons.innerHTML =\n      `<svg id=\"svg-sprites\" aria-hidden=\"true\" style=\"position:absolute;display:none;width:0;height:0;overflow:hidden;\">` +\n      `${sprites.join('')}` +\n      `</svg>`\n    $body.insertBefore($icons.firstChild, $body.firstChild)\n  }\n}\n\n/**\n * 创建 SVG 图标 DOM 元素\n * ========================================================================\n * @method createSvgIcon\n * @param {String} name\n * @param {Number|String|Array} [size]\n * @param {String} [color]\n * @param {String} [iconSet]\n * @returns {HTMLElement}\n */\nexport const createSvgIcon = (\n  name,\n  size = 0,\n  color = '',\n  iconSet = 'outline'\n) => {\n  const binds = iconSet\n    ? `xlink:href=\"#${iconSet}-icon-${name}\"`\n    : `xlink:href=\"#icon-${name}\"`\n  const width = isArray(size) ? size[0] : size\n  const height = isArray(size) ? size[1] : size\n  const defaultRules = size ? `width:${width}px;height:${height}px;` : ''\n  const cssRules = color ? defaultRules + `color:${color}` : defaultRules\n  const svg =\n    `<svg aria-hidden=\"true\" class=\"outline-icon__svg\" style=\"${cssRules}\">` +\n    `<use ${binds}></use>` +\n    `</svg>`\n  const $icon = document.createElement('i')\n\n  $icon.className = 'outline-icon'\n  $icon.innerHTML = svg\n\n  return $icon\n}\n","import Base from './base'\n\nimport isFunction from './utils/types/isFunction'\nimport later from './utils/lang/later'\nimport createElement from './utils/dom/createElement'\nimport addClass from './utils/dom/addClass'\nimport hasClass from './utils/dom/hasClass'\nimport removeClass from './utils/dom/removeClass'\nimport on from './utils/event/on'\nimport off from './utils/event/off'\nimport { paintSvgSprites } from './utils/icons'\n\nimport _createButton from './_createButton'\n\nconst DISABLED = 'outline-toolbar_disabled'\nconst HIDDEN = 'outline-toolbar_hidden'\n\nclass Toolbar extends Base {\n  constructor(options) {\n    super()\n\n    this.attrs = Toolbar.DEFAULTS\n    this.$el = null\n    this.disabled = false\n    this.closed = false\n    this.buttons = []\n\n    if (options) {\n      this.initialize(options)\n    }\n  }\n\n  initialize(options) {\n    let created\n\n    this.attr(options)\n    created = this.attr('created')\n    this.disabled = this.attr('disabled')\n    this.closed = this.attr('closed')\n\n    if (isFunction(created)) {\n      created.call(this)\n    }\n\n    this.render().addListeners()\n\n    return this\n  }\n\n  isDisabled(name) {\n    const buttons = this.attr('buttons')\n    let button\n\n    if (name) {\n      button = buttons.find((option) => option.name === name)\n\n      return !!(button && button.disabled)\n    }\n\n    return this.disabled\n  }\n\n  isClosed() {\n    return this.closed\n  }\n\n  highlight(name) {\n    const button = this.buttons.find((item) => item.name === name)\n    const ACTIVE = 'outline-toolbar_active'\n    let $button\n\n    if ($button) {\n      return this\n    }\n\n    $button = button.$el\n\n    if (hasClass($button, ACTIVE)) {\n      removeClass($button, ACTIVE)\n    } else {\n      addClass($button, ACTIVE)\n    }\n\n    return this\n  }\n\n  render() {\n    const mounted = this.attr('mounted')\n    const buttons = this.attr('buttons') || []\n    const placement = this.attr('placement')\n    const $buttons = []\n\n    paintSvgSprites()\n\n    buttons.forEach((button) => {\n      const $button = _createButton(button)\n\n      $buttons.push($button)\n      this.buttons.push({\n        name: button.name,\n        $el: $button\n      })\n    })\n\n    this.$el = createElement(\n      'div',\n      {\n        id: 'outline-toolbar',\n        className: `outline-toolbar outline-toolbar_${placement}`\n      },\n      $buttons\n    )\n    document.body.appendChild(this.$el)\n\n    if (this.closed) {\n      this.hide()\n    }\n\n    if (this.disabled) {\n      this.disable()\n    }\n\n    if (isFunction(mounted)) {\n      mounted.call(this)\n    }\n\n    return this\n  }\n\n  add(button) {\n    const $el = this.$el\n    const buttons = this.attr('buttons')\n    const action = button.action\n    let type\n\n    buttons.push(button)\n    $el.appendChild(_createButton(button))\n\n    if (action && isFunction(action.handler)) {\n      type = action.type || 'click'\n      on($el, `.${button.name}`, type, action.handler)\n    }\n\n    return this\n  }\n\n  remove(name) {\n    const $el = this.$el\n    const buttons = this.attr('buttons')\n    const button = buttons.find((option) => option.name === name)\n    let index = -1\n    let $button\n\n    if (!button) {\n      return this\n    }\n\n    buttons.forEach((button, i) => {\n      if (button.name === name) {\n        index = i\n      }\n    })\n\n    if (index > -1) {\n      this.attr().buttons.splice(index, 1)\n    }\n\n    $button = $el.querySelector(`.${name}`)\n    this.switch(name, false)\n    $el.removeChild($button)\n\n    return this\n  }\n\n  switch(name, enabled) {\n    const $el = this.$el\n    const buttons = this.attr('buttons')\n    const button = buttons.find((option) => option.name === name)\n    let action\n    let type\n    let listener\n    let $button\n\n    if (!button) {\n      return this\n    }\n\n    buttons.forEach((option) => {\n      if (option.name === name) {\n        button.disabled = !enabled\n      }\n    })\n\n    action = button.action\n    $button = $el.querySelector(`.${name}`)\n\n    if (action) {\n      type = action.type || 'click'\n      listener = action.handler\n    }\n\n    if (enabled) {\n      removeClass($button, DISABLED)\n\n      if (type && listener) {\n        on($el, `.${name}`, type, listener)\n      }\n    } else {\n      addClass($button, DISABLED)\n\n      if (type && listener) {\n        off($el, type, listener)\n      }\n    }\n\n    return this\n  }\n\n  disable(name) {\n    const disabled = this.attr('afterDisabled')\n\n    if (name) {\n      this.switch(name, false)\n    } else {\n      addClass(this.$el, DISABLED)\n      this.removeListeners()\n      this.disabled = true\n\n      if (isFunction(disabled)) {\n        disabled.call(this)\n      }\n    }\n\n    return this\n  }\n\n  enable(name) {\n    const enabled = this.attr('afterEnabled')\n\n    if (name) {\n      this.switch(name, true)\n    } else {\n      this.disabled = false\n      removeClass(this.$el, DISABLED)\n      this.addListeners()\n\n      if (isFunction(enabled)) {\n        enabled.call(this)\n      }\n    }\n\n    return this\n  }\n\n  show(name) {\n    const opened = this.attr('afterOpened')\n    const button = this.attr('buttons').find((option) => option.name === name)\n    const $el = this.$el\n    let $button\n\n    if (name) {\n      if (!button) {\n        return this\n      }\n\n      $button = $el.querySelector(`.${name}`)\n      removeClass($button, HIDDEN)\n    } else {\n      removeClass($el, HIDDEN)\n      this.closed = false\n\n      if (isFunction(opened)) {\n        later(() => {\n          opened.call(this)\n        }, 310)\n      }\n    }\n\n    return this\n  }\n\n  hide(name) {\n    const closed = this.attr('afterClosed')\n    const button = this.attr('buttons').find((option) => option.name === name)\n    const $el = this.$el\n    let $button\n\n    if (name) {\n      if (!button) {\n        return this\n      }\n      $button = $el.querySelector(`.${name}`)\n      addClass($button, HIDDEN)\n    } else {\n      addClass($el, HIDDEN)\n      this.closed = true\n\n      if (isFunction(closed)) {\n        later(() => {\n          closed.call(this)\n        }, 310)\n      }\n    }\n\n    return this\n  }\n\n  toggle() {\n    if (this.isClosed()) {\n      this.show()\n    } else {\n      this.hide()\n    }\n\n    return this\n  }\n\n  destroy() {\n    const beforeDestroy = this.attr('beforeDestroy')\n    const afterDestroy = this.attr('afterDestroy')\n    let $el = this.$el\n\n    if (isFunction(beforeDestroy)) {\n      beforeDestroy.call(this)\n    }\n\n    this.removeListeners()\n    document.body.removeChild($el)\n    $el = null\n\n    this.attr(Toolbar.DEFAULTS)\n    this.disabled = false\n    this.closed = false\n    this.buttons = []\n\n    if (isFunction(afterDestroy)) {\n      afterDestroy.call(this)\n    }\n\n    return this\n  }\n\n  refresh() {\n    const $el = this.$el\n    const buttons = this.attr('buttons') || []\n\n    this.removeListeners()\n    $el.innerHTML = ''\n\n    buttons.forEach((button) => {\n      this.$el.appendChild(_createButton(button))\n    })\n\n    this.addListeners()\n\n    return this\n  }\n\n  addListeners() {\n    const buttons = this.attr('buttons')\n    const $el = this.$el\n\n    if (!buttons || buttons.length < 1) {\n      return this\n    }\n\n    buttons.forEach((button) => {\n      const action = button.action\n      const disabled = this.disabled\n      let type\n      let listener\n      let context\n\n      if (action) {\n        listener = action.handler\n        type = action.type || 'click'\n        context = action.context\n      }\n\n      if (isFunction(listener) && !disabled) {\n        on($el, `.${button.name}`, type, listener, context || this, true)\n      }\n    })\n\n    return this\n  }\n\n  removeListeners() {\n    const buttons = this.attr('buttons')\n    const $el = this.$el\n\n    if (!buttons || buttons.length < 1) {\n      return this\n    }\n\n    buttons.forEach((button) => {\n      const action = button.action\n      const disabled = this.disabled\n      let type\n      let listener\n\n      if (action) {\n        listener = action.handler\n        type = action.type || 'click'\n      }\n\n      if (isFunction(listener) && !disabled) {\n        off($el, type, listener)\n      }\n    })\n\n    return this\n  }\n}\n\nToolbar.DEFAULTS = {\n  placement: 'ltr',\n  closed: false,\n  disabled: false,\n  buttons: [],\n  created: null,\n  mounted: null,\n  afterClosed: null,\n  afterOpened: null,\n  afterDisabled: null,\n  afterEnabled: null,\n  beforeDestroy: null,\n  afterDestroy: null\n}\n\nexport default Toolbar\n"],"names":["isString","str","hasOwn","obj","prop","hasOwnProperty","Object","prototype","call","toString","Base","constructor","options","this","attrs","initialize","attr","render","addListeners","value","o","apply","origin","source","keys","forEach","arguments","length","destroy","removeListeners","reload","isFunction","val","later","fn","delay","setTimeout","isArray","Array","isElement","nodeName","tagName","nodeType","createElement","attributes","children","element","document","el","toLowerCase","style","cssText","setAttribute","className","child","childNode","createTextNode","appendChild","hasClass","allClass","match","RegExp","addClass","removeClass","replace","matches","selector","sel","msMatchesSelector","getParentOrHost","host","parentNode","CAPTURE_EVENTS","_off","type","capture","indexOf","_delegateListener","listeners","_listeners","index","listener","i","handler","splice","_delete","removeEventListener","purgeElement","recurse","$element","querySelector","$children","childNodes","filter","getListeners","$child","off","on","data","context","once","evt","target","getTarget","delegateTarget","ctx","includeCTX","closest","overrideContext","push","addEventListener","_createButton","button","$icon","name","size","color","iconSet","binds","width","height","defaultRules","svg","innerHTML","createSvgIcon","icon","$anchor","href","link","$button","disabled","DISABLED","HIDDEN","Toolbar","super","DEFAULTS","$el","closed","buttons","created","isDisabled","find","option","isClosed","highlight","item","ACTIVE","mounted","placement","$buttons","symbols","SYMBOLS","sprites","concat","$body","body","$icons","join","insertBefore","firstChild","paintSvgSprites","id","hide","disable","add","action","remove","switch","removeChild","enabled","enable","show","opened","toggle","beforeDestroy","afterDestroy","refresh","afterClosed","afterOpened","afterDisabled","afterEnabled"],"mappings":"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"}