{"version":3,"file":"toolbar.min.js","sources":["src/utils/types/isString.js","src/utils/lang/hasOwn.js","src/utils/lang/toString.js","src/utils/types/isObject.js","src/base.js","src/utils/lang/extend.js","src/utils/types/isFunction.js","src/utils/types/isArray.js","src/utils/lang/later.js","src/utils/types/isElement.js","src/utils/dom/createElement.js","src/utils/types/isFragment.js","src/utils/dom/setAttribute.js","src/utils/dom/hasClass.js","src/utils/dom/addClass.js","src/utils/dom/removeClass.js","src/utils/lang/trim.js","src/utils/dom/matches.js","src/utils/dom/getParentOrHost.js","src/utils/event/enum.js","src/utils/event/_off.js","src/utils/event/_delete.js","src/utils/event/purgeElement.js","src/utils/event/getListeners.js","src/utils/event/off.js","src/utils/event/on.js","src/utils/event/getTarget.js","src/utils/dom/resolveTextNode.js","src/utils/dom/closest.js","src/_createButton.js","src/utils/icons.js","src/toolbar.js"],"sourcesContent":["/**\r\n * 检测数据是否为 String 类型\r\n * ========================================================================\r\n * @method isArray\r\n * @param {*} str\r\n * @returns {boolean}\r\n */\r\nconst isString = (str) => {\r\n  return typeof str === 'string'\r\n}\r\n\r\nexport default isString\r\n","/**\r\n * 检测对象自身属性中是否具有指定的属性。\r\n * ========================================================================\r\n * @method hasOwn\r\n * @param {Object} obj - （必须）检测的目标对象\r\n * @param {String} prop - （必须）属性名\r\n * @returns {Boolean}\r\n */\r\nconst hasOwn = (obj, prop) => {\r\n  const hasOwnProperty = Object.prototype.hasOwnProperty\r\n  return obj && hasOwnProperty.call(obj, prop)\r\n}\r\n\r\nexport default hasOwn\r\n","const toString = Object.prototype.toString\r\n\r\n/**\r\n * Object 对象原型上的 toString 方法\r\n * ========================================================================\r\n * @method toString\r\n * @param {*} val\r\n * @returns {string}\r\n */\r\nexport default toString\r\n","import toString from '../lang/toString'\r\n\r\n/**\r\n * 检测数据是否为 Object 类型\r\n * ========================================================================\r\n * @method isObject\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isObject = (o) => {\r\n  return toString.apply(o) === '[object Object]' && o !== null\r\n}\r\n\r\nexport default isObject\r\n","import isString from './utils/types/isString'\r\nimport hasOwn from './utils/lang/hasOwn'\r\nimport isObject from './utils/types/isObject'\r\nimport extend from './utils/lang/extend'\r\n\r\nclass Base {\r\n  constructor(options) {\r\n    this.attrs = {}\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    this.attr(options).render().addListeners()\r\n    return this\r\n  }\r\n\r\n  attr(prop, value) {\r\n    const attrs = this.attrs\r\n\r\n    if (isString(prop)) {\r\n      // 只能扩展 attrs 中已有的属性\r\n      if (value && hasOwn(attrs, prop)) {\r\n        // 更新单个配置信息\r\n        attrs[prop] = value\r\n        return this\r\n      }\r\n\r\n      // 只传递 prop 参数，则返回对应的属性值\r\n      return attrs[prop]\r\n    } else if (isObject(prop)) {\r\n      // 批量更新配置信息\r\n      extend(attrs, prop)\r\n\r\n      return this\r\n    } else if (arguments.length === 0) {\r\n      // 不传递参数，直接返回整个\r\n      return attrs\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  render() {\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    this.removeListeners()\r\n    return this\r\n  }\r\n\r\n  reload(options) {\r\n    this.destroy().initialize(this.attr(options))\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    return this\r\n  }\r\n}\r\n\r\nexport default Base\r\n","import hasOwn from './hasOwn'\r\n\r\n/**\r\n * 扩展对象\r\n * ========================================================================\r\n * @method extend\r\n * @param {Object} origin\r\n * @param {Object} source\r\n */\r\nconst extend = (origin, source) => {\r\n  const keys = Object.keys(source)\r\n\r\n  keys.forEach((prop) => {\r\n    if (hasOwn(source, prop)) {\r\n      origin[prop] = source[prop]\r\n    }\r\n  })\r\n}\r\n\r\nexport default extend\r\n","import toString from '../lang/toString'\r\n\r\n/**\r\n * 检测测试数据是否为 Function 类型\r\n * ========================================================================\r\n * @method isFunction\r\n * @param {*} val - （必须）待检测的数据\r\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\r\n */\r\nconst isFunction = (val) => {\r\n  return (\r\n    typeof val === 'function' || toString.apply(val) === '[object Function]'\r\n  )\r\n}\r\n\r\nexport default isFunction\r\n","import toString from '../lang/toString'\r\n\r\n/**\r\n * 检测数据是否为 Array 类型\r\n * ========================================================================\r\n * @method isArray\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isArray = (o) => {\r\n  if (Array.isArray) {\r\n    return Array.isArray(o)\r\n  } else {\r\n    return toString.apply(o) === '[object Array]'\r\n  }\r\n}\r\n\r\nexport default isArray\r\n","import isFunction from '../types/isFunction'\r\n\r\n/**\r\n * later - 延迟执行方法\r\n * ========================================================================\r\n * @method later\r\n * @param {Function} fn\r\n * @param {Number} [delay]\r\n * @returns {number|boolean}\r\n */\r\nconst later = (fn, delay = 300) => {\r\n  if (!isFunction(fn)) {\r\n    return false\r\n  }\r\n\r\n  return setTimeout(() => {\r\n    fn()\r\n  }, delay)\r\n}\r\n\r\nexport default later\r\n","/**\r\n * 检测数据是否为 HTMLElement DOM 节点\r\n * ========================================================================\r\n * @method isElement\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isElement = (o) => {\r\n  return o && o.nodeName && o.tagName && o.nodeType === 1\r\n}\r\n\r\nexport default isElement\r\n","import hasOwn from '../lang/hasOwn'\nimport isArray from '../types/isArray'\nimport isElement from '../types/isElement'\nimport isFragment from '../types/isFragment'\nimport setAttribute from './setAttribute'\n\n/**\n * 创建 DOM 节点，并添加属性和子节点\n * ========================================================================\n * @method createElement\n * @param {String} tagName - 标签名称\n * @param {Object} attributes - 属性对象\n * @param {Array} children - 子节点数组\n * @returns {HTMLElement}\n */\nconst createElement = (tagName, attributes, children) => {\n  const keys = Object.keys(attributes)\n  const $fragment = document.createDocumentFragment()\n  const $el = document.createElement(tagName)\n  const append = (child) => {\n    let $child\n    if (isElement(child) || isFragment(child)) {\n      $child = child\n    } else {\n      $child = document.createTextNode(child)\n    }\n\n    $fragment.appendChild($child)\n  }\n\n  keys.forEach((attr) => {\n    if (hasOwn(attributes, attr)) {\n      setAttribute($el, attr, attributes[attr])\n    }\n  })\n\n  if (isArray(children)) {\n    children.forEach((child) => {\n      append(child)\n    })\n  } else {\n    append(children)\n  }\n\n  $el.appendChild($fragment)\n\n  return $el\n}\n\nexport default createElement\n","import toString from '../lang/toString'\n\nconst isFragment = (fragment) => {\n  return toString.call(fragment) === '[object DocumentFragment]'\n}\n\nexport default isFragment\n","/**\r\n * 给 DOM 节点设置属性/值\r\n * ========================================================================\r\n * @method setAttribute\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} attr - 属性名称\r\n * @param {String|Number|Boolean} value - 属性值\r\n */\r\nconst setAttribute = (el, attr, value) => {\r\n  let tagName = el.tagName.toLowerCase()\r\n\r\n  switch (attr) {\r\n    case 'style':\r\n      el.style.cssText = value\r\n      break\r\n    case 'value':\r\n      if (tagName === 'input' || tagName === 'textarea') {\r\n        el.value = value\r\n      } else {\r\n        el.setAttribute(attr, value)\r\n      }\r\n      break\r\n    case 'className':\r\n      el.className = value\r\n      break\r\n    default:\r\n      el.setAttribute(attr, value)\r\n      break\r\n  }\r\n}\r\n\r\nexport default setAttribute\r\n","/**\r\n * 检测 DOM 节点是否包含名为 className 的样式\r\n * ========================================================================\r\n * @method hasClass\r\n * @param {HTMLElement|Object} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {*}\r\n */\r\nconst hasClass = (el, className) => {\r\n  let allClass = el.className\r\n\r\n  if (!allClass) {\r\n    return false\r\n  }\r\n\r\n  return allClass.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'))\r\n}\r\n\r\nexport default hasClass\r\n","import hasClass from './hasClass'\r\n\r\n/**\r\n * 给 DOM 节点添加名为 className 的样式\r\n * ========================================================================\r\n * @method addClass\r\n * @param {HTMLElement|Object} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst addClass = (el, className) => {\r\n  let allClass = el.className\r\n\r\n  if (hasClass(el, className)) {\r\n    return false\r\n  }\r\n\r\n  allClass += allClass.length > 0 ? ' ' + className : className\r\n\r\n  el.className = allClass\r\n}\r\n\r\nexport default addClass\r\n","import trim from '../lang/trim'\r\nimport hasClass from './hasClass'\r\n\r\n/**\r\n * 移除 DOM 节点的 className 样式\r\n * ========================================================================\r\n * @method removeClass\r\n * @param {HTMLElement|Object} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst removeClass = (el, className) => {\r\n  let allClass = el.className\r\n\r\n  if (!allClass || !hasClass(el, className)) {\r\n    return false\r\n  }\r\n\r\n  allClass = trim(allClass.replace(className, ''))\r\n\r\n  el.className = allClass\r\n}\r\n\r\nexport default removeClass\r\n","import isString from '../types/isString'\r\n\r\n/**\r\n * 清楚字符串起始位置所有的空格\r\n * ========================================================================\r\n * @method trim\r\n * @param {string} str\r\n * @returns {string|Boolean}\r\n */\r\nconst trim = (str) => {\r\n  if (!isString(str)) {\r\n    return false\r\n  }\r\n  return str.replace(/^\\s+|\\s+$/g, '')\r\n}\r\n\r\nexport default trim\r\n","/**\r\n * 获取 options 节点下匹配 selector 选择器的 DOM 节点\r\n * ========================================================================\r\n * Element.matches() 方法可以用来判断 DOM 元素是否与给定的选择器匹配，事件代理判断是\r\n * 否触发绑定的代理事件回调函数，关键就是使用 Element.matches() 辨别当前事件触发的目\r\n * 标 DOM 元素是否为事件代理所期望触发的目标。\r\n * ========================================================================\r\n * @method matches\r\n * @see https://developer.mozilla.org/en-US/docs/web/api/element/matches\r\n * @param {HTMLElement} el - （必须）DOM 元素\r\n * @param {String} selector - （必须）匹配 DOM 元素的选择器\r\n * @returns {Boolean}\r\n */\r\nconst matches = (el, selector = '') => {\r\n  const sel = selector.replace(/^>/i, '')\r\n\r\n  if (!selector || !sel || !el) {\r\n    return false\r\n  }\r\n\r\n  /* istanbul ignore else */\r\n  if (el.matches) {\r\n    return el.matches(sel)\r\n  } else if (el.msMatchesSelector) {\r\n    return el.msMatchesSelector(sel)\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport default matches\r\n","/**\r\n * 获取 DOM 元素的父节点\r\n * ========================================================================\r\n * @method getParentOrHost\r\n * @param {*|HTMLElement} el - （必须）要获取父节点的 DOM 元素\r\n * @returns {*|HTMLElement}\r\n */\r\nconst getParentOrHost = (el) => {\r\n  return el.host && el !== document && el.host.nodeType\r\n    ? el.host\r\n    : el.parentNode\r\n}\r\n\r\nexport default getParentOrHost\r\n","export const CAPTURE_EVENTS = [\r\n  'focusout',\r\n  'blur',\r\n  'focusin',\r\n  'focus',\r\n  'load',\r\n  'unload',\r\n  'mouseenter',\r\n  'mouseleave'\r\n]\r\n","import { CAPTURE_EVENTS } from './enum'\r\nimport _delete from './_delete'\r\n\r\n/**\r\n * （私有方法）取消 type 类型的代理事件绑定\r\n * ========================================================================\r\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\r\n * ========================================================================\r\n * @method _off\r\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\r\n * @param {String} type - （必须）事件类型\r\n * @param {Function} fn - （必须）事件处理器回调函数\r\n * @private\r\n */\r\nconst _off = (el, type, fn) => {\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n\r\n  /* istanbul ignore else */\r\n  if (fn._delegateListener) {\r\n    fn = fn._delegateListener\r\n    delete fn._delegateListener\r\n  }\r\n\r\n  // 移除缓存的 _listeners 数据\r\n  _delete(el, type, fn)\r\n\r\n  el.removeEventListener(type, fn, capture)\r\n}\r\n\r\nexport default _off\r\n","/**\r\n * 删除 DOM 元素缓存的 _listeners 数据\r\n * ========================================================================\r\n * @method _delete\r\n * @param {HTMLElement} el - 要删除 listener 的 DOM 元素\r\n * @param {String} type - 事件类型（名称）\r\n * @param {Function} [fn] - 事件处理器回调函数\r\n */\r\nconst _delete = function (el, type, fn) {\r\n  const listeners = el._listeners\r\n  let index = -1\r\n\r\n  if (listeners.length < 1) {\r\n    return false\r\n  }\r\n\r\n  // 移除缓存的 _listeners 数据\r\n  listeners.forEach((listener, i) => {\r\n    const handler = listener.fn\r\n\r\n    if (type === listener.type) {\r\n      index = i\r\n\r\n      if (handler === fn) {\r\n        index = i\r\n      }\r\n    }\r\n  })\r\n\r\n  /* istanbul ignore else */\r\n  if (index > -1) {\r\n    listeners.splice(index, 1)\r\n  }\r\n}\r\n\r\nexport default _delete\r\n","import isString from '../types/isString'\r\nimport isElement from '../types/isElement'\r\nimport getListeners from './getListeners'\r\nimport _off from './_off'\r\n\r\n/**\r\n * 销毁（type 类型的）代理事件绑定\r\n * ========================================================================\r\n * 1. 设置了事件类型 type，则销毁指定类型的事件绑定，否则清除所有代理事件绑定\r\n * 2. recurse 设置为 true，递归销毁子节点全部事件绑定\r\n * ========================================================================\r\n * @method purgeElement\r\n * @param {HTMLElement|String} el - （必须）DOM 元素或者其选择器\r\n * @param {String|Boolean} type - （必须）事件类型\r\n * @param {Boolean} [recurse] - （可选）是否递归销毁子节点所有事件绑定\r\n */\r\nconst purgeElement = function (el, type, recurse = false) {\r\n  const $element = isString(el) ? document.querySelector(el) : el\r\n  const $children = $element.childNodes\r\n  const listeners = getListeners($element, type)\r\n\r\n  listeners.forEach((listener) => {\r\n    _off($element, listener.type, listener.fn)\r\n  })\r\n\r\n  if (\r\n    (recurse || type === true || arguments.length === 1) &&\r\n    $element &&\r\n    $children\r\n  ) {\r\n    $children.forEach(($child) => {\r\n      if (isElement($child)) {\r\n        purgeElement($child, type, recurse)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default purgeElement\r\n","import isString from '../types/isString'\r\n\r\n/**\r\n * 获取 DOM 元素（type 事件类型）事件绑定信息\r\n * ========================================================================\r\n * 如果设置了事件类型 type， 则返回指定类型的事件绑定信息，否则返回所有事件绑定信息\r\n * ========================================================================\r\n * @methods getListeners\r\n * @param {HTMLElement} el - （必须）要获取事件绑定信息的 DOM 元素\r\n * @param {String} [type] - （可选）事件类型\r\n * @returns {Array} - 已绑定的事件信息\r\n */\r\nconst getListeners = (el, type) => {\r\n  let listeners = el._listeners || []\r\n\r\n  if (isString(type) && type) {\r\n    listeners = listeners.filter((listener) => {\r\n      return listener.type === type\r\n    })\r\n  }\r\n\r\n  return listeners\r\n}\r\n\r\nexport default getListeners\r\n","import purgeElement from './purgeElement'\r\nimport isFunction from '../types/isFunction'\r\nimport _off from './_off'\r\n\r\n/**\r\n * 取消 type 类型的代理事件绑定\r\n * ========================================================================\r\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\r\n * ========================================================================\r\n * @method off\r\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\r\n * @param {String} type - （必须）事件类型\r\n * @param {Function} [fn] - （可选）事件处理器回调函数\r\n */\r\nconst off = (el, type, fn) => {\r\n  // 如果不设置 fn 参数，默认清除 el 元素上绑定的所有事件处理器\r\n  if (!isFunction(fn)) {\r\n    return purgeElement(el, type)\r\n  }\r\n\r\n  _off(el, type, fn)\r\n}\r\n\r\nexport default off\r\n","import closest from '../dom/closest'\r\nimport off from './off'\r\nimport getTarget from './getTarget'\r\n\r\nimport { CAPTURE_EVENTS } from './enum'\r\n\r\n/**\r\n * 绑定代理事件\r\n * ========================================================================\r\n * @method on\r\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\r\n * @param {String} selector - （必须）事件代理目标 DOM 元素的选择器\r\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\r\n * @param {Function|Object} fn - （可选） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\r\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\r\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\r\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\r\n * @param {Boolean} once - （可选）是否仅触发一次\r\n */\r\nconst on = (el, selector, type, fn, data, context, once = false) => {\r\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n\r\n  const listener = function (evt) {\r\n    const target = getTarget(evt)\r\n    // 通过 Element.matches 方法获得点击的目标元素\r\n    const delegateTarget = closest(target, selector, el)\r\n    let overrideContext = context || el\r\n\r\n    evt.delegateTarget = delegateTarget\r\n\r\n    // 当设置为 true 时，则事件处理器回调函数的\r\n    // this 上下文指向为 data 对象\r\n    if (context === true) {\r\n      overrideContext = data\r\n    }\r\n\r\n    /* istanbul ignore else */\r\n    if (delegateTarget) {\r\n      // 仅触发一次\r\n      /* istanbul ignore else */\r\n      if (once === true) {\r\n        off(el, type, listener)\r\n      }\r\n\r\n      fn.call(overrideContext, evt, data)\r\n    }\r\n  }\r\n\r\n  if (!el._listeners) {\r\n    el._listeners = []\r\n  }\r\n\r\n  // 缓存 options 元素绑定的事件处理器\r\n  el._listeners.push({\r\n    el,\r\n    selector,\r\n    type,\r\n    fn: listener,\r\n    data,\r\n    context,\r\n    capture\r\n  })\r\n\r\n  // 缓存包装后的事件处理器\r\n  fn._delegateListener = listener\r\n\r\n  el.addEventListener(type, listener, capture)\r\n}\r\n\r\nexport default on\r\n","import resolveTextNode from '../dom/resolveTextNode'\r\n\r\n/**\r\n * 返回触发事件的 target DOM 元素\r\n * ========================================================================\r\n * @method getTarget\r\n * @param {Event} evt - Event 对象\r\n * @return {HTMLElement} - Event 对象的 target DOM 元素\r\n */\r\nconst getTarget = function (evt) {\r\n  const target = evt.target\r\n\r\n  return resolveTextNode(target)\r\n}\r\n\r\nexport default getTarget\r\n","/**\r\n * 在某些情况下，某些浏览器（例如：Safari 浏览器）会返回实际的目标元素内部的文本节点。\r\n * resolveTextNode() 方法则会返回实际的目标节点。\r\n * ========================================================================\r\n * @method resolveTextNode\r\n * @param {HTMLElement|Text} el - 要解析的节点\r\n * @return {*|HTMLElement} - 实际的目标 DOM 节点\r\n */\r\nconst resolveTextNode = function (el) {\r\n  if (el && el.nodeType === 3) {\r\n    return el.parentNode\r\n  }\r\n\r\n  return el\r\n}\r\n\r\nexport default resolveTextNode\r\n","import matches from './matches'\r\nimport getParentOrHost from './getParentOrHost'\r\n\r\n/**\r\n * 获取 options 元素父元素最近的包含 selector 选择器的元素\r\n * ========================================================================\r\n * @method closest\r\n * @param {HTMLElement} el - （必须）DOM 元素\r\n * @param {String} selector - （必须）DOM 元素的选择其\r\n * @param {HTMLElement} [ctx] - （必须）比对的 DOM 元素\r\n * @param {Boolean} [includeCTX] - （必须）是否包含 context DOM 元素\r\n * @returns {null|HTMLElement} - 返回最接近的 DOM 元素\r\n */\r\nconst closest = (el, selector, ctx, includeCTX) => {\r\n  const context = ctx || document\r\n\r\n  if (!el) {\r\n    return null\r\n  }\r\n\r\n  do {\r\n    /* istanbul ignore else */\r\n    if (\r\n      (selector != null &&\r\n        (selector[0] === '>'\r\n          ? el.parentNode === context && matches(el, selector)\r\n          : matches(el, selector))) ||\r\n      (includeCTX && el === context)\r\n    ) {\r\n      return el\r\n    }\r\n\r\n    /* istanbul ignore else */\r\n    if (el === context) {\r\n      break\r\n    }\r\n\r\n    /* jshint boss:true */\r\n  } while ((el = getParentOrHost(el)))\r\n}\r\n\r\nexport default closest\r\n","import { createSvgIcon } from './utils/icons'\r\nimport createElement from './utils/dom/createElement'\r\nimport addClass from './utils/dom/addClass'\r\n\r\nconst _createButton = (button) => {\r\n  const $icon = createSvgIcon(button.icon, button.size)\r\n  const $anchor = createElement(\r\n    'a',\r\n    {\r\n      className: `outline-toolbar__anchor`,\r\n      href: button.link\r\n    },\r\n    [$icon]\r\n  )\r\n  const $button = createElement(\r\n    'div',\r\n    {\r\n      className: `outline-toolbar__button ${button.name}`\r\n    },\r\n    [button.link ? $anchor : $icon]\r\n  )\r\n\r\n  addClass($icon, 'outline-toolbar__icon')\r\n\r\n  if (button.disabled) {\r\n    addClass($button, 'outline-toolbar_disabled')\r\n  }\r\n\r\n  return $button\r\n}\r\n\r\nexport default _createButton\r\n","import isArray from './types/isArray'\r\n\r\n/**\r\n * 绘制 SVG Sprites 图标集\r\n * ========================================================================\r\n * @method paintSvgSprites\r\n * @param {Array} [symbols] - （可选）symbols 图标数组\r\n *                             传递 symbols - 绘制 symbols + SYMBOLS 的图标集\r\n *                             不传递 symbols - 仅绘制默认 SYMBOLS 图标集\r\n */\r\nexport const paintSvgSprites = (symbols = []) => {\r\n  const SYMBOLS = [\r\n    '<symbol id=\"outline-icon-up\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 261.696c0.832-0.448 1.536-1.216 2.368-1.536a38.72 38.72 0 0 1 46.08 8.256l277.824 302.272a41.92 41.92 0 0 1-1.536 58.048 39.104 39.104 0 0 1-56.448-1.6L513.728 355.904 260.736 626.048a39.104 39.104 0 0 1-56.448 1.088 41.6 41.6 0 0 1-1.088-57.984L483.84 269.696c0.512-0.512 1.344-0.768 1.92-1.408l1.088-1.344c2.368-2.496 5.312-3.648 8-5.248z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-down\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 762.304c0.832 0.448 1.536 1.216 2.368 1.536 15.232 7.488 33.92 4.992 46.08-8.256l277.824-302.272a41.92 41.92 0 0 0-1.536-58.048 39.104 39.104 0 0 0-56.448 1.6l-249.344 271.232-252.992-270.144a39.104 39.104 0 0 0-56.448-1.088 41.6 41.6 0 0 0-1.088 57.984l280.576 299.456c0.512 0.512 1.344 0.768 1.92 1.408l1.088 1.344c2.368 2.496 5.312 3.648 8 5.248z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-menu\" viewBox=\"0 0 1024 1024\"><path d=\"M320 256h640V128H320zM320 576h640V448H320zM320 896h640v-128H320zM64 256h128V128H64zM64 576h128V448H64zM64 896h128v-128H64z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-hash\" viewBox=\"0 0 24 24\"><path d=\"M14.216 10l-0.444 4h-3.988l0.444-4zM15.006 2.89l-0.568 5.11h-3.988l0.543-4.89c0.061-0.549-0.335-1.043-0.883-1.104s-1.043 0.335-1.104 0.884l-0.568 5.11h-4.438c-0.552 0-1 0.448-1 1s0.448 1 1 1h4.216l-0.444 4h-3.772c-0.552 0-1 0.448-1 1s0.448 1 1 1h3.549l-0.543 4.89c-0.061 0.549 0.335 1.043 0.883 1.104s1.043-0.335 1.104-0.883l0.569-5.111h3.988l-0.543 4.89c-0.061 0.549 0.335 1.043 0.883 1.104s1.043-0.335 1.104-0.883l0.568-5.111h4.438c0.552 0 1-0.448 1-1s-0.448-1-1-1h-4.216l0.444-4h3.772c0.552 0 1-0.448 1-1s-0.448-1-1-1h-3.549l0.543-4.89c0.061-0.549-0.335-1.043-0.883-1.104s-1.043 0.335-1.104 0.883z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-close\" viewBox=\"0 0 1024 1024\"><path d=\"M536.96 491.648L310.592 265.344a32 32 0 1 0-45.248 45.248L491.584 536.96l-226.304 226.304a32 32 0 0 0 45.312 45.248l226.24-226.304 226.304 226.304a32 32 0 0 0 45.248-45.248L582.144 536.896l226.304-226.24a32 32 0 0 0-45.248-45.248L536.896 491.584z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-homepage\" viewBox=\"0 0 26 28\"><path d=\"M22 15.5v7.5c0 0.547-0.453 1-1 1h-6v-6h-4v6h-6c-0.547 0-1-0.453-1-1v-7.5c0-0.031 0.016-0.063 0.016-0.094l8.984-7.406 8.984 7.406c0.016 0.031 0.016 0.063 0.016 0.094zM25.484 14.422l-0.969 1.156c-0.078 0.094-0.203 0.156-0.328 0.172h-0.047c-0.125 0-0.234-0.031-0.328-0.109l-10.813-9.016-10.813 9.016c-0.109 0.078-0.234 0.125-0.375 0.109-0.125-0.016-0.25-0.078-0.328-0.172l-0.969-1.156c-0.172-0.203-0.141-0.531 0.063-0.703l11.234-9.359c0.656-0.547 1.719-0.547 2.375 0l3.813 3.187v-3.047c0-0.281 0.219-0.5 0.5-0.5h3c0.281 0 0.5 0.219 0.5 0.5v6.375l3.422 2.844c0.203 0.172 0.234 0.5 0.063 0.703z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-tags\" viewBox=\"0 0 24 28\"><path d=\"M7 7c0-1.109-0.891-2-2-2s-2 0.891-2 2 0.891 2 2 2 2-0.891 2-2zM23.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578s-1.047-0.219-1.406-0.578l-11.172-11.188c-0.797-0.781-1.422-2.297-1.422-3.406v-6.5c0-1.094 0.906-2 2-2h6.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422zM29.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578-0.812 0-1.219-0.375-1.75-0.922l7.344-7.344c0.359-0.359 0.578-0.875 0.578-1.406s-0.219-1.047-0.578-1.422l-11.172-11.156c-0.797-0.797-2.312-1.422-3.422-1.422h3.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422z\"></path><path d=\"M12 2c6.625 0 12 5.375 12 12 0 5.297-3.437 9.797-8.203 11.391-0.609 0.109-0.828-0.266-0.828-0.578 0-0.391 0.016-1.687 0.016-3.297 0-1.125-0.375-1.844-0.812-2.219 2.672-0.297 5.484-1.313 5.484-5.922 0-1.313-0.469-2.375-1.234-3.219 0.125-0.313 0.531-1.531-0.125-3.187-1-0.313-3.297 1.234-3.297 1.234-0.953-0.266-1.984-0.406-3-0.406s-2.047 0.141-3 0.406c0 0-2.297-1.547-3.297-1.234-0.656 1.656-0.25 2.875-0.125 3.187-0.766 0.844-1.234 1.906-1.234 3.219 0 4.594 2.797 5.625 5.469 5.922-0.344 0.313-0.656 0.844-0.766 1.609-0.688 0.313-2.438 0.844-3.484-1-0.656-1.141-1.844-1.234-1.844-1.234-1.172-0.016-0.078 0.734-0.078 0.734 0.781 0.359 1.328 1.75 1.328 1.75 0.703 2.141 4.047 1.422 4.047 1.422 0 1 0.016 1.937 0.016 2.234 0 0.313-0.219 0.688-0.828 0.578-4.766-1.594-8.203-6.094-8.203-11.391 0-6.625 5.375-12 12-12zM4.547 19.234c0.031-0.063-0.016-0.141-0.109-0.187-0.094-0.031-0.172-0.016-0.203 0.031-0.031 0.063 0.016 0.141 0.109 0.187 0.078 0.047 0.172 0.031 0.203-0.031zM5.031 19.766c0.063-0.047 0.047-0.156-0.031-0.25-0.078-0.078-0.187-0.109-0.25-0.047-0.063 0.047-0.047 0.156 0.031 0.25 0.078 0.078 0.187 0.109 0.25 0.047zM5.5 20.469c0.078-0.063 0.078-0.187 0-0.297-0.063-0.109-0.187-0.156-0.266-0.094-0.078 0.047-0.078 0.172 0 0.281s0.203 0.156 0.266 0.109zM6.156 21.125c0.063-0.063 0.031-0.203-0.063-0.297-0.109-0.109-0.25-0.125-0.313-0.047-0.078 0.063-0.047 0.203 0.063 0.297 0.109 0.109 0.25 0.125 0.313 0.047zM7.047 21.516c0.031-0.094-0.063-0.203-0.203-0.25-0.125-0.031-0.266 0.016-0.297 0.109s0.063 0.203 0.203 0.234c0.125 0.047 0.266 0 0.297-0.094zM8.031 21.594c0-0.109-0.125-0.187-0.266-0.172-0.141 0-0.25 0.078-0.25 0.172 0 0.109 0.109 0.187 0.266 0.172 0.141 0 0.25-0.078 0.25-0.172zM8.937 21.438c-0.016-0.094-0.141-0.156-0.281-0.141-0.141 0.031-0.234 0.125-0.219 0.234 0.016 0.094 0.141 0.156 0.281 0.125s0.234-0.125 0.219-0.219z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-issues\" viewBox=\"0 0 26 28\"><path d=\"M25.5 15c0 0.547-0.453 1-1 1h-3.5c0 1.953-0.422 3.422-1.047 4.531l3.25 3.266c0.391 0.391 0.391 1.016 0 1.406-0.187 0.203-0.453 0.297-0.703 0.297s-0.516-0.094-0.703-0.297l-3.094-3.078s-2.047 1.875-4.703 1.875v-14h-2v14c-2.828 0-4.891-2.063-4.891-2.063l-2.859 3.234c-0.203 0.219-0.469 0.328-0.75 0.328-0.234 0-0.469-0.078-0.672-0.25-0.406-0.375-0.438-1-0.078-1.422l3.156-3.547c-0.547-1.078-0.906-2.469-0.906-4.281h-3.5c-0.547 0-1-0.453-1-1s0.453-1 1-1h3.5v-4.594l-2.703-2.703c-0.391-0.391-0.391-1.016 0-1.406s1.016-0.391 1.406 0l2.703 2.703h13.188l2.703-2.703c0.391-0.391 1.016-0.391 1.406 0s0.391 1.016 0 1.406l-2.703 2.703v4.594h3.5c0.547 0 1 0.453 1 1zM18 6h-10c0-2.766 2.234-5 5-5s5 2.234 5 5z\"></path></symbol>'\r\n  ]\r\n  const sprites =\r\n    isArray(symbols) && symbols.length > 0 ? SYMBOLS.concat(symbols) : SYMBOLS\r\n  const $body = document.body\r\n  let $icons = document.querySelector('#svg-sprites')\r\n\r\n  if ($icons) {\r\n    $icons.innerHTML = sprites.join('')\r\n  } else {\r\n    $icons = document.createElement('div')\r\n    $icons.innerHTML =\r\n      `<svg id=\"svg-sprites\" aria-hidden=\"true\" style=\"position:absolute;display:none;width:0;height:0;overflow:hidden;\">` +\r\n      `${sprites.join('')}` +\r\n      `</svg>`\r\n    $body.insertBefore($icons.firstChild, $body.firstChild)\r\n  }\r\n}\r\n\r\n/**\r\n * 创建 SVG 图标 DOM 元素\r\n * ========================================================================\r\n * @method createSvgIcon\r\n * @param {String} name\r\n * @param {Number|String|Array} [size]\r\n * @param {String} [color]\r\n * @param {String} [iconSet]\r\n * @returns {HTMLElement}\r\n */\r\nexport const createSvgIcon = (\r\n  name,\r\n  size = 0,\r\n  color = '',\r\n  iconSet = 'outline'\r\n) => {\r\n  const binds = iconSet\r\n    ? `xlink:href=\"#${iconSet}-icon-${name}\"`\r\n    : `xlink:href=\"#icon-${name}\"`\r\n  const width = isArray(size) ? size[0] : size\r\n  const height = isArray(size) ? size[1] : size\r\n  const defaultRules = size ? `width:${width}px;height:${height}px;` : ''\r\n  const cssRules = color ? defaultRules + `color:${color}` : defaultRules\r\n  const svg =\r\n    `<svg aria-hidden=\"true\" class=\"outline-icon__svg\" style=\"${cssRules}\">` +\r\n    `<use ${binds}></use>` +\r\n    `</svg>`\r\n  const $icon = document.createElement('i')\r\n\r\n  $icon.className = 'outline-icon'\r\n  $icon.innerHTML = svg\r\n\r\n  return $icon\r\n}\r\n","import Base from './base'\n\nimport isFunction from './utils/types/isFunction'\nimport isObject from './utils/types/isObject'\nimport isArray from './utils/types/isArray'\nimport later from './utils/lang/later'\nimport createElement from './utils/dom/createElement'\nimport addClass from './utils/dom/addClass'\nimport hasClass from './utils/dom/hasClass'\nimport removeClass from './utils/dom/removeClass'\nimport on from './utils/event/on'\nimport off from './utils/event/off'\nimport { paintSvgSprites } from './utils/icons'\n\nimport _createButton from './_createButton'\n\nconst DISABLED = 'outline-toolbar_disabled'\nconst HIDDEN = 'outline-toolbar_hidden'\n\nclass Toolbar extends Base {\n  constructor(options) {\n    super()\n\n    this.attrs = Toolbar.DEFAULTS\n    this.$el = null\n    this.disabled = false\n    this.closed = false\n    this.buttons = []\n\n    if (options) {\n      this.initialize(options)\n    }\n  }\n\n  initialize(options) {\n    let created\n\n    this.attr(options)\n    created = this.attr('created')\n    this.disabled = this.attr('disabled')\n    this.closed = this.attr('closed')\n\n    if (isFunction(created)) {\n      created.call(this)\n    }\n\n    this.render().addListeners()\n\n    return this\n  }\n\n  isDisabled(name) {\n    const buttons = this.attr('buttons')\n    let button\n\n    if (name) {\n      button = buttons.find((option) => option.name === name)\n\n      return !!(button && button.disabled)\n    }\n\n    return this.disabled\n  }\n\n  isClosed() {\n    return this.closed\n  }\n\n  highlight(name) {\n    const button = this.buttons.find((item) => item.name === name)\n    const ACTIVE = 'outline-toolbar_active'\n    let $button\n\n    if ($button) {\n      return this\n    }\n\n    $button = button.$el\n\n    if (hasClass($button, ACTIVE)) {\n      removeClass($button, ACTIVE)\n    } else {\n      addClass($button, ACTIVE)\n    }\n\n    return this\n  }\n\n  render() {\n    const mounted = this.attr('mounted')\n    const buttons = this.attr('buttons') || []\n    const placement = this.attr('placement')\n    const $buttons = document.createDocumentFragment()\n    const $fragment = document.createDocumentFragment()\n\n    paintSvgSprites()\n\n    buttons.forEach((button) => {\n      const $button = _createButton(button)\n\n      $buttons.appendChild($button)\n      this.buttons.push({\n        name: button.name,\n        $el: $button\n      })\n    })\n\n    this.$el = createElement(\n      'div',\n      {\n        id: 'outline-toolbar',\n        className: `outline-toolbar outline-toolbar_${placement}`\n      },\n      [$buttons]\n    )\n    $fragment.appendChild(this.$el)\n    document.body.appendChild($fragment)\n\n    if (this.closed) {\n      this.hide()\n    }\n\n    if (this.disabled) {\n      this.disable()\n    }\n\n    if (isFunction(mounted)) {\n      mounted.call(this)\n    }\n\n    return this\n  }\n\n  add(button) {\n    const $el = this.$el\n    const buttons = this.attr('buttons')\n    const action = button.action\n    const $fragment = document.createDocumentFragment()\n    let type\n\n    if (isObject(button)) {\n      buttons.push(button)\n      $fragment.appendChild(_createButton(button))\n    } else if (isArray(button)) {\n      button.forEach((item) => {\n        $fragment.appendChild(_createButton(item))\n      })\n    }\n    $el.appendChild($fragment)\n\n    if (action && isFunction(action.handler)) {\n      type = action.type || 'click'\n      on($el, `.${button.name}`, type, action.handler)\n    }\n\n    return this\n  }\n\n  remove(name) {\n    const $el = this.$el\n    const buttons = this.attr('buttons')\n    const button = buttons.find((option) => option.name === name)\n    let index = -1\n    let $button\n\n    if (!button) {\n      return this\n    }\n\n    buttons.forEach((button, i) => {\n      if (button.name === name) {\n        index = i\n      }\n    })\n\n    if (index > -1) {\n      this.attr().buttons.splice(index, 1)\n    }\n\n    $button = $el.querySelector(`.${name}`)\n    this.switch(name, false)\n    $el.removeChild($button)\n\n    return this\n  }\n\n  switch(name, enabled) {\n    const $el = this.$el\n    const buttons = this.attr('buttons')\n    const button = buttons.find((option) => option.name === name)\n    let action\n    let type\n    let listener\n    let $button\n\n    if (!button) {\n      return this\n    }\n\n    buttons.forEach((option) => {\n      if (option.name === name) {\n        button.disabled = !enabled\n      }\n    })\n\n    action = button.action\n    $button = $el.querySelector(`.${name}`)\n\n    if (action) {\n      type = action.type || 'click'\n      listener = action.handler\n    }\n\n    if (enabled) {\n      removeClass($button, DISABLED)\n\n      if (type && listener) {\n        on($el, `.${name}`, type, listener)\n      }\n    } else {\n      addClass($button, DISABLED)\n\n      if (type && listener) {\n        off($el, type, listener)\n      }\n    }\n\n    return this\n  }\n\n  disable(name) {\n    const disabled = this.attr('afterDisabled')\n\n    if (name) {\n      this.switch(name, false)\n    } else {\n      addClass(this.$el, DISABLED)\n      this.removeListeners()\n      this.disabled = true\n\n      if (isFunction(disabled)) {\n        disabled.call(this)\n      }\n    }\n\n    return this\n  }\n\n  enable(name) {\n    const enabled = this.attr('afterEnabled')\n\n    if (name) {\n      this.switch(name, true)\n    } else {\n      this.disabled = false\n      removeClass(this.$el, DISABLED)\n      this.addListeners()\n\n      if (isFunction(enabled)) {\n        enabled.call(this)\n      }\n    }\n\n    return this\n  }\n\n  show(name) {\n    const opened = this.attr('afterOpened')\n    const button = this.attr('buttons').find((option) => option.name === name)\n    const $el = this.$el\n    let $button\n\n    if (name) {\n      if (!button) {\n        return this\n      }\n\n      $button = $el.querySelector(`.${name}`)\n      removeClass($button, HIDDEN)\n    } else {\n      removeClass($el, HIDDEN)\n      this.closed = false\n\n      if (isFunction(opened)) {\n        later(() => {\n          opened.call(this)\n        }, 310)\n      }\n    }\n\n    return this\n  }\n\n  hide(name) {\n    const closed = this.attr('afterClosed')\n    const button = this.attr('buttons').find((option) => option.name === name)\n    const $el = this.$el\n    let $button\n\n    if (name) {\n      if (!button) {\n        return this\n      }\n      $button = $el.querySelector(`.${name}`)\n      addClass($button, HIDDEN)\n    } else {\n      addClass($el, HIDDEN)\n      this.closed = true\n\n      if (isFunction(closed)) {\n        later(() => {\n          closed.call(this)\n        }, 310)\n      }\n    }\n\n    return this\n  }\n\n  toggle() {\n    if (this.isClosed()) {\n      this.show()\n    } else {\n      this.hide()\n    }\n\n    return this\n  }\n\n  destroy() {\n    const beforeDestroy = this.attr('beforeDestroy')\n    const afterDestroy = this.attr('afterDestroy')\n    let $el = this.$el\n\n    if (isFunction(beforeDestroy)) {\n      beforeDestroy.call(this)\n    }\n\n    this.removeListeners()\n    document.body.removeChild($el)\n    $el = null\n\n    this.attr(Toolbar.DEFAULTS)\n    this.disabled = false\n    this.closed = false\n    this.buttons = []\n\n    if (isFunction(afterDestroy)) {\n      afterDestroy.call(this)\n    }\n\n    return this\n  }\n\n  refresh() {\n    const $el = this.$el\n    const buttons = this.attr('buttons') || []\n\n    this.removeListeners()\n    $el.innerHTML = ''\n\n    buttons.forEach((button) => {\n      this.$el.appendChild(_createButton(button))\n    })\n\n    this.addListeners()\n\n    return this\n  }\n\n  addListeners() {\n    const buttons = this.attr('buttons')\n    const $el = this.$el\n\n    if (!buttons || buttons.length < 1) {\n      return this\n    }\n\n    buttons.forEach((button) => {\n      const action = button.action\n      const disabled = this.disabled\n      let type\n      let listener\n      let context\n\n      if (action) {\n        listener = action.handler\n        type = action.type || 'click'\n        context = action.context\n      }\n\n      if (isFunction(listener) && !disabled) {\n        on($el, `.${button.name}`, type, listener, context || this, true)\n      }\n    })\n\n    return this\n  }\n\n  removeListeners() {\n    const buttons = this.attr('buttons')\n    const $el = this.$el\n\n    if (!buttons || buttons.length < 1) {\n      return this\n    }\n\n    buttons.forEach((button) => {\n      const action = button.action\n      const disabled = this.disabled\n      let type\n      let listener\n\n      if (action) {\n        listener = action.handler\n        type = action.type || 'click'\n      }\n\n      if (isFunction(listener) && !disabled) {\n        off($el, type, listener)\n      }\n    })\n\n    return this\n  }\n}\n\nToolbar.DEFAULTS = {\n  placement: 'ltr',\n  closed: false,\n  disabled: false,\n  buttons: [],\n  created: null,\n  mounted: null,\n  afterClosed: null,\n  afterOpened: null,\n  afterDisabled: null,\n  afterEnabled: null,\n  beforeDestroy: null,\n  afterDestroy: null\n}\n\nexport default Toolbar\n"],"names":["isString","str","hasOwn","obj","prop","hasOwnProperty","Object","prototype","call","toString","isObject","o","apply","Base","constructor","options","this","attrs","initialize","attr","render","addListeners","value","origin","source","keys","forEach","arguments","length","destroy","removeListeners","reload","isFunction","val","isArray","Array","later","fn","delay","setTimeout","isElement","nodeName","tagName","nodeType","createElement","attributes","children","$fragment","document","createDocumentFragment","$el","append","child","$child","fragment","createTextNode","appendChild","el","toLowerCase","style","cssText","setAttribute","className","hasClass","allClass","match","RegExp","addClass","removeClass","replace","matches","selector","sel","msMatchesSelector","getParentOrHost","host","parentNode","CAPTURE_EVENTS","_off","type","capture","indexOf","_delegateListener","listeners","_listeners","index","listener","i","handler","splice","_delete","removeEventListener","purgeElement","recurse","$element","querySelector","$children","childNodes","filter","getListeners","off","on","data","context","once","evt","target","getTarget","delegateTarget","ctx","includeCTX","closest","overrideContext","push","addEventListener","_createButton","button","$icon","name","size","color","iconSet","binds","width","height","defaultRules","svg","innerHTML","createSvgIcon","icon","$anchor","href","link","$button","disabled","DISABLED","HIDDEN","Toolbar","super","DEFAULTS","closed","buttons","created","isDisabled","find","option","isClosed","highlight","item","ACTIVE","mounted","placement","$buttons","symbols","SYMBOLS","sprites","concat","$body","body","$icons","join","insertBefore","firstChild","paintSvgSprites","id","hide","disable","add","action","remove","switch","removeChild","enabled","enable","show","opened","toggle","beforeDestroy","afterDestroy","refresh","afterClosed","afterOpened","afterDisabled","afterEnabled"],"mappings":"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"}