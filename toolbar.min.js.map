{"version":3,"file":"toolbar.min.js","sources":["src/utils/types/isString.js","src/utils/lang/hasOwn.js","src/utils/lang/toString.js","src/base.js","src/utils/types/isObject.js","src/utils/lang/extend.js","src/utils/types/isFunction.js","src/utils/lang/later.js","src/utils/types/isArray.js","src/utils/types/isElement.js","src/utils/dom/createElement.js","src/utils/dom/setAttribute.js","src/utils/dom/hasClass.js","src/utils/dom/addClass.js","src/utils/dom/removeClass.js","src/utils/lang/trim.js","src/utils/dom/matches.js","src/utils/dom/getParentOrHost.js","src/utils/event/enum.js","src/utils/event/_off.js","src/utils/event/_delete.js","src/utils/event/purgeElement.js","src/utils/event/getListeners.js","src/utils/event/off.js","src/utils/event/on.js","src/utils/event/getTarget.js","src/utils/dom/resolveTextNode.js","src/utils/dom/closest.js","src/_createButton.js","src/utils/icons.js","src/toolbar.js"],"sourcesContent":["/**\r\n * 检测数据是否为 String 类型\r\n * ========================================================================\r\n * @method isArray\r\n * @param {*} str\r\n * @returns {boolean}\r\n */\r\nconst isString = (str) => {\r\n  return typeof str === 'string'\r\n}\r\n\r\nexport default isString\r\n","/**\r\n * 检测对象自身属性中是否具有指定的属性。\r\n * ========================================================================\r\n * @method hasOwn\r\n * @param {Object} obj - （必须）检测的目标对象\r\n * @param {String} prop - （必须）属性名\r\n * @returns {Boolean}\r\n */\r\nconst hasOwn = (obj, prop) => {\r\n  const hasOwnProperty = Object.prototype.hasOwnProperty\r\n  return obj && hasOwnProperty.call(obj, prop)\r\n}\r\n\r\nexport default hasOwn\r\n","const toString = Object.prototype.toString\r\n\r\n/**\r\n * Object 对象原型上的 toString 方法\r\n * ========================================================================\r\n * @method toString\r\n * @param {*} val\r\n * @returns {string}\r\n */\r\nexport default toString\r\n","import isString from './utils/types/isString'\r\nimport hasOwn from './utils/lang/hasOwn'\r\nimport isObject from './utils/types/isObject'\r\nimport extend from './utils/lang/extend'\r\n\r\nclass Base {\r\n  constructor(options) {\r\n    this.attrs = {}\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    this.attr(options).render().addListeners()\r\n    return this\r\n  }\r\n\r\n  attr(prop, value) {\r\n    const attrs = this.attrs\r\n\r\n    if (isString(prop)) {\r\n      // 只能扩展 attrs 中已有的属性\r\n      if (value && hasOwn(attrs, prop)) {\r\n        // 更新单个配置信息\r\n        attrs[prop] = value\r\n        return this\r\n      }\r\n\r\n      // 只传递 prop 参数，则返回对应的属性值\r\n      return attrs[prop]\r\n    } else if (isObject(prop)) {\r\n      // 批量更新配置信息\r\n      extend(attrs, prop)\r\n\r\n      return this\r\n    } else if (arguments.length === 0) {\r\n      // 不传递参数，直接返回整个\r\n      return attrs\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  render() {\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    this.removeListeners()\r\n    return this\r\n  }\r\n\r\n  reload(options) {\r\n    this.destroy().initialize(this.attr(options))\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    return this\r\n  }\r\n}\r\n\r\nexport default Base\r\n","import toString from '../lang/toString'\r\n\r\n/**\r\n * 检测数据是否为 Object 类型\r\n * ========================================================================\r\n * @method isObject\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isObject = (o) => {\r\n  return toString.apply(o) === '[object Object]' && o !== null\r\n}\r\n\r\nexport default isObject\r\n","import hasOwn from './hasOwn'\r\n\r\n/**\r\n * 扩展对象\r\n * ========================================================================\r\n * @method extend\r\n * @param {Object} origin\r\n * @param {Object} source\r\n */\r\nconst extend = (origin, source) => {\r\n  const keys = Object.keys(source)\r\n\r\n  keys.forEach((prop) => {\r\n    if (hasOwn(source, prop)) {\r\n      origin[prop] = source[prop]\r\n    }\r\n  })\r\n}\r\n\r\nexport default extend\r\n","import toString from '../lang/toString'\r\n\r\n/**\r\n * 检测测试数据是否为 Function 类型\r\n * ========================================================================\r\n * @method isFunction\r\n * @param {*} val - （必须）待检测的数据\r\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\r\n */\r\nconst isFunction = (val) => {\r\n  return (\r\n    typeof val === 'function' || toString.apply(val) === '[object Function]'\r\n  )\r\n}\r\n\r\nexport default isFunction\r\n","import isFunction from '../types/isFunction'\r\n\r\n/**\r\n * later - 延迟执行方法\r\n * ========================================================================\r\n * @method later\r\n * @param {Function} fn\r\n * @param {Number} [delay]\r\n * @returns {number|boolean}\r\n */\r\nconst later = (fn, delay = 300) => {\r\n  if (!isFunction(fn)) {\r\n    return false\r\n  }\r\n\r\n  return setTimeout(() => {\r\n    fn()\r\n  }, delay)\r\n}\r\n\r\nexport default later\r\n","import toString from '../lang/toString'\r\n\r\n/**\r\n * 检测数据是否为 Array 类型\r\n * ========================================================================\r\n * @method isArray\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isArray = (o) => {\r\n  if (Array.isArray) {\r\n    return Array.isArray(o)\r\n  } else {\r\n    return toString.apply(o) === '[object Array]'\r\n  }\r\n}\r\n\r\nexport default isArray\r\n","/**\r\n * 检测数据是否为 HTMLElement DOM 节点\r\n * ========================================================================\r\n * @method isElement\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isElement = (o) => {\r\n  return o && o.nodeName && o.tagName && o.nodeType === 1\r\n}\r\n\r\nexport default isElement\r\n","import hasOwn from '../lang/hasOwn'\r\nimport isArray from '../types/isArray'\r\nimport isElement from '../types/isElement'\r\nimport setAttribute from './setAttribute'\r\n\r\n/**\r\n * 创建 DOM 节点，并添加属性和子节点\r\n * ========================================================================\r\n * @method createElement\r\n * @param {String} tagName - 标签名称\r\n * @param {Object} attributes - 属性对象\r\n * @param {Array} children - 子节点数组\r\n * @returns {HTMLElement}\r\n */\r\nconst createElement = (tagName, attributes, children) => {\r\n  const keys = Object.keys(attributes)\r\n  let element = document.createElement(tagName)\r\n\r\n  keys.forEach((attr) => {\r\n    if (hasOwn(attributes, attr)) {\r\n      setAttribute(element, attr, attributes[attr])\r\n    }\r\n  })\r\n\r\n  if (isArray(children)) {\r\n    children.forEach((child) => {\r\n      let childNode = isElement(child) ? child : document.createTextNode(child)\r\n\r\n      element.appendChild(childNode)\r\n    })\r\n  }\r\n\r\n  return element\r\n}\r\n\r\nexport default createElement\r\n","/**\r\n * 给 DOM 节点设置属性/值\r\n * ========================================================================\r\n * @method setAttribute\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} attr - 属性名称\r\n * @param {String|Number|Boolean} value - 属性值\r\n */\r\nconst setAttribute = (el, attr, value) => {\r\n  let tagName = el.tagName.toLowerCase()\r\n\r\n  switch (attr) {\r\n    case 'style':\r\n      el.style.cssText = value\r\n      break\r\n    case 'value':\r\n      if (tagName === 'input' || tagName === 'textarea') {\r\n        el.value = value\r\n      } else {\r\n        el.setAttribute(attr, value)\r\n      }\r\n      break\r\n    case 'className':\r\n      el.className = value\r\n      break\r\n    default:\r\n      el.setAttribute(attr, value)\r\n      break\r\n  }\r\n}\r\n\r\nexport default setAttribute\r\n","/**\r\n * 检测 DOM 节点是否包含名为 className 的样式\r\n * ========================================================================\r\n * @method hasClass\r\n * @param {HTMLElement|Object} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {*}\r\n */\r\nconst hasClass = (el, className) => {\r\n  let allClass = el.className\r\n\r\n  if (!allClass) {\r\n    return false\r\n  }\r\n\r\n  return allClass.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'))\r\n}\r\n\r\nexport default hasClass\r\n","import hasClass from './hasClass'\r\n\r\n/**\r\n * 给 DOM 节点添加名为 className 的样式\r\n * ========================================================================\r\n * @method addClass\r\n * @param {HTMLElement|Object} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst addClass = (el, className) => {\r\n  let allClass = el.className\r\n\r\n  if (hasClass(el, className)) {\r\n    return false\r\n  }\r\n\r\n  allClass += allClass.length > 0 ? ' ' + className : className\r\n\r\n  el.className = allClass\r\n}\r\n\r\nexport default addClass\r\n","import trim from '../lang/trim'\r\nimport hasClass from './hasClass'\r\n\r\n/**\r\n * 移除 DOM 节点的 className 样式\r\n * ========================================================================\r\n * @method removeClass\r\n * @param {HTMLElement|Object} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst removeClass = (el, className) => {\r\n  let allClass = el.className\r\n\r\n  if (!allClass || !hasClass(el, className)) {\r\n    return false\r\n  }\r\n\r\n  allClass = trim(allClass.replace(className, ''))\r\n\r\n  el.className = allClass\r\n}\r\n\r\nexport default removeClass\r\n","import isString from '../types/isString'\r\n\r\n/**\r\n * 清楚字符串起始位置所有的空格\r\n * ========================================================================\r\n * @method trim\r\n * @param {string} str\r\n * @returns {string|Boolean}\r\n */\r\nconst trim = (str) => {\r\n  if (!isString(str)) {\r\n    return false\r\n  }\r\n  return str.replace(/^\\s+|\\s+$/g, '')\r\n}\r\n\r\nexport default trim\r\n","/**\r\n * 获取 options 节点下匹配 selector 选择器的 DOM 节点\r\n * ========================================================================\r\n * Element.matches() 方法可以用来判断 DOM 元素是否与给定的选择器匹配，事件代理判断是\r\n * 否触发绑定的代理事件回调函数，关键就是使用 Element.matches() 辨别当前事件触发的目\r\n * 标 DOM 元素是否为事件代理所期望触发的目标。\r\n * ========================================================================\r\n * @method matches\r\n * @see https://developer.mozilla.org/en-US/docs/web/api/element/matches\r\n * @param {HTMLElement} el - （必须）DOM 元素\r\n * @param {String} selector - （必须）匹配 DOM 元素的选择器\r\n * @returns {Boolean}\r\n */\r\nconst matches = (el, selector = '') => {\r\n  const sel = selector.replace(/^>/i, '')\r\n\r\n  if (!selector || !sel || !el) {\r\n    return false\r\n  }\r\n\r\n  /* istanbul ignore else */\r\n  if (el.matches) {\r\n    return el.matches(sel)\r\n  } else if (el.msMatchesSelector) {\r\n    return el.msMatchesSelector(sel)\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport default matches\r\n","/**\r\n * 获取 DOM 元素的父节点\r\n * ========================================================================\r\n * @method getParentOrHost\r\n * @param {*|HTMLElement} el - （必须）要获取父节点的 DOM 元素\r\n * @returns {*|HTMLElement}\r\n */\r\nconst getParentOrHost = (el) => {\r\n  return el.host && el !== document && el.host.nodeType\r\n    ? el.host\r\n    : el.parentNode\r\n}\r\n\r\nexport default getParentOrHost\r\n","export const CAPTURE_EVENTS = [\r\n  'focusout',\r\n  'blur',\r\n  'focusin',\r\n  'focus',\r\n  'load',\r\n  'unload',\r\n  'mouseenter',\r\n  'mouseleave'\r\n]\r\n","import { CAPTURE_EVENTS } from './enum'\r\nimport _delete from './_delete'\r\n\r\n/**\r\n * （私有方法）取消 type 类型的代理事件绑定\r\n * ========================================================================\r\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\r\n * ========================================================================\r\n * @method _off\r\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\r\n * @param {String} type - （必须）事件类型\r\n * @param {Function} fn - （必须）事件处理器回调函数\r\n * @private\r\n */\r\nconst _off = (el, type, fn) => {\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n\r\n  /* istanbul ignore else */\r\n  if (fn._delegateListener) {\r\n    fn = fn._delegateListener\r\n    delete fn._delegateListener\r\n  }\r\n\r\n  // 移除缓存的 _listeners 数据\r\n  _delete(el, type, fn)\r\n\r\n  el.removeEventListener(type, fn, capture)\r\n}\r\n\r\nexport default _off\r\n","/**\r\n * 删除 DOM 元素缓存的 _listeners 数据\r\n * ========================================================================\r\n * @method _delete\r\n * @param {HTMLElement} el - 要删除 listener 的 DOM 元素\r\n * @param {String} type - 事件类型（名称）\r\n * @param {Function} [fn] - 事件处理器回调函数\r\n */\r\nconst _delete = function (el, type, fn) {\r\n  const listeners = el._listeners\r\n  let index = -1\r\n\r\n  if (listeners.length < 1) {\r\n    return false\r\n  }\r\n\r\n  // 移除缓存的 _listeners 数据\r\n  listeners.forEach((listener, i) => {\r\n    const handler = listener.fn\r\n\r\n    if (type === listener.type) {\r\n      index = i\r\n\r\n      if (handler === fn) {\r\n        index = i\r\n      }\r\n    }\r\n  })\r\n\r\n  /* istanbul ignore else */\r\n  if (index > -1) {\r\n    listeners.splice(index, 1)\r\n  }\r\n}\r\n\r\nexport default _delete\r\n","import isString from '../types/isString'\r\nimport isElement from '../types/isElement'\r\nimport getListeners from './getListeners'\r\nimport _off from './_off'\r\n\r\n/**\r\n * 销毁（type 类型的）代理事件绑定\r\n * ========================================================================\r\n * 1. 设置了事件类型 type，则销毁指定类型的事件绑定，否则清除所有代理事件绑定\r\n * 2. recurse 设置为 true，递归销毁子节点全部事件绑定\r\n * ========================================================================\r\n * @method purgeElement\r\n * @param {HTMLElement|String} el - （必须）DOM 元素或者其选择器\r\n * @param {String|Boolean} type - （必须）事件类型\r\n * @param {Boolean} [recurse] - （可选）是否递归销毁子节点所有事件绑定\r\n */\r\nconst purgeElement = function (el, type, recurse = false) {\r\n  const $element = isString(el) ? document.querySelector(el) : el\r\n  const $children = $element.childNodes\r\n  const listeners = getListeners($element, type)\r\n\r\n  listeners.forEach((listener) => {\r\n    _off($element, listener.type, listener.fn)\r\n  })\r\n\r\n  if (\r\n    (recurse || type === true || arguments.length === 1) &&\r\n    $element &&\r\n    $children\r\n  ) {\r\n    $children.forEach(($child) => {\r\n      if (isElement($child)) {\r\n        purgeElement($child, type, recurse)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default purgeElement\r\n","import isString from '../types/isString'\r\n\r\n/**\r\n * 获取 DOM 元素（type 事件类型）事件绑定信息\r\n * ========================================================================\r\n * 如果设置了事件类型 type， 则返回指定类型的事件绑定信息，否则返回所有事件绑定信息\r\n * ========================================================================\r\n * @methods getListeners\r\n * @param {HTMLElement} el - （必须）要获取事件绑定信息的 DOM 元素\r\n * @param {String} [type] - （可选）事件类型\r\n * @returns {Array} - 已绑定的事件信息\r\n */\r\nconst getListeners = (el, type) => {\r\n  let listeners = el._listeners || []\r\n\r\n  if (isString(type) && type) {\r\n    listeners = listeners.filter((listener) => {\r\n      return listener.type === type\r\n    })\r\n  }\r\n\r\n  return listeners\r\n}\r\n\r\nexport default getListeners\r\n","import purgeElement from './purgeElement'\r\nimport isFunction from '../types/isFunction'\r\nimport _off from './_off'\r\n\r\n/**\r\n * 取消 type 类型的代理事件绑定\r\n * ========================================================================\r\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\r\n * ========================================================================\r\n * @method off\r\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\r\n * @param {String} type - （必须）事件类型\r\n * @param {Function} [fn] - （可选）事件处理器回调函数\r\n */\r\nconst off = (el, type, fn) => {\r\n  // 如果不设置 fn 参数，默认清除 el 元素上绑定的所有事件处理器\r\n  if (!isFunction(fn)) {\r\n    return purgeElement(el, type)\r\n  }\r\n\r\n  _off(el, type, fn)\r\n}\r\n\r\nexport default off\r\n","import closest from '../dom/closest'\r\nimport off from './off'\r\nimport getTarget from './getTarget'\r\n\r\nimport { CAPTURE_EVENTS } from './enum'\r\n\r\n/**\r\n * 绑定代理事件\r\n * ========================================================================\r\n * @method on\r\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\r\n * @param {String} selector - （必须）事件代理目标 DOM 元素的选择器\r\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\r\n * @param {Function|Object} fn - （可选） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\r\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\r\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\r\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\r\n * @param {Boolean} once - （可选）是否仅触发一次\r\n */\r\nconst on = (el, selector, type, fn, data, context, once = false) => {\r\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n\r\n  const listener = function (evt) {\r\n    const target = getTarget(evt)\r\n    // 通过 Element.matches 方法获得点击的目标元素\r\n    const delegateTarget = closest(target, selector, el)\r\n    let overrideContext = context || el\r\n\r\n    evt.delegateTarget = delegateTarget\r\n\r\n    // 当设置为 true 时，则事件处理器回调函数的\r\n    // this 上下文指向为 data 对象\r\n    if (context === true) {\r\n      overrideContext = data\r\n    }\r\n\r\n    /* istanbul ignore else */\r\n    if (delegateTarget) {\r\n      // 仅触发一次\r\n      /* istanbul ignore else */\r\n      if (once === true) {\r\n        off(el, type, listener)\r\n      }\r\n\r\n      fn.call(overrideContext, evt, data)\r\n    }\r\n  }\r\n\r\n  if (!el._listeners) {\r\n    el._listeners = []\r\n  }\r\n\r\n  // 缓存 options 元素绑定的事件处理器\r\n  el._listeners.push({\r\n    el,\r\n    selector,\r\n    type,\r\n    fn: listener,\r\n    data,\r\n    context,\r\n    capture\r\n  })\r\n\r\n  // 缓存包装后的事件处理器\r\n  fn._delegateListener = listener\r\n\r\n  el.addEventListener(type, listener, capture)\r\n}\r\n\r\nexport default on\r\n","import resolveTextNode from '../dom/resolveTextNode'\r\n\r\n/**\r\n * 返回触发事件的 target DOM 元素\r\n * ========================================================================\r\n * @method getTarget\r\n * @param {Event} evt - Event 对象\r\n * @return {HTMLElement} - Event 对象的 target DOM 元素\r\n */\r\nconst getTarget = function (evt) {\r\n  const target = evt.target\r\n\r\n  return resolveTextNode(target)\r\n}\r\n\r\nexport default getTarget\r\n","/**\r\n * 在某些情况下，某些浏览器（例如：Safari 浏览器）会返回实际的目标元素内部的文本节点。\r\n * resolveTextNode() 方法则会返回实际的目标节点。\r\n * ========================================================================\r\n * @method resolveTextNode\r\n * @param {HTMLElement|Text} el - 要解析的节点\r\n * @return {*|HTMLElement} - 实际的目标 DOM 节点\r\n */\r\nconst resolveTextNode = function (el) {\r\n  if (el && el.nodeType === 3) {\r\n    return el.parentNode\r\n  }\r\n\r\n  return el\r\n}\r\n\r\nexport default resolveTextNode\r\n","import matches from './matches'\r\nimport getParentOrHost from './getParentOrHost'\r\n\r\n/**\r\n * 获取 options 元素父元素最近的包含 selector 选择器的元素\r\n * ========================================================================\r\n * @method closest\r\n * @param {HTMLElement} el - （必须）DOM 元素\r\n * @param {String} selector - （必须）DOM 元素的选择其\r\n * @param {HTMLElement} [ctx] - （必须）比对的 DOM 元素\r\n * @param {Boolean} [includeCTX] - （必须）是否包含 context DOM 元素\r\n * @returns {null|HTMLElement} - 返回最接近的 DOM 元素\r\n */\r\nconst closest = (el, selector, ctx, includeCTX) => {\r\n  const context = ctx || document\r\n\r\n  if (!el) {\r\n    return null\r\n  }\r\n\r\n  do {\r\n    /* istanbul ignore else */\r\n    if (\r\n      (selector != null &&\r\n        (selector[0] === '>'\r\n          ? el.parentNode === context && matches(el, selector)\r\n          : matches(el, selector))) ||\r\n      (includeCTX && el === context)\r\n    ) {\r\n      return el\r\n    }\r\n\r\n    /* istanbul ignore else */\r\n    if (el === context) {\r\n      break\r\n    }\r\n\r\n    /* jshint boss:true */\r\n  } while ((el = getParentOrHost(el)))\r\n}\r\n\r\nexport default closest\r\n","import { createSvgIcon } from './utils/icons'\r\nimport createElement from './utils/dom/createElement'\r\nimport addClass from './utils/dom/addClass'\r\n\r\nconst _createButton = (button) => {\r\n  const $icon = createSvgIcon(button.icon, button.size)\r\n  const $anchor = createElement(\r\n    'a',\r\n    {\r\n      className: `outline-toolbar__anchor`,\r\n      href: button.link\r\n    },\r\n    [$icon]\r\n  )\r\n  const $button = createElement(\r\n    'div',\r\n    {\r\n      className: `outline-toolbar__button ${button.name}`\r\n    },\r\n    [button.link ? $anchor : $icon]\r\n  )\r\n\r\n  addClass($icon, 'outline-toolbar__icon')\r\n\r\n  if (button.disabled) {\r\n    addClass($button, 'outline-toolbar_disabled')\r\n  }\r\n\r\n  return $button\r\n}\r\n\r\nexport default _createButton\r\n","import isArray from './types/isArray'\r\n\r\n/**\r\n * 绘制 SVG Sprites 图标集\r\n * ========================================================================\r\n * @method paintSvgSprites\r\n * @param {Array} [symbols] - （可选）symbols 图标数组\r\n *                             传递 symbols - 绘制 symbols + SYMBOLS 的图标集\r\n *                             不传递 symbols - 仅绘制默认 SYMBOLS 图标集\r\n */\r\nexport const paintSvgSprites = (symbols = []) => {\r\n  const SYMBOLS = [\r\n    '<symbol id=\"outline-icon-up\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 261.696c0.832-0.448 1.536-1.216 2.368-1.536a38.72 38.72 0 0 1 46.08 8.256l277.824 302.272a41.92 41.92 0 0 1-1.536 58.048 39.104 39.104 0 0 1-56.448-1.6L513.728 355.904 260.736 626.048a39.104 39.104 0 0 1-56.448 1.088 41.6 41.6 0 0 1-1.088-57.984L483.84 269.696c0.512-0.512 1.344-0.768 1.92-1.408l1.088-1.344c2.368-2.496 5.312-3.648 8-5.248z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-down\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 762.304c0.832 0.448 1.536 1.216 2.368 1.536 15.232 7.488 33.92 4.992 46.08-8.256l277.824-302.272a41.92 41.92 0 0 0-1.536-58.048 39.104 39.104 0 0 0-56.448 1.6l-249.344 271.232-252.992-270.144a39.104 39.104 0 0 0-56.448-1.088 41.6 41.6 0 0 0-1.088 57.984l280.576 299.456c0.512 0.512 1.344 0.768 1.92 1.408l1.088 1.344c2.368 2.496 5.312 3.648 8 5.248z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-menu\" viewBox=\"0 0 1024 1024\"><path d=\"M320 256h640V128H320zM320 576h640V448H320zM320 896h640v-128H320zM64 256h128V128H64zM64 576h128V448H64zM64 896h128v-128H64z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-hash\" viewBox=\"0 0 24 24\"><path d=\"M14.216 10l-0.444 4h-3.988l0.444-4zM15.006 2.89l-0.568 5.11h-3.988l0.543-4.89c0.061-0.549-0.335-1.043-0.883-1.104s-1.043 0.335-1.104 0.884l-0.568 5.11h-4.438c-0.552 0-1 0.448-1 1s0.448 1 1 1h4.216l-0.444 4h-3.772c-0.552 0-1 0.448-1 1s0.448 1 1 1h3.549l-0.543 4.89c-0.061 0.549 0.335 1.043 0.883 1.104s1.043-0.335 1.104-0.883l0.569-5.111h3.988l-0.543 4.89c-0.061 0.549 0.335 1.043 0.883 1.104s1.043-0.335 1.104-0.883l0.568-5.111h4.438c0.552 0 1-0.448 1-1s-0.448-1-1-1h-4.216l0.444-4h3.772c0.552 0 1-0.448 1-1s-0.448-1-1-1h-3.549l0.543-4.89c0.061-0.549-0.335-1.043-0.883-1.104s-1.043 0.335-1.104 0.883z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-close\" viewBox=\"0 0 1024 1024\"><path d=\"M536.96 491.648L310.592 265.344a32 32 0 1 0-45.248 45.248L491.584 536.96l-226.304 226.304a32 32 0 0 0 45.312 45.248l226.24-226.304 226.304 226.304a32 32 0 0 0 45.248-45.248L582.144 536.896l226.304-226.24a32 32 0 0 0-45.248-45.248L536.896 491.584z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-homepage\" viewBox=\"0 0 26 28\"><path d=\"M22 15.5v7.5c0 0.547-0.453 1-1 1h-6v-6h-4v6h-6c-0.547 0-1-0.453-1-1v-7.5c0-0.031 0.016-0.063 0.016-0.094l8.984-7.406 8.984 7.406c0.016 0.031 0.016 0.063 0.016 0.094zM25.484 14.422l-0.969 1.156c-0.078 0.094-0.203 0.156-0.328 0.172h-0.047c-0.125 0-0.234-0.031-0.328-0.109l-10.813-9.016-10.813 9.016c-0.109 0.078-0.234 0.125-0.375 0.109-0.125-0.016-0.25-0.078-0.328-0.172l-0.969-1.156c-0.172-0.203-0.141-0.531 0.063-0.703l11.234-9.359c0.656-0.547 1.719-0.547 2.375 0l3.813 3.187v-3.047c0-0.281 0.219-0.5 0.5-0.5h3c0.281 0 0.5 0.219 0.5 0.5v6.375l3.422 2.844c0.203 0.172 0.234 0.5 0.063 0.703z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-tags\" viewBox=\"0 0 24 28\"><path d=\"M7 7c0-1.109-0.891-2-2-2s-2 0.891-2 2 0.891 2 2 2 2-0.891 2-2zM23.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578s-1.047-0.219-1.406-0.578l-11.172-11.188c-0.797-0.781-1.422-2.297-1.422-3.406v-6.5c0-1.094 0.906-2 2-2h6.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422zM29.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578-0.812 0-1.219-0.375-1.75-0.922l7.344-7.344c0.359-0.359 0.578-0.875 0.578-1.406s-0.219-1.047-0.578-1.422l-11.172-11.156c-0.797-0.797-2.312-1.422-3.422-1.422h3.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422z\"></path><path d=\"M12 2c6.625 0 12 5.375 12 12 0 5.297-3.437 9.797-8.203 11.391-0.609 0.109-0.828-0.266-0.828-0.578 0-0.391 0.016-1.687 0.016-3.297 0-1.125-0.375-1.844-0.812-2.219 2.672-0.297 5.484-1.313 5.484-5.922 0-1.313-0.469-2.375-1.234-3.219 0.125-0.313 0.531-1.531-0.125-3.187-1-0.313-3.297 1.234-3.297 1.234-0.953-0.266-1.984-0.406-3-0.406s-2.047 0.141-3 0.406c0 0-2.297-1.547-3.297-1.234-0.656 1.656-0.25 2.875-0.125 3.187-0.766 0.844-1.234 1.906-1.234 3.219 0 4.594 2.797 5.625 5.469 5.922-0.344 0.313-0.656 0.844-0.766 1.609-0.688 0.313-2.438 0.844-3.484-1-0.656-1.141-1.844-1.234-1.844-1.234-1.172-0.016-0.078 0.734-0.078 0.734 0.781 0.359 1.328 1.75 1.328 1.75 0.703 2.141 4.047 1.422 4.047 1.422 0 1 0.016 1.937 0.016 2.234 0 0.313-0.219 0.688-0.828 0.578-4.766-1.594-8.203-6.094-8.203-11.391 0-6.625 5.375-12 12-12zM4.547 19.234c0.031-0.063-0.016-0.141-0.109-0.187-0.094-0.031-0.172-0.016-0.203 0.031-0.031 0.063 0.016 0.141 0.109 0.187 0.078 0.047 0.172 0.031 0.203-0.031zM5.031 19.766c0.063-0.047 0.047-0.156-0.031-0.25-0.078-0.078-0.187-0.109-0.25-0.047-0.063 0.047-0.047 0.156 0.031 0.25 0.078 0.078 0.187 0.109 0.25 0.047zM5.5 20.469c0.078-0.063 0.078-0.187 0-0.297-0.063-0.109-0.187-0.156-0.266-0.094-0.078 0.047-0.078 0.172 0 0.281s0.203 0.156 0.266 0.109zM6.156 21.125c0.063-0.063 0.031-0.203-0.063-0.297-0.109-0.109-0.25-0.125-0.313-0.047-0.078 0.063-0.047 0.203 0.063 0.297 0.109 0.109 0.25 0.125 0.313 0.047zM7.047 21.516c0.031-0.094-0.063-0.203-0.203-0.25-0.125-0.031-0.266 0.016-0.297 0.109s0.063 0.203 0.203 0.234c0.125 0.047 0.266 0 0.297-0.094zM8.031 21.594c0-0.109-0.125-0.187-0.266-0.172-0.141 0-0.25 0.078-0.25 0.172 0 0.109 0.109 0.187 0.266 0.172 0.141 0 0.25-0.078 0.25-0.172zM8.937 21.438c-0.016-0.094-0.141-0.156-0.281-0.141-0.141 0.031-0.234 0.125-0.219 0.234 0.016 0.094 0.141 0.156 0.281 0.125s0.234-0.125 0.219-0.219z\"></path></symbol>',\r\n    '<symbol id=\"outline-icon-issues\" viewBox=\"0 0 26 28\"><path d=\"M25.5 15c0 0.547-0.453 1-1 1h-3.5c0 1.953-0.422 3.422-1.047 4.531l3.25 3.266c0.391 0.391 0.391 1.016 0 1.406-0.187 0.203-0.453 0.297-0.703 0.297s-0.516-0.094-0.703-0.297l-3.094-3.078s-2.047 1.875-4.703 1.875v-14h-2v14c-2.828 0-4.891-2.063-4.891-2.063l-2.859 3.234c-0.203 0.219-0.469 0.328-0.75 0.328-0.234 0-0.469-0.078-0.672-0.25-0.406-0.375-0.438-1-0.078-1.422l3.156-3.547c-0.547-1.078-0.906-2.469-0.906-4.281h-3.5c-0.547 0-1-0.453-1-1s0.453-1 1-1h3.5v-4.594l-2.703-2.703c-0.391-0.391-0.391-1.016 0-1.406s1.016-0.391 1.406 0l2.703 2.703h13.188l2.703-2.703c0.391-0.391 1.016-0.391 1.406 0s0.391 1.016 0 1.406l-2.703 2.703v4.594h3.5c0.547 0 1 0.453 1 1zM18 6h-10c0-2.766 2.234-5 5-5s5 2.234 5 5z\"></path></symbol>'\r\n  ]\r\n  const sprites =\r\n    isArray(symbols) && symbols.length > 0 ? SYMBOLS.concat(symbols) : SYMBOLS\r\n  const $body = document.body\r\n  let $icons = document.querySelector('#svg-sprites')\r\n\r\n  if ($icons) {\r\n    $icons.innerHTML = sprites.join('')\r\n  } else {\r\n    $icons = document.createElement('div')\r\n    $icons.innerHTML =\r\n      `<svg id=\"svg-sprites\" aria-hidden=\"true\" style=\"position:absolute;display:none;width:0;height:0;overflow:hidden;\">` +\r\n      `${sprites.join('')}` +\r\n      `</svg>`\r\n    $body.insertBefore($icons.firstChild, $body.firstChild)\r\n  }\r\n}\r\n\r\n/**\r\n * 创建 SVG 图标 DOM 元素\r\n * ========================================================================\r\n * @method createSvgIcon\r\n * @param {String} name\r\n * @param {Number|String|Array} [size]\r\n * @param {String} [color]\r\n * @param {String} [iconSet]\r\n * @returns {HTMLElement}\r\n */\r\nexport const createSvgIcon = (\r\n  name,\r\n  size = 0,\r\n  color = '',\r\n  iconSet = 'outline'\r\n) => {\r\n  const binds = iconSet\r\n    ? `xlink:href=\"#${iconSet}-icon-${name}\"`\r\n    : `xlink:href=\"#icon-${name}\"`\r\n  const width = isArray(size) ? size[0] : size\r\n  const height = isArray(size) ? size[1] : size\r\n  const defaultRules = size ? `width:${width}px;height:${height}px;` : ''\r\n  const cssRules = color ? defaultRules + `color:${color}` : defaultRules\r\n  const svg =\r\n    `<svg aria-hidden=\"true\" class=\"outline-icon__svg\" style=\"${cssRules}\">` +\r\n    `<use ${binds}></use>` +\r\n    `</svg>`\r\n  const $icon = document.createElement('i')\r\n\r\n  $icon.className = 'outline-icon'\r\n  $icon.innerHTML = svg\r\n\r\n  return $icon\r\n}\r\n","import Base from './base'\r\n\r\nimport isFunction from './utils/types/isFunction'\r\nimport later from './utils/lang/later'\r\nimport createElement from './utils/dom/createElement'\r\nimport addClass from './utils/dom/addClass'\r\nimport hasClass from './utils/dom/hasClass'\r\nimport removeClass from './utils/dom/removeClass'\r\nimport on from './utils/event/on'\r\nimport off from './utils/event/off'\r\nimport { paintSvgSprites } from './utils/icons'\r\n\r\nimport _createButton from './_createButton'\r\n\r\nconst DISABLED = 'outline-toolbar_disabled'\r\nconst HIDDEN = 'outline-toolbar_hidden'\r\n\r\nclass Toolbar extends Base {\r\n  constructor(options) {\r\n    super()\r\n\r\n    this.attrs = Toolbar.DEFAULTS\r\n    this.$el = null\r\n    this.disabled = false\r\n    this.closed = false\r\n    this.buttons = []\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    let created\r\n\r\n    this.attr(options)\r\n    created = this.attr('created')\r\n    this.disabled = this.attr('disabled')\r\n    this.closed = this.attr('closed')\r\n\r\n    if (isFunction(created)) {\r\n      created.call(this)\r\n    }\r\n\r\n    this.render().addListeners()\r\n\r\n    return this\r\n  }\r\n\r\n  isDisabled(name) {\r\n    const buttons = this.attr('buttons')\r\n    let button\r\n\r\n    if (name) {\r\n      button = buttons.find((option) => option.name === name)\r\n\r\n      return !!(button && button.disabled)\r\n    }\r\n\r\n    return this.disabled\r\n  }\r\n\r\n  isClosed() {\r\n    return this.closed\r\n  }\r\n\r\n  highlight(name) {\r\n    const button = this.buttons.find((item) => item.name === name)\r\n    const ACTIVE = 'outline-toolbar_active'\r\n    let $button\r\n\r\n    if ($button) {\r\n      return this\r\n    }\r\n\r\n    $button = button.$el\r\n\r\n    if (hasClass($button, ACTIVE)) {\r\n      removeClass($button, ACTIVE)\r\n    } else {\r\n      addClass($button, ACTIVE)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  render() {\r\n    const mounted = this.attr('mounted')\r\n    const buttons = this.attr('buttons') || []\r\n    const placement = this.attr('placement')\r\n    const $buttons = []\r\n\r\n    paintSvgSprites()\r\n\r\n    buttons.forEach((button) => {\r\n      const $button = _createButton(button)\r\n\r\n      $buttons.push($button)\r\n      this.buttons.push({\r\n        name: button.name,\r\n        $el: $button\r\n      })\r\n    })\r\n\r\n    this.$el = createElement(\r\n      'div',\r\n      {\r\n        id: 'outline-toolbar',\r\n        className: `outline-toolbar outline-toolbar_${placement}`\r\n      },\r\n      $buttons\r\n    )\r\n    document.body.appendChild(this.$el)\r\n\r\n    if (this.closed) {\r\n      this.hide()\r\n    }\r\n\r\n    if (this.disabled) {\r\n      this.disable()\r\n    }\r\n\r\n    if (isFunction(mounted)) {\r\n      mounted.call(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  add(button) {\r\n    const $el = this.$el\r\n    const buttons = this.attr('buttons')\r\n    const action = button.action\r\n    let type\r\n\r\n    buttons.push(button)\r\n    $el.appendChild(_createButton(button))\r\n\r\n    if (action && isFunction(action.handler)) {\r\n      type = action.type || 'click'\r\n      on($el, `.${button.name}`, type, action.handler)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  remove(name) {\r\n    const $el = this.$el\r\n    const buttons = this.attr('buttons')\r\n    const button = buttons.find((option) => option.name === name)\r\n    let index = -1\r\n    let $button\r\n\r\n    if (!button) {\r\n      return this\r\n    }\r\n\r\n    buttons.forEach((button, i) => {\r\n      if (button.name === name) {\r\n        index = i\r\n      }\r\n    })\r\n\r\n    if (index > -1) {\r\n      this.attr().buttons.splice(index, 1)\r\n    }\r\n\r\n    $button = $el.querySelector(`.${name}`)\r\n    this.switch(name, false)\r\n    $el.removeChild($button)\r\n\r\n    return this\r\n  }\r\n\r\n  switch(name, enabled) {\r\n    const $el = this.$el\r\n    const buttons = this.attr('buttons')\r\n    const button = buttons.find((option) => option.name === name)\r\n    let action\r\n    let type\r\n    let listener\r\n    let $button\r\n\r\n    if (!button) {\r\n      return this\r\n    }\r\n\r\n    buttons.forEach((option) => {\r\n      if (option.name === name) {\r\n        button.disabled = !enabled\r\n      }\r\n    })\r\n\r\n    action = button.action\r\n    $button = $el.querySelector(`.${name}`)\r\n\r\n    if (action) {\r\n      type = action.type || 'click'\r\n      listener = action.handler\r\n    }\r\n\r\n    if (enabled) {\r\n      removeClass($button, DISABLED)\r\n\r\n      if (type && listener) {\r\n        on($el, `.${name}`, type, listener)\r\n      }\r\n    } else {\r\n      addClass($button, DISABLED)\r\n\r\n      if (type && listener) {\r\n        off($el, type, listener)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  disable(name) {\r\n    const disabled = this.attr('afterDisabled')\r\n\r\n    if (name) {\r\n      this.switch(name, false)\r\n    } else {\r\n      addClass(this.$el, DISABLED)\r\n      this.removeListeners()\r\n      this.disabled = true\r\n\r\n      if (isFunction(disabled)) {\r\n        disabled.call(this)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  enable(name) {\r\n    const enabled = this.attr('afterEnabled')\r\n\r\n    if (name) {\r\n      this.switch(name, true)\r\n    } else {\r\n      this.disabled = false\r\n      removeClass(this.$el, DISABLED)\r\n      this.addListeners()\r\n\r\n      if (isFunction(enabled)) {\r\n        enabled.call(this)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  show(name) {\r\n    const opened = this.attr('afterOpened')\r\n    const button = this.attr('buttons').find((option) => option.name === name)\r\n    const $el = this.$el\r\n    let $button\r\n\r\n    if (name) {\r\n      if (!button) {\r\n        return this\r\n      }\r\n\r\n      $button = $el.querySelector(`.${name}`)\r\n      removeClass($button, HIDDEN)\r\n    } else {\r\n      removeClass($el, HIDDEN)\r\n      this.closed = false\r\n\r\n      if (isFunction(opened)) {\r\n        later(() => {\r\n          opened.call(this)\r\n        }, 310)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  hide(name) {\r\n    const closed = this.attr('afterClosed')\r\n    const button = this.attr('buttons').find((option) => option.name === name)\r\n    const $el = this.$el\r\n    let $button\r\n\r\n    if (name) {\r\n      if (!button) {\r\n        return this\r\n      }\r\n      $button = $el.querySelector(`.${name}`)\r\n      addClass($button, HIDDEN)\r\n    } else {\r\n      addClass($el, HIDDEN)\r\n      this.closed = true\r\n\r\n      if (isFunction(closed)) {\r\n        later(() => {\r\n          closed.call(this)\r\n        }, 310)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  toggle() {\r\n    if (this.isClosed()) {\r\n      this.show()\r\n    } else {\r\n      this.hide()\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    const beforeDestroy = this.attr('beforeDestroy')\r\n    const afterDestroy = this.attr('afterDestroy')\r\n    let $el = this.$el\r\n\r\n    if (isFunction(beforeDestroy)) {\r\n      beforeDestroy.call(this)\r\n    }\r\n\r\n    this.removeListeners()\r\n    document.body.removeChild($el)\r\n    $el = null\r\n\r\n    this.attr(Toolbar.DEFAULTS)\r\n    this.disabled = false\r\n    this.closed = false\r\n    this.buttons = []\r\n\r\n    if (isFunction(afterDestroy)) {\r\n      afterDestroy.call(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  refresh() {\r\n    const $el = this.$el\r\n    const buttons = this.attr('buttons') || []\r\n\r\n    this.removeListeners()\r\n    $el.innerHTML = ''\r\n\r\n    buttons.forEach((button) => {\r\n      this.$el.appendChild(_createButton(button))\r\n    })\r\n\r\n    this.addListeners()\r\n\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    const buttons = this.attr('buttons')\r\n    const $el = this.$el\r\n\r\n    if (!buttons || buttons.length < 1) {\r\n      return this\r\n    }\r\n\r\n    buttons.forEach((button) => {\r\n      const action = button.action\r\n      const disabled = this.disabled\r\n      let type\r\n      let listener\r\n      let context\r\n\r\n      if (action) {\r\n        listener = action.handler\r\n        type = action.type || 'click'\r\n        context = action.context\r\n      }\r\n\r\n      if (isFunction(listener) && !disabled) {\r\n        on($el, `.${button.name}`, type, listener, context || this, true)\r\n      }\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    const buttons = this.attr('buttons')\r\n    const $el = this.$el\r\n\r\n    if (!buttons || buttons.length < 1) {\r\n      return this\r\n    }\r\n\r\n    buttons.forEach((button) => {\r\n      const action = button.action\r\n      const disabled = this.disabled\r\n      let type\r\n      let listener\r\n\r\n      if (action) {\r\n        listener = action.handler\r\n        type = action.type || 'click'\r\n      }\r\n\r\n      if (isFunction(listener) && !disabled) {\r\n        off($el, type, listener)\r\n      }\r\n    })\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nToolbar.DEFAULTS = {\r\n  placement: 'ltr',\r\n  closed: false,\r\n  disabled: false,\r\n  buttons: [],\r\n  created: null,\r\n  mounted: null,\r\n  afterClosed: null,\r\n  afterOpened: null,\r\n  afterDisabled: null,\r\n  afterEnabled: null,\r\n  beforeDestroy: null,\r\n  afterDestroy: null\r\n}\r\n\r\nexport default Toolbar\r\n"],"names":["isString","str","hasOwn","obj","prop","hasOwnProperty","Object","prototype","call","toString","Base","constructor","options","this","attrs","initialize","attr","render","addListeners","value","o","apply","origin","source","keys","forEach","arguments","length","destroy","removeListeners","reload","isFunction","val","later","fn","delay","setTimeout","isArray","Array","isElement","nodeName","tagName","nodeType","createElement","attributes","children","element","document","el","toLowerCase","style","cssText","setAttribute","className","child","childNode","createTextNode","appendChild","hasClass","allClass","match","RegExp","addClass","removeClass","replace","matches","selector","sel","msMatchesSelector","getParentOrHost","host","parentNode","CAPTURE_EVENTS","_off","type","capture","indexOf","_delegateListener","listeners","_listeners","index","listener","i","handler","splice","_delete","removeEventListener","purgeElement","recurse","$element","querySelector","$children","childNodes","filter","getListeners","$child","off","on","data","context","once","evt","target","getTarget","delegateTarget","ctx","includeCTX","closest","overrideContext","push","addEventListener","_createButton","button","$icon","name","size","color","iconSet","binds","width","height","defaultRules","svg","innerHTML","createSvgIcon","icon","$anchor","href","link","$button","disabled","DISABLED","HIDDEN","Toolbar","super","DEFAULTS","$el","closed","buttons","created","isDisabled","find","option","isClosed","highlight","item","ACTIVE","mounted","placement","$buttons","symbols","SYMBOLS","sprites","concat","$body","body","$icons","join","insertBefore","firstChild","paintSvgSprites","id","hide","disable","add","action","remove","switch","removeChild","enabled","enable","show","opened","toggle","beforeDestroy","afterDestroy","refresh","afterClosed","afterOpened","afterDisabled","afterEnabled"],"mappings":"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"}