{"version":3,"file":"chapters.min.js","sources":["src/utils/types/isString.js","src/utils/lang/hasOwn.js","src/utils/lang/toString.js","src/utils/types/isFunction.js","src/utils/types/isObject.js","src/base.js","src/utils/lang/extend.js","src/utils/types/isElement.js","src/utils/lang/later.js","src/utils/event/enum.js","src/utils/event/_off.js","src/utils/event/_delete.js","src/utils/event/purgeElement.js","src/utils/event/getListeners.js","src/utils/event/off.js","src/utils/event/at.js","src/utils/dom/matches.js","src/utils/dom/getParentOrHost.js","src/utils/event/on.js","src/utils/event/getTarget.js","src/utils/dom/resolveTextNode.js","src/utils/dom/closest.js","src/utils/types/isArray.js","src/utils/types/isDOM.js","src/utils/types/isHTMLCollection.js","src/utils/types/isFragment.js","src/utils/types/isTextNode.js","src/utils/dom/createElement.js","src/utils/dom/setAttribute.js","src/utils/lang/easeInQuad.js","src/utils/dom/_getScrollElement.js","src/utils/dom/hasClass.js","src/utils/dom/addClass.js","src/utils/dom/removeClass.js","src/utils/lang/trim.js","src/utils/dom/offsetTop.js","src/utils/dom/getStyle.js","src/utils/dom/setProperty.js","src/utils/observer/_subscribers.js","src/utils/observer/_hasDirectSubscribersFor.js","src/utils/observer/has.js","src/utils/observer/_hasSubscribers.js","src/utils/observer/emit.js","src/utils/types/isTypedArray.js","src/utils/lang/cloneDeep.js","src/chapters.js","src/_paintChapters.js","src/utils/dom/scrollTo.js","src/utils/dom/intersection.js","src/utils/event/stop.js"],"sourcesContent":["/**\r\n * 检测数据是否为 String 类型\r\n * ========================================================================\r\n * @method isArray\r\n * @param {*} str\r\n * @returns {boolean}\r\n */\r\nconst isString = (str) => {\r\n  return typeof str === 'string'\r\n}\r\n\r\nexport default isString\r\n","/**\r\n * 检测对象自身属性中是否具有指定的属性。\r\n * ========================================================================\r\n * @method hasOwn\r\n * @param {Object} obj - （必须）检测的目标对象\r\n * @param {String} prop - （必须）属性名\r\n * @returns {Boolean}\r\n */\r\nconst hasOwn = (obj, prop) => {\r\n  const hasOwnProperty = Object.prototype.hasOwnProperty\r\n  return obj && hasOwnProperty.call(obj, prop)\r\n}\r\n\r\nexport default hasOwn\r\n","/**\r\n * Object 对象原型上的 toString 方法\r\n * ========================================================================\r\n * @method toString\r\n * @param {*} val\r\n * @returns {string}\r\n */\r\nconst toString = (val) => {\r\n  return Object.prototype.toString.apply(val)\r\n}\r\n\r\nexport default toString\r\n","import toString from '../lang/toString'\r\n\r\n/**\r\n * 检测测试数据是否为 Function 类型\r\n * ========================================================================\r\n * @method isFunction\r\n * @param {*} val - （必须）待检测的数据\r\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\r\n */\r\nconst isFunction = (val) => {\r\n  return typeof val === 'function' || toString(val) === '[object Function]'\r\n}\r\n\r\nexport default isFunction\r\n","import toString from '../lang/toString'\r\nimport isFunction from '../types/isFunction'\r\n\r\n/**\r\n * 检测数据是否为 Object 类型\r\n * ========================================================================\r\n * @method isObject\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isObject = (o) => {\r\n  return (\r\n    (toString(o) === '[object Object]' ||\r\n      typeof o === 'object' ||\r\n      isFunction(o)) &&\r\n    o !== null\r\n  )\r\n}\r\n\r\nexport default isObject\r\n","import isString from './utils/types/isString'\r\nimport hasOwn from './utils/lang/hasOwn'\r\nimport isObject from './utils/types/isObject'\r\nimport extend from './utils/lang/extend'\r\n\r\nclass Base {\r\n  constructor(options) {\r\n    this.attrs = {}\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    this.attr(options).render().addListeners()\r\n    return this\r\n  }\r\n\r\n  attr(prop, value) {\r\n    const attrs = this.attrs\r\n\r\n    if (isString(prop)) {\r\n      // 只能扩展 attrs 中已有的属性\r\n      if (value && hasOwn(attrs, prop)) {\r\n        // 更新单个配置信息\r\n        attrs[prop] = value\r\n        return this\r\n      }\r\n\r\n      // 只传递 prop 参数，则返回对应的属性值\r\n      return attrs[prop]\r\n    } else if (isObject(prop)) {\r\n      // 批量更新配置信息\r\n      extend(attrs, prop)\r\n\r\n      return this\r\n    } else if (arguments.length === 0) {\r\n      // 不传递参数，直接返回整个\r\n      return attrs\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  render() {\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    this.removeListeners()\r\n    return this\r\n  }\r\n\r\n  reload(options) {\r\n    this.destroy().initialize(this.attr(options))\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    return this\r\n  }\r\n}\r\n\r\nexport default Base\r\n","import hasOwn from './hasOwn'\r\n\r\n/**\r\n * 扩展对象\r\n * ========================================================================\r\n * @method extend\r\n * @param {Object} origin\r\n * @param {Object} source\r\n */\r\nconst extend = (origin, source) => {\r\n  const keys = Object.keys(source)\r\n\r\n  keys.forEach((prop) => {\r\n    if (hasOwn(source, prop)) {\r\n      origin[prop] = source[prop]\r\n    }\r\n  })\r\n}\r\n\r\nexport default extend\r\n","import isObject from './isObject'\r\n\r\n/**\r\n * 检测数据是否为 HTMLElement DOM 节点\r\n * ========================================================================\r\n * @method isElement\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isElement = (o) => {\r\n  return !!(isObject(o) && o.nodeName && o.tagName && o.nodeType === 1)\r\n}\r\n\r\nexport default isElement\r\n","import isFunction from '../types/isFunction'\r\n\r\n/**\r\n * later - 延迟执行方法\r\n * ========================================================================\r\n * @method later\r\n * @param {Function} fn\r\n * @param {Number} [delay]\r\n * @returns {number|boolean}\r\n */\r\nconst later = (fn, delay = 300) => {\r\n  if (!isFunction(fn)) {\r\n    return false\r\n  }\r\n\r\n  return setTimeout(() => {\r\n    fn()\r\n  }, delay)\r\n}\r\n\r\nexport default later\r\n","export const CAPTURE_EVENTS = [\r\n  'focusout',\r\n  'blur',\r\n  'focusin',\r\n  'focus',\r\n  'load',\r\n  'unload',\r\n  'mouseenter',\r\n  'mouseleave'\r\n]\r\n","import { CAPTURE_EVENTS } from './enum'\r\nimport _delete from './_delete'\r\n\r\n/**\r\n * （私有方法）取消 type 类型的代理事件绑定\r\n * ========================================================================\r\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\r\n * ========================================================================\r\n * @method _off\r\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\r\n * @param {String} type - （必须）事件类型\r\n * @param {Function} fn - （必须）事件处理器回调函数\r\n * @private\r\n */\r\nconst _off = (el, type, fn) => {\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n\r\n  /* istanbul ignore else */\r\n  if (fn._delegateListener) {\r\n    fn = fn._delegateListener\r\n    delete fn._delegateListener\r\n  }\r\n\r\n  // 移除缓存的 _listeners 数据\r\n  _delete(el, type, fn)\r\n\r\n  el.removeEventListener(type, fn, capture)\r\n}\r\n\r\nexport default _off\r\n","/**\r\n * 删除 DOM 元素缓存的 _listeners 数据\r\n * ========================================================================\r\n * @method _delete\r\n * @param {HTMLElement} el - 要删除 listener 的 DOM 元素\r\n * @param {String} type - 事件类型（名称）\r\n * @param {Function} [fn] - 事件处理器回调函数\r\n */\r\nconst _delete = function (el, type, fn) {\r\n  const listeners = el._listeners\r\n  let index = -1\r\n\r\n  if (listeners.length < 1) {\r\n    return false\r\n  }\r\n\r\n  // 移除缓存的 _listeners 数据\r\n  listeners.forEach((listener, i) => {\r\n    const handler = listener.fn\r\n\r\n    if (type === listener.type) {\r\n      index = i\r\n\r\n      if (handler === fn) {\r\n        index = i\r\n      }\r\n    }\r\n  })\r\n\r\n  /* istanbul ignore else */\r\n  if (index > -1) {\r\n    listeners.splice(index, 1)\r\n  }\r\n}\r\n\r\nexport default _delete\r\n","import isString from '../types/isString'\r\nimport isElement from '../types/isElement'\r\nimport getListeners from './getListeners'\r\nimport _off from './_off'\r\n\r\n/**\r\n * 销毁（type 类型的）代理事件绑定\r\n * ========================================================================\r\n * 1. 设置了事件类型 type，则销毁指定类型的事件绑定，否则清除所有代理事件绑定\r\n * 2. recurse 设置为 true，递归销毁子节点全部事件绑定\r\n * ========================================================================\r\n * @method purgeElement\r\n * @param {HTMLElement|String} el - （必须）DOM 元素或者其选择器\r\n * @param {String|Boolean} type - （必须）事件类型\r\n * @param {Boolean} [recurse] - （可选）是否递归销毁子节点所有事件绑定\r\n */\r\nconst purgeElement = function (el, type, recurse = false) {\r\n  const $element = isString(el) ? document.querySelector(el) : el\r\n  const $children = $element.childNodes\r\n  const listeners = getListeners($element, type)\r\n\r\n  listeners.forEach((listener) => {\r\n    _off($element, listener.type, listener.fn)\r\n  })\r\n\r\n  if (\r\n    (recurse || type === true || arguments.length === 1) &&\r\n    $element &&\r\n    $children\r\n  ) {\r\n    $children.forEach(($child) => {\r\n      if (isElement($child)) {\r\n        purgeElement($child, type, recurse)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default purgeElement\r\n","import isString from '../types/isString'\r\n\r\n/**\r\n * 获取 DOM 元素（type 事件类型）事件绑定信息\r\n * ========================================================================\r\n * 如果设置了事件类型 type， 则返回指定类型的事件绑定信息，否则返回所有事件绑定信息\r\n * ========================================================================\r\n * @methods getListeners\r\n * @param {HTMLElement} el - （必须）要获取事件绑定信息的 DOM 元素\r\n * @param {String} [type] - （可选）事件类型\r\n * @returns {Array} - 已绑定的事件信息\r\n */\r\nconst getListeners = (el, type) => {\r\n  let listeners = el._listeners || []\r\n\r\n  if (isString(type) && type) {\r\n    listeners = listeners.filter((listener) => {\r\n      return listener.type === type\r\n    })\r\n  }\r\n\r\n  return listeners\r\n}\r\n\r\nexport default getListeners\r\n","import purgeElement from './purgeElement'\r\nimport isFunction from '../types/isFunction'\r\nimport _off from './_off'\r\n\r\n/**\r\n * 取消 type 类型的代理事件绑定\r\n * ========================================================================\r\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\r\n * ========================================================================\r\n * @method off\r\n * @param {HTMLElement|Object} el - （必须）取消事件绑定的 DOM 元素\r\n * @param {String} type - （必须）事件类型\r\n * @param {Function} [fn] - （可选）事件处理器回调函数\r\n */\r\nconst off = (el, type, fn) => {\r\n  // 如果不设置 fn 参数，默认清除 el 元素上绑定的所有事件处理器\r\n  if (!isFunction(fn)) {\r\n    return purgeElement(el, type)\r\n  }\r\n\r\n  _off(el, type, fn)\r\n}\r\n\r\nexport default off\r\n","import isFunction from '../types/isFunction'\r\nimport off from './off'\r\n\r\nimport { CAPTURE_EVENTS } from './enum'\r\n\r\n/**\r\n * 绑定事件\r\n * ========================================================================\r\n * @method at\r\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\r\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\r\n * @param {Function|Object} fn - （必须） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\r\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\r\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\r\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\r\n * @param {Boolean} once - （可选）是否仅触发一次\r\n */\r\nconst at = (el, type, fn, data, context, once = false) => {\r\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n  const listener = function (evt) {\r\n    let overrideContext = context || el\r\n\r\n    // 当设置为 true 时，则事件处理器回调函数的\r\n    // this 上下文指向为 data 对象\r\n    if (context === true) {\r\n      overrideContext = data\r\n    }\r\n\r\n    // 仅触发一次\r\n    /* istanbul ignore else */\r\n    if (once === true) {\r\n      off(el, type, listener)\r\n    }\r\n\r\n    fn.call(overrideContext, evt, data)\r\n  }\r\n\r\n  if (!isFunction(fn)) {\r\n    return false\r\n  }\r\n\r\n  if (!el._listeners) {\r\n    el._listeners = []\r\n  }\r\n\r\n  // 缓存 options 元素绑定的事件处理器\r\n  el._listeners.push({\r\n    el,\r\n    type,\r\n    fn: listener,\r\n    data,\r\n    context,\r\n    capture\r\n  })\r\n\r\n  // 缓存包装后的事件处理器\r\n  fn._delegateListener = listener\r\n\r\n  el.addEventListener(type, listener, capture)\r\n}\r\n\r\nexport default at\r\n","/**\r\n * 获取 options 节点下匹配 selector 选择器的 DOM 节点\r\n * ========================================================================\r\n * Element.matches() 方法可以用来判断 DOM 元素是否与给定的选择器匹配，事件代理判断是\r\n * 否触发绑定的代理事件回调函数，关键就是使用 Element.matches() 辨别当前事件触发的目\r\n * 标 DOM 元素是否为事件代理所期望触发的目标。\r\n * ========================================================================\r\n * @method matches\r\n * @see https://developer.mozilla.org/en-US/docs/web/api/element/matches\r\n * @param {HTMLElement} el - （必须）DOM 元素\r\n * @param {String} selector - （必须）匹配 DOM 元素的选择器\r\n * @returns {Boolean}\r\n */\r\nconst matches = (el, selector = '') => {\r\n  const sel = selector.replace(/^>/i, '')\r\n\r\n  if (!selector || !sel || !el) {\r\n    return false\r\n  }\r\n\r\n  /* istanbul ignore else */\r\n  if (el.matches) {\r\n    return el.matches(sel)\r\n  } else if (el.msMatchesSelector) {\r\n    return el.msMatchesSelector(sel)\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport default matches\r\n","/**\r\n * 获取 DOM 元素的父节点\r\n * ========================================================================\r\n * @method getParentOrHost\r\n * @param {*|HTMLElement} el - （必须）要获取父节点的 DOM 元素\r\n * @returns {*|HTMLElement}\r\n */\r\nconst getParentOrHost = (el) => {\r\n  return el.host && el !== document && el.host.nodeType\r\n    ? el.host\r\n    : el.parentNode\r\n}\r\n\r\nexport default getParentOrHost\r\n","import closest from '../dom/closest'\r\nimport off from './off'\r\nimport getTarget from './getTarget'\r\n\r\nimport { CAPTURE_EVENTS } from './enum'\r\n\r\n/**\r\n * 绑定代理事件\r\n * ========================================================================\r\n * @method on\r\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\r\n * @param {String} selector - （必须）事件代理目标 DOM 元素的选择器\r\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\r\n * @param {Function|Object} fn - （可选） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\r\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\r\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\r\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\r\n * @param {Boolean} once - （可选）是否仅触发一次\r\n */\r\nconst on = (el, selector, type, fn, data, context, once = false) => {\r\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n\r\n  const listener = function (evt) {\r\n    const target = getTarget(evt)\r\n    // 通过 Element.matches 方法获得点击的目标元素\r\n    const delegateTarget = closest(target, selector, el)\r\n    let overrideContext = context || el\r\n\r\n    evt.delegateTarget = delegateTarget\r\n\r\n    // 当设置为 true 时，则事件处理器回调函数的\r\n    // this 上下文指向为 data 对象\r\n    if (context === true) {\r\n      overrideContext = data\r\n    }\r\n\r\n    /* istanbul ignore else */\r\n    if (delegateTarget) {\r\n      // 仅触发一次\r\n      /* istanbul ignore else */\r\n      if (once === true) {\r\n        off(el, type, listener)\r\n      }\r\n\r\n      fn.call(overrideContext, evt, data)\r\n    }\r\n  }\r\n\r\n  if (!el._listeners) {\r\n    el._listeners = []\r\n  }\r\n\r\n  // 缓存 options 元素绑定的事件处理器\r\n  el._listeners.push({\r\n    el,\r\n    selector,\r\n    type,\r\n    fn: listener,\r\n    data,\r\n    context,\r\n    capture\r\n  })\r\n\r\n  // 缓存包装后的事件处理器\r\n  fn._delegateListener = listener\r\n\r\n  el.addEventListener(type, listener, capture)\r\n}\r\n\r\nexport default on\r\n","import resolveTextNode from '../dom/resolveTextNode'\r\n\r\n/**\r\n * 返回触发事件的 target DOM 元素\r\n * ========================================================================\r\n * @method getTarget\r\n * @param {Event} evt - Event 对象\r\n * @return {HTMLElement} - Event 对象的 target DOM 元素\r\n */\r\nconst getTarget = function (evt) {\r\n  const target = evt.target\r\n\r\n  return resolveTextNode(target)\r\n}\r\n\r\nexport default getTarget\r\n","/**\r\n * 在某些情况下，某些浏览器（例如：Safari 浏览器）会返回实际的目标元素内部的文本节点。\r\n * resolveTextNode() 方法则会返回实际的目标节点。\r\n * ========================================================================\r\n * @method resolveTextNode\r\n * @param {HTMLElement|Text} el - 要解析的节点\r\n * @return {*|HTMLElement} - 实际的目标 DOM 节点\r\n */\r\nconst resolveTextNode = function (el) {\r\n  if (el && el.nodeType === 3) {\r\n    return el.parentNode\r\n  }\r\n\r\n  return el\r\n}\r\n\r\nexport default resolveTextNode\r\n","import matches from './matches'\r\nimport getParentOrHost from './getParentOrHost'\r\n\r\n/**\r\n * 获取 options 元素父元素最近的包含 selector 选择器的元素\r\n * ========================================================================\r\n * @method closest\r\n * @param {HTMLElement} el - （必须）DOM 元素\r\n * @param {String} selector - （必须）DOM 元素的选择其\r\n * @param {HTMLElement} [ctx] - （必须）比对的 DOM 元素\r\n * @param {Boolean} [includeCTX] - （必须）是否包含 context DOM 元素\r\n * @returns {null|HTMLElement} - 返回最接近的 DOM 元素\r\n */\r\nconst closest = (el, selector, ctx, includeCTX) => {\r\n  const context = ctx || document\r\n\r\n  if (!el) {\r\n    return null\r\n  }\r\n\r\n  do {\r\n    /* istanbul ignore else */\r\n    if (\r\n      (selector != null &&\r\n        (selector.startsWith('>')\r\n          ? el.parentNode === context && matches(el, selector)\r\n          : matches(el, selector))) ||\r\n      (includeCTX && el === context)\r\n    ) {\r\n      return el\r\n    }\r\n\r\n    /* istanbul ignore else */\r\n    if (el === context) {\r\n      break\r\n    }\r\n\r\n    /* jshint boss:true */\r\n  } while ((el = getParentOrHost(el)))\r\n}\r\n\r\nexport default closest\r\n","import toString from '../lang/toString'\r\n\r\n/**\r\n * 检测数据是否为 Array 类型\r\n * ========================================================================\r\n * @method isArray\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isArray = (o) => {\r\n  if (Array.isArray) {\r\n    return Array.isArray(o)\r\n  } else {\r\n    return toString(o) === '[object Array]'\r\n  }\r\n}\r\n\r\nexport default isArray\r\n","import isObject from './isObject'\r\nimport isElement from './isElement'\r\nimport isHTMLCollection from './isHTMLCollection'\r\nimport isFragment from './isFragment'\r\nimport isTextNode from './isTextNode'\r\n\r\nconst isDOM = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (isElement(el) || isHTMLCollection(el) || isFragment(el) || isTextNode(el))\r\n  )\r\n}\r\n\r\nexport default isDOM\r\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isHTMLCollection = (el) => {\r\n  return !!(isObject(el) && toString(el) === '[object NodeList]')\r\n}\r\n\r\nexport default isHTMLCollection\r\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isFragment = (fragment) => {\r\n  return !!(\r\n    isObject(fragment) && toString(fragment) === '[object DocumentFragment]'\r\n  )\r\n}\r\n\r\nexport default isFragment\r\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isTextNode = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (toString(el) === '[object Text]' || (el.tagName && el.nodeType === 3))\r\n  )\r\n}\r\n\r\nexport default isTextNode\r\n","import hasOwn from '../lang/hasOwn'\r\nimport isObject from '../types/isObject'\r\nimport isString from '../types/isString'\r\nimport isArray from '../types/isArray'\r\nimport isDOM from '../types/isDOM'\r\nimport setAttribute from './setAttribute'\r\n\r\n/**\r\n * 创建 DOM 节点，并添加属性和子节点\r\n * ========================================================================\r\n * @method createElement\r\n * @param {String} tagName - 标签名称\r\n * @param {Object|Array} attrs - 属性对象或者子节点\r\n * @param {Array} [children] - 子节点数组\r\n * @returns {HTMLElement}\r\n */\r\nconst createElement = (tagName, attrs, children) => {\r\n  const $fragment = document.createDocumentFragment()\r\n  const $el = document.createElement(tagName)\r\n  const isValidChild = (child) => {\r\n    return isDOM(child) || isString(child)\r\n  }\r\n  const append = (child) => {\r\n    let $child\r\n\r\n    if (!isValidChild(child)) {\r\n      return false\r\n    }\r\n\r\n    if (isDOM(child)) {\r\n      $child = child\r\n    } else if (isString(child)) {\r\n      $child = document.createTextNode(child)\r\n    }\r\n\r\n    $fragment.appendChild($child)\r\n  }\r\n\r\n  if (isObject(attrs)) {\r\n    Object.keys(attrs).forEach((attr) => {\r\n      if (hasOwn(attrs, attr)) {\r\n        setAttribute($el, attr, attrs[attr])\r\n      }\r\n    })\r\n  } else if (isArray(attrs) && attrs.every((attr) => isValidChild(attr))) {\r\n    attrs.forEach((child) => {\r\n      append(child)\r\n    })\r\n  }\r\n\r\n  if (isArray(children)) {\r\n    children.forEach((child) => {\r\n      append(child)\r\n    })\r\n  } else {\r\n    append(children)\r\n  }\r\n\r\n  $el.appendChild($fragment)\r\n\r\n  return $el\r\n}\r\n\r\nexport default createElement\r\n","/**\r\n * 给 DOM 节点设置属性/值\r\n * ========================================================================\r\n * @method setAttribute\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} attr - 属性名称\r\n * @param {String|Number|Boolean} value - 属性值\r\n */\r\nconst setAttribute = (el, attr, value) => {\r\n  let tagName = el.tagName.toLowerCase()\r\n\r\n  switch (attr) {\r\n    case 'style':\r\n      el.style.cssText = value\r\n      break\r\n    case 'value':\r\n      if (tagName === 'input' || tagName === 'textarea') {\r\n        el.value = value\r\n      } else {\r\n        el.setAttribute(attr, value)\r\n      }\r\n      break\r\n    case 'className':\r\n      el.className = value\r\n      break\r\n    default:\r\n      el.setAttribute(attr, value)\r\n      break\r\n  }\r\n}\r\n\r\nexport default setAttribute\r\n","/**\r\n * 返回给定值的平方值\r\n * ========================================================================\r\n * @method easeInQuad\r\n * @param {Number} x\r\n * @returns {number}\r\n */\r\nconst easeInQuad = (x) => {\r\n  return x * x\r\n}\r\n\r\nexport default easeInQuad\r\n","import isString from '../types/isString'\r\nimport isElement from '../types/isElement'\r\n\r\n/**\r\n * 通过给的 scrollElement 参数，获取滚动 DOM 元素\r\n * ========================================================================\r\n * @method _getScrollElement\r\n * @param {String|HTMLElement} scrollElement\r\n * @returns {Element}\r\n * @private\r\n */\r\nconst _getScrollElement = (scrollElement = null) => {\r\n  let $rootElements\r\n  let $scrollElement\r\n\r\n  if (!scrollElement) {\r\n    $rootElements = document.querySelectorAll('html,body')\r\n    $scrollElement =\r\n      $rootElements[0].scrollTop - $rootElements[1].scrollTop >= 0\r\n        ? $rootElements[0]\r\n        : $rootElements[1]\r\n  } else {\r\n    if (isString(scrollElement)) {\r\n      $scrollElement = document.querySelector(scrollElement)\r\n    } else if (isElement(scrollElement)) {\r\n      $scrollElement = scrollElement\r\n    }\r\n  }\r\n\r\n  return $scrollElement\r\n}\r\n\r\nexport default _getScrollElement\r\n","import isElement from '../types/isElement'\r\n/**\r\n * 检测 DOM 节点是否包含名为 className 的样式\r\n * ========================================================================\r\n * @method hasClass\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst hasClass = (el, className) => {\r\n  const pattern = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)')\r\n  let allClass\r\n  let classList\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  allClass = el.className\r\n\r\n  if (!allClass) {\r\n    return false\r\n  }\r\n\r\n  classList = el.classList\r\n\r\n  if (classList?.contains) {\r\n    return el.classList.contains(className)\r\n  }\r\n\r\n  return !!pattern.exec(allClass)\r\n}\r\n\r\nexport default hasClass\r\n","import hasClass from './hasClass'\r\n\r\n/**\r\n * 给 DOM 节点添加名为 className 的样式\r\n * ========================================================================\r\n * @method addClass\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst addClass = (el, className) => {\r\n  let classList\r\n  let allClass\r\n\r\n  if (hasClass(el, className)) {\r\n    return false\r\n  }\r\n\r\n  classList = el.classList\r\n\r\n  if (classList?.add) {\r\n    classList.add(className)\r\n  } else {\r\n    allClass = el.className\r\n    allClass += allClass.length > 0 ? ' ' + className : className\r\n    el.className = allClass\r\n  }\r\n}\r\n\r\nexport default addClass\r\n","import trim from '../lang/trim'\r\nimport hasClass from './hasClass'\r\n\r\n/**\r\n * 移除 DOM 节点的 className 样式\r\n * ========================================================================\r\n * @method removeClass\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst removeClass = (el, className) => {\r\n  let allClass = el.className\r\n  let classList\r\n\r\n  if (!allClass || !hasClass(el, className)) {\r\n    return false\r\n  }\r\n\r\n  classList = el.classList\r\n\r\n  if (classList?.remove) {\r\n    classList.remove(className)\r\n  } else {\r\n    allClass = trim(allClass.replace(className, ''))\r\n    el.className = allClass\r\n  }\r\n}\r\n\r\nexport default removeClass\r\n","import isString from '../types/isString'\r\n\r\n/**\r\n * 清楚字符串起始位置所有的空格\r\n * ========================================================================\r\n * @method trim\r\n * @param {string} str\r\n * @returns {string|Boolean}\r\n */\r\nconst trim = (str) => {\r\n  if (!isString(str)) {\r\n    return false\r\n  }\r\n  return str.replace(/(^\\s+)|(\\s+$)/g, '')\r\n}\r\n\r\nexport default trim\r\n","/**\r\n * 获取 DOM 节点相对于窗口的 left （纵坐标）值\r\n * ========================================================================\r\n * @method offsetTop\r\n * @param {HTMLElement} el - DOM 节点\r\n * @returns {Number}\r\n */\r\nconst offsetTop = (el) => {\r\n  let top = el.offsetTop\r\n\r\n  if (el.offsetParent !== null) {\r\n    top += offsetTop(el.offsetParent)\r\n  }\r\n\r\n  return top\r\n}\r\n\r\nexport default offsetTop\r\n","/**\r\n * 获取HTML元素的某个CSS样式值\r\n * ====================================================\r\n * @param el\r\n * @param ruleName\r\n * @returns {*}\r\n */\r\nconst getStyle = (el, ruleName) => {\r\n  return getComputedStyle(el)[ruleName]\r\n}\r\n\r\nexport default getStyle\r\n","const setProperty = (prop, value) => {\r\n  const documentElement = document.documentElement\r\n  documentElement.style.setProperty(prop, value)\r\n}\r\n\r\nexport default setProperty\r\n","/**\r\n * 存储订阅者（主题和处理器的）私有对象\r\n * ========================================================================\r\n * @type {{}}\r\n * @private\r\n */\r\nconst _subscribers = {}\r\n\r\nexport default _subscribers\r\n","import _subscribers from './_subscribers'\r\nimport hasOwn from '../lang/hasOwn'\r\n\r\n/**\r\n * 判断是否存在与给定 topic 完全匹配的订阅者信息\r\n * ========================================================================\r\n * @method _hasDirectSubscribersFor\r\n * @param {String} topic - （必须）订阅主题字符串\r\n * @returns {Boolean}\r\n */\r\nconst _hasDirectSubscribersFor = (topic) => {\r\n  return hasOwn(_subscribers, topic) && _subscribers[topic].length > 0\r\n}\r\n\r\nexport default _hasDirectSubscribersFor\r\n","import _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\r\nimport _hasSubscribers from './_hasSubscribers'\r\n\r\n/**\r\n * 判断是否存在包含 topic 指定的订阅者信息\r\n * ========================================================================\r\n * @method has\r\n * @param {String} topic - （必须）主题名称\r\n * @param {Boolean} [isDirect] - （可选）是否为直接的主题，默认值：true\r\n * @returns {Boolean}\r\n */\r\nconst has = (topic, isDirect = true) => {\r\n  return isDirect ? _hasDirectSubscribersFor(topic) : _hasSubscribers(topic)\r\n}\r\n\r\nexport default has\r\n","import _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\r\n\r\n/**\r\n * 判断是否存在包含给定 topic 相关的订阅者信息\r\n * ========================================================================\r\n * @method _hasSubscribers\r\n * @param {String} topic - （必须）订阅主题字符串\r\n * @returns {Boolean}\r\n */\r\nconst _hasSubscribers = (topic) => {\r\n  let found = _hasDirectSubscribersFor(topic)\r\n  let position = topic.lastIndexOf('.')\r\n\r\n  while (!found && position !== -1) {\r\n    topic = topic.substring(0, position)\r\n    position = topic.lastIndexOf('.')\r\n    found = _hasDirectSubscribersFor(topic)\r\n  }\r\n\r\n  return found\r\n}\r\n\r\nexport default _hasSubscribers\r\n","import isTypedArray from '../types/isTypedArray'\r\nimport _subscribers from './_subscribers'\r\nimport has from './has'\r\nimport _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\r\n\r\n/**\r\n * （异步）发布订阅主题信息\r\n * ========================================================================\r\n * 主题默认是异步发布的。确保在消费者处理主题时，主题的发起者不会被阻止。\r\n * ========================================================================\r\n * @method emit\r\n * @param {String} topic - （必须）主题名称\r\n * @param {Object} data - （必须）数据对象\r\n * @param {Boolean} async - (可选) 是否异步发布\r\n */\r\nconst emit = (topic, data, async = true) => {\r\n  const execute = (topic) => {\r\n    if (!_hasDirectSubscribersFor(topic)) {\r\n      return false\r\n    }\r\n\r\n    _subscribers[topic].forEach((subscriber) => {\r\n      // 针对 mqtt 消息服务返回的 Uint8Array 类似的 typed arrays 格式的数据\r\n      // 采用 toString() 方法转化为普通（JSON）字符串\r\n      const message = isTypedArray(data) ? data.toString() : data\r\n\r\n      subscriber.callback.call(subscriber.context || subscriber, message)\r\n    })\r\n  }\r\n  const deliver = () => {\r\n    let subscriber = topic\r\n    let position = topic.lastIndexOf('.')\r\n\r\n    while (position !== -1) {\r\n      subscriber = subscriber.substring(0, position)\r\n      position = subscriber.lastIndexOf('.')\r\n\r\n      execute(subscriber)\r\n    }\r\n\r\n    // 执行 topic 对应的处理器\r\n    execute(topic)\r\n    // 执行特殊 topic：'*'（监听全部消息的发布）\r\n    execute('*')\r\n  }\r\n\r\n  if (!has(topic)) {\r\n    return false\r\n  }\r\n\r\n  if (async) {\r\n    setTimeout(deliver, 10)\r\n  } else {\r\n    deliver()\r\n  }\r\n}\r\n\r\nexport default emit\r\n","import toString from '../lang/toString'\r\n/**\r\n * 判断检测数据是否为 Typed Arrays 类型的数据\r\n * ========================================================================\r\n * @param {*} val\r\n * @returns {boolean}\r\n */\r\nconst isTypedArray = (val) => {\r\n  const TYPES = [\r\n    '[object Int8Array]',\r\n    '[object Uint8Array]',\r\n    '[object Uint8ClampedArray]',\r\n    '[object Int16Array]',\r\n    '[object Uint16Array]',\r\n    '[object Int32Array]',\r\n    '[object Uint32Array]',\r\n    '[object Float32Array]',\r\n    '[object Float64Array]',\r\n    '[object BigInt64Array]',\r\n    '[object BigUint64Array]'\r\n  ]\r\n\r\n  return TYPES.indexOf(toString(val)) > -1\r\n}\r\n\r\nexport default isTypedArray\r\n","import isArray from '../types/isArray'\r\n\r\n/**\r\n * 深拷贝对象函数\r\n * ========================================================================\r\n * @methods cloneDeep\r\n * @param {Object} obj - 深拷贝的对象\r\n * @returns {Array|Object|*}\r\n *\r\n * @example\r\n * const arr = cloneDeep([2,3,4,6])\r\n * => [2,3,4,6]\r\n */\r\nconst cloneDeep = (obj) => {\r\n  let clone\r\n\r\n  if (obj === null) {\r\n    return null\r\n  }\r\n\r\n  clone = Object.assign({}, obj)\r\n\r\n  Object.keys(clone).forEach((key) => {\r\n    return (clone[key] =\r\n      typeof obj[key] === 'object' ? cloneDeep(obj[key]) : obj[key])\r\n  })\r\n\r\n  if (isArray(obj)) {\r\n    clone.length = obj.length\r\n\r\n    return Array.from(clone)\r\n  }\r\n\r\n  return clone\r\n}\r\n\r\nexport default cloneDeep\r\n","import Base from './base'\r\n\r\nimport isString from './utils/types/isString'\r\nimport isFunction from './utils/types/isFunction'\r\nimport isElement from './utils/types/isElement'\r\nimport later from './utils/lang/later'\r\nimport at from './utils/event/at'\r\nimport on from './utils/event/on'\r\nimport off from './utils/event/off'\r\nimport stop from './utils/event/stop'\r\nimport createElement from './utils/dom/createElement'\r\nimport scrollTo from './utils/dom/scrollTo'\r\nimport addClass from './utils/dom/addClass'\r\nimport intersection from './utils/dom/intersection'\r\nimport removeClass from './utils/dom/removeClass'\r\nimport offsetTop from './utils/dom/offsetTop'\r\nimport getStyle from './utils/dom/getStyle'\r\nimport setProperty from './utils/dom/setProperty'\r\nimport publish from './utils/observer/emit'\r\nimport cloneDeep from './utils/lang/cloneDeep'\r\n\r\nimport _getScrollElement from './utils/dom/_getScrollElement'\r\nimport _paintChapters from './_paintChapters'\r\n\r\nclass Chapters extends Base {\r\n  constructor(options) {\r\n    super()\r\n\r\n    this.attrs = cloneDeep(Chapters.DEFAULTS)\r\n    this.$el = null\r\n    this.$title = null\r\n    this.$main = null\r\n    this.$list = null\r\n    this.$placeholder = null\r\n    this.$parentElement = null\r\n    this.$scrollElement = null\r\n    this.chapters = []\r\n    this.closed = false\r\n    this.active = 0\r\n    this.offsetTop = 0\r\n    this.offsetWidth = 0\r\n    this.$active = null\r\n    this.scrollTimer = null\r\n    this.resizeTimer = null\r\n    this.playing = false\r\n    this.Observer = null\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    let created\r\n    let parentElement\r\n    let scrollElement\r\n    let $parent\r\n\r\n    this.attr(options)\r\n    created = this.attr('created')\r\n    parentElement = this.attr('parentElement')\r\n    scrollElement = this.attr('scrollElement')\r\n\r\n    if (isString(parentElement)) {\r\n      $parent = document.querySelector(parentElement)\r\n    } else if (isElement(parentElement)) {\r\n      $parent = parentElement\r\n    }\r\n    this.$parentElement = $parent\r\n    this.$scrollElement = _getScrollElement(scrollElement)\r\n\r\n    this.chapters = this.attr('chapters')\r\n    this.closed = this.attr('closed')\r\n    this.active = this.attr('active')\r\n\r\n    if (isFunction(created)) {\r\n      created.call(this)\r\n    }\r\n\r\n    if (this.chapters.length < 1) {\r\n      return this\r\n    }\r\n\r\n    this.render().addListeners()\r\n\r\n    this.$active = document.querySelector(`#chapter-${this.active}`)\r\n\r\n    return this\r\n  }\r\n\r\n  isClosed() {\r\n    return this.closed\r\n  }\r\n\r\n  isSticky() {\r\n    const position = this.attr('position')\r\n    return position === 'sticky'\r\n  }\r\n\r\n  isFixed() {\r\n    const position = this.attr('position')\r\n    return position === 'fixed'\r\n  }\r\n\r\n  isInside() {\r\n    return this.isFixed() || this.isSticky()\r\n  }\r\n\r\n  isOutside() {\r\n    return !this.isInside()\r\n  }\r\n\r\n  _paintEdge() {\r\n    const $fragment = document.createDocumentFragment()\r\n    const STICKY = 'outline-chapters_sticky'\r\n    const HIDDEN = 'outline-chapters_hidden'\r\n    const title = this.attr('title')\r\n    const customClass = this.attr('customClass')\r\n    const $parentElement = this.$parentElement\r\n    const contents = []\r\n    let $title = null\r\n    let $el\r\n    let $main\r\n    let $list\r\n    let $placeholder\r\n\r\n    if (!$parentElement) {\r\n      return this\r\n    }\r\n\r\n    if (this.isInside() && title) {\r\n      $title = createElement(\r\n        'h2',\r\n        {\r\n          className: 'outline-chapters__title'\r\n        },\r\n        [title]\r\n      )\r\n      this.$title = $title\r\n      contents.push($title)\r\n    }\r\n\r\n    $list = createElement(\r\n      'ul',\r\n      {\r\n        // 为优化性能，添加了 _fixed 和 _hidden\r\n        // fixed 为了让 $list 脱离流布局\r\n        // hidden 让 $list 不可见\r\n        className: `outline-chapters__list`\r\n      },\r\n      ['']\r\n    )\r\n    this.$list = $list\r\n\r\n    $placeholder = createElement(\r\n      'div',\r\n      {\r\n        className: 'outline-chapters__placeholder'\r\n      },\r\n      ['']\r\n    )\r\n    this.$placeholder = $placeholder\r\n\r\n    $main = createElement(\r\n      'div',\r\n      {\r\n        className: 'outline-chapters__main'\r\n      },\r\n      [$list, $placeholder]\r\n    )\r\n    this.$main = $main\r\n    contents.push($main)\r\n\r\n    $el = createElement(\r\n      'nav',\r\n      {\r\n        id: 'outline-chapters',\r\n        className: `outline-chapters ${HIDDEN}`\r\n      },\r\n      contents\r\n    )\r\n    this.$el = $el\r\n\r\n    if (this.isSticky()) {\r\n      this.calculateStickyHeight()\r\n      addClass($el, STICKY)\r\n    }\r\n\r\n    if (customClass) {\r\n      addClass($el, customClass)\r\n    }\r\n    $fragment.appendChild($el)\r\n    $parentElement.appendChild($fragment)\r\n\r\n    return this\r\n  }\r\n\r\n  render() {\r\n    const HIDDEN = 'outline-chapters_hidden'\r\n    const showCode = this.attr('showCode')\r\n    const mounted = this.attr('mounted')\r\n    const $parentElement = this.$parentElement\r\n    const chapters = this.chapters\r\n    let $el\r\n    let $list\r\n\r\n    if (!$parentElement || chapters.length < 1) {\r\n      return this\r\n    }\r\n\r\n    this._paintEdge()\r\n\r\n    $el = this.$el\r\n    $list = this.$list\r\n    _paintChapters($list, chapters, showCode)\r\n    removeClass($el, HIDDEN)\r\n    this.positionPlaceholder(this.active)\r\n\r\n    this.offsetTop = offsetTop($el)\r\n    this.offsetWidth = $el.offsetWidth\r\n\r\n    if (this.isFixed()) {\r\n      this.sticky()\r\n      setProperty('--outline-chapters-width', `${this.offsetWidth}px`)\r\n    }\r\n\r\n    if (isFunction(mounted)) {\r\n      mounted.call(this)\r\n    }\r\n\r\n    this.onObserver()\r\n\r\n    return this\r\n  }\r\n\r\n  positionPlaceholder(index) {\r\n    const $main = this.$main\r\n    const $list = this.$list\r\n    const $placeholder = this.$placeholder\r\n    const $anchor = $list.querySelector('.outline-chapters__anchor')\r\n    const mainPaddingTop = parseInt(getStyle($main, 'padding-top'), 10)\r\n    const mainBorderTop = parseInt(getStyle($main, 'border-top-width'), 10)\r\n    const placeholderPaddingTop = parseInt(getStyle($list, 'padding-top'), 10)\r\n    const placeholderMarginTop = parseInt(getStyle($list, 'margin-top'), 10)\r\n    const placeholderBorderTop = parseInt(\r\n      getStyle($list, 'border-top-width'),\r\n      10\r\n    )\r\n    let height = $anchor.offsetHeight\r\n    let offsetTop = 0\r\n    let top\r\n\r\n    if (mainPaddingTop) {\r\n      offsetTop += mainPaddingTop\r\n    }\r\n\r\n    if (placeholderPaddingTop) {\r\n      offsetTop += placeholderPaddingTop\r\n    }\r\n\r\n    if (placeholderMarginTop) {\r\n      offsetTop += placeholderMarginTop\r\n    }\r\n\r\n    if (mainBorderTop) {\r\n      offsetTop += mainBorderTop\r\n    }\r\n\r\n    if (placeholderBorderTop) {\r\n      offsetTop += placeholderBorderTop\r\n    }\r\n\r\n    top = height * index\r\n    // top:calc(${offsetTop}px + ${top}px);\r\n    $placeholder.style.cssText = `transform: translateY(${\r\n      offsetTop + top\r\n    }px);height:${height}px;`\r\n\r\n    return this\r\n  }\r\n\r\n  highlight(id) {\r\n    const $anchor = this.$el.querySelector(`#chapter__anchor-${id}`)\r\n    const HIGHLIGHT = 'outline-chapters_active'\r\n\r\n    if (!$anchor) {\r\n      return this\r\n    }\r\n\r\n    if (this.$active) {\r\n      removeClass(this.$active, HIGHLIGHT)\r\n    }\r\n\r\n    this.active = parseInt($anchor.getAttribute('data-id'), 10)\r\n    this.$active = $anchor\r\n    addClass(this.$active, HIGHLIGHT)\r\n\r\n    this.positionPlaceholder(this.active)\r\n\r\n    return this\r\n  }\r\n\r\n  sticky() {\r\n    const afterSticky = this.attr('afterSticky')\r\n    const FIXED = 'outline-chapters_fixed'\r\n    const $el = this.$el\r\n    const top = this.offsetTop\r\n    const scrollTop = this.$scrollElement.scrollTop\r\n    let isStickying\r\n\r\n    if (!this.isFixed()) {\r\n      return this\r\n    }\r\n\r\n    isStickying = scrollTop >= top\r\n\r\n    if (isStickying) {\r\n      addClass($el, FIXED)\r\n    } else {\r\n      removeClass($el, FIXED)\r\n    }\r\n\r\n    if (isFunction(afterSticky)) {\r\n      afterSticky.call(this, this.isClosed(), isStickying)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  calculateStickyHeight() {\r\n    const documentElement = document.documentElement\r\n    const height = Math.max(\r\n      documentElement.clientHeight || 0,\r\n      window.innerHeight || 0\r\n    )\r\n    setProperty('--outline-sticky-height', `${height}px`)\r\n    return this\r\n  }\r\n\r\n  scrollTo(top, after) {\r\n    const el = this.$scrollElement\r\n\r\n    scrollTo(el, top, after)\r\n\r\n    return this\r\n  }\r\n\r\n  show() {\r\n    const FOLDED = 'outline-chapters_folded'\r\n    const HIDDEN = 'outline-chapters_hidden'\r\n    const opened = this.attr('afterOpened')\r\n    const $el = this.$el\r\n    const $parent = this.$parentElement\r\n\r\n    if (this.isInside()) {\r\n      removeClass($parent, HIDDEN)\r\n      removeClass($el, HIDDEN)\r\n      later(() => {\r\n        removeClass($parent, FOLDED)\r\n        removeClass($el, FOLDED)\r\n      }, 30)\r\n    } else {\r\n      removeClass($el, HIDDEN)\r\n    }\r\n    this.closed = false\r\n\r\n    if (isFunction(opened)) {\r\n      opened.call(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  hide() {\r\n    const FOLDED = 'outline-chapters_folded'\r\n    const HIDDEN = 'outline-chapters_hidden'\r\n    const closed = this.attr('afterClosed')\r\n    const $el = this.$el\r\n    const $parent = this.$parentElement\r\n\r\n    if (this.isInside()) {\r\n      addClass($parent, FOLDED)\r\n      addClass($el, FOLDED)\r\n      later(() => {\r\n        addClass($parent, HIDDEN)\r\n        addClass($el, HIDDEN)\r\n      })\r\n    } else {\r\n      addClass($el, HIDDEN)\r\n    }\r\n    this.closed = true\r\n\r\n    if (isFunction(closed)) {\r\n      closed.call(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  toggle() {\r\n    const afterToggle = this.attr('afterToggle')\r\n    const top = this.offsetTop\r\n    const scrollTop = this.$scrollElement.scrollTop\r\n    let isStickying\r\n\r\n    if (this.isClosed()) {\r\n      this.show()\r\n    } else {\r\n      this.hide()\r\n    }\r\n\r\n    if (isFunction(afterToggle)) {\r\n      later(() => {\r\n        isStickying = scrollTop >= top\r\n        afterToggle.call(this, this.isClosed(), isStickying)\r\n      })\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    const beforeDestroy = this.attr('beforeDestroy')\r\n    const afterDestroy = this.attr('afterDestroy')\r\n\r\n    if (isFunction(beforeDestroy)) {\r\n      beforeDestroy.call(this)\r\n    }\r\n\r\n    this.removeListeners()\r\n    this.$parentElement.removeChild(this.$el)\r\n\r\n    this.attr(Chapters.DEFAULTS)\r\n    this.$el = null\r\n    this.$title = null\r\n    this.$main = null\r\n    this.$list = null\r\n    this.$placeholder = null\r\n    this.$parentElement = null\r\n    this.$scrollElement = null\r\n    this.chapters = []\r\n    this.active = 0\r\n    this.offsetTop = 0\r\n    this.$active = null\r\n    this.closed = false\r\n\r\n    if (this.scrollTimer) {\r\n      clearTimeout(this.scrollTimer)\r\n      this.scrollTimer = null\r\n    }\r\n\r\n    if (this.resizeTimer) {\r\n      clearTimeout(this.resizeTimer)\r\n      this.resizeTimer = null\r\n    }\r\n\r\n    if (isFunction(afterDestroy)) {\r\n      afterDestroy.call(this)\r\n    }\r\n\r\n    if (this.Observer) {\r\n      this.Observer = null\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  onObserver() {\r\n    const selector = this.attr('selector')\r\n    let timer = null\r\n\r\n    this.Observer = intersection(\r\n      ($heading) => {\r\n        const id = $heading.getAttribute('data-id')\r\n\r\n        if (this.playing) {\r\n          return false\r\n        }\r\n\r\n        if (timer) {\r\n          clearTimeout(timer)\r\n        }\r\n\r\n        timer = later(() => {\r\n          this.highlight(id)\r\n        }, 100)\r\n      },\r\n      {\r\n        selector,\r\n        context: this\r\n      }\r\n    )\r\n\r\n    return this\r\n  }\r\n\r\n  onSelect(evt) {\r\n    const stickyHeight = this.attr('stickyHeight')\r\n    const $anchor = evt.delegateTarget\r\n    const id = $anchor.getAttribute('data-id')\r\n    const headingId = $anchor.href.split('#')[1]\r\n    const $heading = document.querySelector(`#${headingId}`)\r\n    const top = offsetTop($heading) - (stickyHeight + 10)\r\n    const min = 0\r\n    const max = this.$scrollElement.scrollHeight\r\n    const afterScroll = this.attr('afterScroll')\r\n    const after = () => {\r\n      if (isFunction(afterScroll)) {\r\n        afterScroll.call(this, 'chapter')\r\n      }\r\n\r\n      later(() => {\r\n        this.playing = false\r\n        publish('toolbar:update', {\r\n          top,\r\n          min,\r\n          max\r\n        })\r\n      })\r\n    }\r\n\r\n    this.playing = true\r\n    if (this.isFixed()) {\r\n      this.sticky()\r\n      later(() => {\r\n        this.scrollTo(top, after)\r\n        this.highlight(id)\r\n      }, 10)\r\n    } else {\r\n      this.scrollTo(top, after)\r\n      this.highlight(id)\r\n    }\r\n\r\n    stop(evt)\r\n\r\n    return this\r\n  }\r\n\r\n  onScroll() {\r\n    const $scrollElement = this.$scrollElement\r\n\r\n    if (this.scrollTimer) {\r\n      clearTimeout(this.scrollTimer)\r\n    }\r\n\r\n    this.scrollTimer = later(() => {\r\n      const top = $scrollElement.scrollTop\r\n      const min = 0\r\n      const max = $scrollElement.scrollHeight - $scrollElement.clientHeight\r\n\r\n      if (this.isFixed()) {\r\n        this.sticky()\r\n      }\r\n\r\n      publish('toolbar:update', {\r\n        top,\r\n        min,\r\n        max\r\n      })\r\n    }, 100)\r\n\r\n    return this\r\n  }\r\n\r\n  onResize() {\r\n    if (this.resizeTimer) {\r\n      clearTimeout(this.resizeTimer)\r\n    }\r\n\r\n    this.resizeTimer = later(() => {\r\n      this.calculateStickyHeight()\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    const $el = this.$el\r\n    const $scrollElement = this.$scrollElement\r\n    const tagName = $scrollElement.tagName.toLowerCase()\r\n    let $element = $scrollElement\r\n\r\n    if (tagName === 'html' || tagName === 'body') {\r\n      $element = window\r\n    }\r\n\r\n    on($el, '.outline-chapters__anchor', 'click', this.onSelect, this, true)\r\n    at($element, 'scroll', this.onScroll, this, true)\r\n    if (this.isSticky()) {\r\n      at($element, 'resize', this.onResize, this, true)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    const selector = this.attr('selector')\r\n    const $el = this.$el\r\n    const $scrollElement = this.$scrollElement\r\n    const tagName = $scrollElement.tagName.toLowerCase()\r\n    let $element = $scrollElement\r\n\r\n    if (tagName === 'html' || tagName === 'body') {\r\n      $element = window\r\n    }\r\n\r\n    off($el, 'click', this.onSelect)\r\n    off($element, 'scroll', this.onScroll)\r\n\r\n    if (this.isSticky()) {\r\n      at($element, 'resize', this.onResize)\r\n    }\r\n\r\n    if (this.Observer) {\r\n      document.querySelectorAll(selector).forEach((section) => {\r\n        this.Observer.unobserve(section)\r\n      })\r\n    }\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nChapters.DEFAULTS = {\r\n  parentElement: '',\r\n  scrollElement: '',\r\n  selector: '.outline-heading',\r\n  active: 0,\r\n  closed: false,\r\n  showCode: true,\r\n  position: 'relative',\r\n  stickyHeight: 0,\r\n  chapters: [],\r\n  created: null,\r\n  mounted: null,\r\n  afterClosed: null,\r\n  afterOpened: null,\r\n  afterScroll: null,\r\n  beforeDestroy: null,\r\n  afterDestroy: null,\r\n  afterSticky: null\r\n}\r\n\r\nexport default Chapters\r\n","import createElement from './utils/dom/createElement'\r\n\r\nconst _paintChapters = ($list, chapters, showCode = false) => {\r\n  const byId = (id) => document.querySelector(`#${id}`)\r\n\r\n  chapters.forEach((chapter) => {\r\n    const pid = chapter.pid\r\n    const id = chapter.id\r\n    const rel = chapter.rel\r\n    const $text = createElement(\r\n      'span',\r\n      {\r\n        className: 'outline-chapters__text'\r\n      },\r\n      [chapter.text]\r\n    )\r\n    const $link = createElement(\r\n      'a',\r\n      {\r\n        id: `chapter__anchor-${id}`,\r\n        className: 'outline-chapters__anchor',\r\n        href: '#' + rel,\r\n        rel: rel,\r\n        'data-id': id\r\n      },\r\n      [$text]\r\n    )\r\n    let $code\r\n    let $li\r\n    let $ul\r\n    let $parent\r\n\r\n    if (showCode) {\r\n      $code = createElement(\r\n        'span',\r\n        {\r\n          className: 'outline-chapters__code',\r\n          'data-id': id\r\n        },\r\n        [chapter.code]\r\n      )\r\n\r\n      $link.insertBefore($code, $link.firstChild)\r\n    }\r\n\r\n    $li = createElement(\r\n      'li',\r\n      {\r\n        id: `chapter-${id}`,\r\n        className: 'outline-chapters__item',\r\n        'data-id': id\r\n      },\r\n      [$link]\r\n    )\r\n\r\n    if (pid === -1) {\r\n      $list.appendChild($li)\r\n    } else {\r\n      $parent = byId(`chapter-${pid}`)\r\n      $ul = byId(`subject-${pid}`)\r\n\r\n      if (!$ul) {\r\n        $ul = createElement(\r\n          'ul',\r\n          {\r\n            id: 'subject-' + pid,\r\n            className: 'outline-chapters__subject'\r\n          },\r\n          [$li]\r\n        )\r\n\r\n        $parent.appendChild($ul)\r\n      } else {\r\n        $ul.appendChild($li)\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport default _paintChapters\r\n","import easeInQuad from '../lang/easeInQuad'\r\nimport isFunction from '../types/isFunction'\r\nimport _getScrollElement from './_getScrollElement'\r\n\r\n/**\r\n * 指定 rootElement DOM 节点滚动到指定 top 位置\r\n * ========================================================================\r\n * @method scrollTo\r\n * @param {HTMLElement|Object} [scrollElement] - （必须）要滚动的 DOM 节点\r\n * @param {Number} top - （必须）滚动的 scrollTop 数值\r\n * @param {Function} [afterStop] - （可选）滚动完成的回调函数\r\n */\r\nconst scrollTo = (scrollElement, top, afterStop) => {\r\n  const $scrollElement = _getScrollElement(scrollElement)\r\n  let scrollTop = $scrollElement.scrollTop\r\n  let step = 0\r\n  const distance = top - scrollTop\r\n  const MAX_HEIGHT = $scrollElement.scrollHeight\r\n  const MAX_TOP = top - MAX_HEIGHT <= 0 ? top : MAX_HEIGHT\r\n  const stop = (top) => {\r\n    if (isFunction(afterStop)) {\r\n      afterStop(top)\r\n    }\r\n\r\n    return false\r\n  }\r\n  const play = () => {\r\n    step += 1\r\n\r\n    // 向上滚动\r\n    if (distance < 0) {\r\n      scrollTop -= easeInQuad(step)\r\n      $scrollElement.scrollTop = scrollTop\r\n\r\n      if (scrollTop <= top) {\r\n        $scrollElement.scrollTop = top\r\n        return stop(top)\r\n      }\r\n    } else {\r\n      scrollTop += easeInQuad(step)\r\n      $scrollElement.scrollTop = scrollTop\r\n\r\n      if (scrollTop >= MAX_TOP) {\r\n        $scrollElement.scrollTop = MAX_TOP\r\n        return stop(MAX_TOP)\r\n      }\r\n    }\r\n\r\n    requestAnimationFrame(play)\r\n  }\r\n\r\n  requestAnimationFrame(play)\r\n}\r\n\r\nexport default scrollTo\r\n","import isFunction from '../types/isFunction'\r\nimport isElement from '../types/isElement'\r\n\r\n/**\r\n * 通用的 IntersectionObserver 观察者处理器\r\n * ========================================================================\r\n * @method intersection\r\n * @param {Function} fn\r\n * @param {Object} [props]\r\n * @param {Object|HTMLElement} [props.root]\r\n * @param {String} [props.selector]\r\n * @param {Object} [props.context]\r\n * @param {String} [props.attr]\r\n * @param {String} [props.rootMargin]\r\n */\r\nconst intersection = (fn, props = {}) => {\r\n  const root = props.root || null\r\n  const selector = props.selector || '.outline-heading'\r\n  const context = props.context || null\r\n  const rootMargin = props.rootMargin || '0px 0px -90% 0px'\r\n  const options = {\r\n    rootMargin: rootMargin\r\n  }\r\n  const Observer = new IntersectionObserver((entries) => {\r\n    entries.forEach((entry) => {\r\n      if (entry.intersectionRatio > 0) {\r\n        if (isFunction(fn)) {\r\n          fn.call(context || entry.target, entry.target)\r\n        }\r\n      }\r\n    })\r\n  }, options)\r\n  const $root = isElement(root) ? root : document\r\n\r\n  if (root) {\r\n    options.root = root\r\n  }\r\n\r\n  $root.querySelectorAll(selector).forEach((section) => {\r\n    Observer.observe(section)\r\n  })\r\n\r\n  return Observer\r\n}\r\n\r\nexport default intersection\r\n","/**\r\n * 停止事件（阻止默认行为和阻止事件的捕获或冒泡）\r\n * ========================================================================\r\n * @method stop\r\n * @param {Event} evt - 事件对象\r\n *\r\n * @example\r\n * <div id=\"nav\" class=\"nav\">\r\n *   <a id=\"service\" class=\"anchor\" href=\"https://www.yaohaixiao.com/serivce\">Service</a>\r\n *   <a id=\"help\" class=\"anchor\" href=\"https://www.yaohaixiao.com/help\">Help</a>\r\n * </div>\r\n *\r\n * const $nav = document.querySelector('#nav')\r\n * const $service = document.querySelector('.anchor')\r\n *\r\n * on($nav, 'click', function(evt) {\r\n *   console.log('你点击了导航栏')\r\n * })\r\n *\r\n * on($anchor, 'click', function(evt) {\r\n *   console.log('tagName', this.tagName)\r\n *\r\n *   // 工作台输出：'a'\r\n *   // 不会触发事件冒泡，输出：'你点击了导航栏'\r\n *   // 也不会切换到 href 属性的页面，阻止了点击链接的默认行为\r\n *   stopEvent(evt)\r\n * })\r\n */\r\nconst stop = function (evt) {\r\n  evt.stopPropagation()\r\n  evt.preventDefault()\r\n}\r\n\r\nexport default stop\r\n"],"names":["isString","str","hasOwn","obj","prop","hasOwnProperty","Object","prototype","call","toString","val","apply","isFunction","isObject","o","Base","constructor","options","this","attrs","initialize","attr","render","addListeners","value","origin","source","keys","forEach","arguments","length","destroy","removeListeners","reload","isElement","nodeName","tagName","nodeType","later","fn","delay","setTimeout","CAPTURE_EVENTS","_off","el","type","capture","indexOf","_delegateListener","listeners","_listeners","index","listener","i","handler","splice","_delete","removeEventListener","purgeElement","recurse","$element","document","querySelector","$children","childNodes","filter","getListeners","$child","off","at","data","context","once","evt","overrideContext","push","addEventListener","matches","selector","sel","replace","msMatchesSelector","getParentOrHost","host","parentNode","on","target","getTarget","delegateTarget","ctx","includeCTX","startsWith","closest","isArray","Array","isDOM","isHTMLCollection","fragment","isTextNode","createElement","children","$fragment","createDocumentFragment","$el","isValidChild","child","append","createTextNode","appendChild","toLowerCase","style","cssText","setAttribute","className","every","easeInQuad","x","_getScrollElement","scrollElement","$rootElements","$scrollElement","querySelectorAll","scrollTop","hasClass","pattern","RegExp","allClass","classList","contains","exec","addClass","add","removeClass","remove","offsetTop","top","offsetParent","getStyle","ruleName","getComputedStyle","setProperty","documentElement","_subscribers","_hasDirectSubscribersFor","topic","has","isDirect","found","position","lastIndexOf","substring","_hasSubscribers","emit","async","execute","subscriber","message","callback","deliver","cloneDeep","clone","assign","key","from","Chapters","super","DEFAULTS","$title","$main","$list","$placeholder","$parentElement","chapters","closed","active","offsetWidth","$active","scrollTimer","resizeTimer","playing","Observer","created","parentElement","$parent","isClosed","isSticky","isFixed","isInside","isOutside","_paintEdge","title","customClass","contents","id","calculateStickyHeight","showCode","mounted","byId","chapter","pid","rel","$text","text","$link","href","$code","$li","$ul","code","insertBefore","firstChild","_paintChapters","positionPlaceholder","sticky","onObserver","$anchor","mainPaddingTop","parseInt","mainBorderTop","placeholderPaddingTop","placeholderMarginTop","placeholderBorderTop","height","offsetHeight","highlight","HIGHLIGHT","getAttribute","afterSticky","FIXED","isStickying","Math","max","clientHeight","window","innerHeight","scrollTo","after","afterStop","step","distance","MAX_HEIGHT","scrollHeight","MAX_TOP","stop","play","requestAnimationFrame","show","FOLDED","HIDDEN","opened","hide","toggle","afterToggle","beforeDestroy","afterDestroy","removeChild","clearTimeout","timer","props","root","rootMargin","IntersectionObserver","entries","entry","intersectionRatio","$root","section","observe","intersection","$heading","onSelect","stickyHeight","headingId","split","afterScroll","publish","min","stopPropagation","preventDefault","onScroll","onResize","unobserve","afterClosed","afterOpened"],"mappings":"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"}